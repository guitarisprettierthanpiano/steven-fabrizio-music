/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={679:(e,t,n)=>{"use strict";var r=n(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?l:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var a=p(n);a&&a!==m&&e(t,a,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var i=u(t),h=u(n),v=0;v<l.length;++v){var y=l[v];if(!(o[y]||r&&r[y]||h&&h[y]||i&&i[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var l,i,u=a(e),c=1;c<arguments.length;c++){for(var s in l=Object(arguments[c]))n.call(l,s)&&(u[s]=l[s]);if(t){i=t(l);for(var f=0;f<i.length;f++)r.call(l,i[f])&&(u[i[f]]=l[i[f]])}}return u}},779:(e,t,n)=>{var r=n(173);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],o=0;o<t.length;o++)a.push(e(t[o],n,r).source);return s(new RegExp("(?:"+a.join("|")+")",f(r)),n)}(t,n,a):function(e,t,n){return d(o(e,n),t,n)}(t,n,a)},e.exports.parse=o,e.exports.compile=function(e,t){return i(o(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,l=0,i="",s=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(l,p),l=p+f.length,d)i+=d[1];else{var m=e[l],h=n[2],v=n[3],y=n[4],g=n[5],b=n[6],E=n[7];i&&(r.push(i),i="");var w=null!=h&&null!=m&&m!==h,k="+"===b||"*"===b,S="?"===b||"*"===b,C=n[2]||s,x=y||g;r.push({name:v||o++,prefix:h||"",delimiter:C,optional:S,repeat:k,partial:w,asterisk:!!E,pattern:x?c(x):E?".*":"[^"+u(C)+"]+?"})}}return l<e.length&&(i+=e.substr(l)),i&&r.push(i),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var o="",i=t||{},u=(a||{}).pretty?l:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=i[s.name];if(null==d){if(s.optional){s.partial&&(o+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');o+=s.prefix+f}}else o+=s}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,l="",i=0;i<e.length;i++){var c=e[i];if("string"==typeof c)l+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),l+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=u(n.delimiter||"/"),h=l.slice(-m.length)===m;return a||(l=(h?l.slice(0,-m.length):l)+"(?:"+m+"(?=$))?"),l+=o?"$":a&&h?"":"(?="+m+"|$)",s(new RegExp("^"+l,f(n)),t)}},173:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),o=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,m={},h={};function v(e,t,n,r,a,o,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=l}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function E(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(h,e)||!p.call(m,e)&&(d.test(e)?h[e]=!0:(m[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=60103,S=60106,C=60107,x=60108,P=60114,N=60109,_=60110,T=60112,L=60113,M=60120,O=60115,I=60116,R=60121,z=60128,A=60129,F=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var U=Symbol.for;k=U("react.element"),S=U("react.portal"),C=U("react.fragment"),x=U("react.strict_mode"),P=U("react.profiler"),N=U("react.provider"),_=U("react.context"),T=U("react.forward_ref"),L=U("react.suspense"),M=U("react.suspense_list"),O=U("react.memo"),I=U("react.lazy"),R=U("react.block"),U("react.scope"),z=U("react.opaque.id"),A=U("react.debug_trace_mode"),F=U("react.offscreen"),D=U("react.legacy_hidden")}var B,j="function"==typeof Symbol&&Symbol.iterator;function $(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=j&&e[j]||e["@@iterator"])?e:null}function V(e){if(void 0===B)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);B=t&&t[1]||""}return"\n"+B+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),l=a.length-1,i=o.length-1;1<=l&&0<=i&&a[l]!==o[i];)i--;for(;1<=l&&0<=i;l--,i--)if(a[l]!==o[i]){if(1!==l||1!==i)do{if(l--,0>--i||a[l]!==o[i])return"\n"+a[l].replace(" at new "," at ")}while(1<=l&&0<=i);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?V(e):""}function Q(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case C:return"Fragment";case S:return"Portal";case P:return"Profiler";case x:return"StrictMode";case L:return"Suspense";case M:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case N:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case O:return q(e.type);case R:return q(e._render);case I:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function G(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=G(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=G(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function J(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&E(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&J(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function le(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var me,he,ve=(he=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return he(e,t)}))}:he);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function Ee(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function we(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=Ee(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var ke=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(ke[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function Ce(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Pe=null,Ne=null,_e=null;function Te(e){if(e=Zr(e)){if("function"!=typeof Pe)throw Error(l(280));var t=e.stateNode;t&&(t=ta(t),Pe(e.stateNode,e.type,t))}}function Le(e){Ne?_e?_e.push(e):_e=[e]:Ne=e}function Me(){if(Ne){var e=Ne,t=_e;if(_e=Ne=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Oe(e,t){return e(t)}function Ie(e,t,n,r,a){return e(t,n,r,a)}function Re(){}var ze=Oe,Ae=!1,Fe=!1;function De(){null===Ne&&null===_e||(Re(),Me())}function Ue(e,t){var n=e.stateNode;if(null===n)return null;var r=ta(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var Be=!1;if(f)try{var je={};Object.defineProperty(je,"passive",{get:function(){Be=!0}}),window.addEventListener("test",je,je),window.removeEventListener("test",je,je)}catch(he){Be=!1}function $e(e,t,n,r,a,o,l,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Ve=!1,He=null,We=!1,Qe=null,qe={onError:function(e){Ve=!0,He=e}};function Ke(e,t,n,r,a,o,l,i,u){Ve=!1,He=null,$e.apply(qe,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Xe(e){if(Ge(e)!==e)throw Error(l(188))}function Je(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Xe(a),e;if(o===r)return Xe(a),t;o=o.sibling}throw Error(l(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,ot=[],lt=null,it=null,ut=null,ct=new Map,st=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function mt(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function ht(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=pt(t,n,r,a,o),null!==t&&null!==(t=Zr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function vt(e){var t=Jr(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){yt(e)&&n.delete(t)}function bt(){for(at=!1;0<ot.length;){var e=ot[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&ot.shift()}null!==lt&&yt(lt)&&(lt=null),null!==it&&yt(it)&&(it=null),null!==ut&&yt(ut)&&(ut=null),ct.forEach(gt),st.forEach(gt)}function Et(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,bt)))}function wt(e){function t(t){return Et(t,e)}if(0<ot.length){Et(ot[0],e);for(var n=1;n<ot.length;n++){var r=ot[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==lt&&Et(lt,e),null!==it&&Et(it,e),null!==ut&&Et(ut,e),ct.forEach(t),st.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)vt(n),null===n.blockedOn&&ft.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var St={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},Ct={},xt={};function Pt(e){if(Ct[e])return Ct[e];if(!St[e])return e;var t,n=St[e];for(t in n)if(n.hasOwnProperty(t)&&t in xt)return Ct[e]=n[t];return e}f&&(xt=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Nt=Pt("animationend"),_t=Pt("animationiteration"),Tt=Pt("animationstart"),Lt=Pt("transitionend"),Mt=new Map,Ot=new Map,It=["abort","abort",Nt,"animationEnd",_t,"animationIteration",Tt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Lt,"transitionEnd","waiting","waiting"];function Rt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Ot.set(r,t),Mt.set(r,a),c(a,[r])}}(0,o.unstable_now)();var zt=8;function At(e){if(0!=(1&e))return zt=15,1;if(0!=(2&e))return zt=14,2;if(0!=(4&e))return zt=13,4;var t=24&e;return 0!==t?(zt=12,t):0!=(32&e)?(zt=11,32):0!=(t=192&e)?(zt=10,t):0!=(256&e)?(zt=9,256):0!=(t=3584&e)?(zt=8,t):0!=(4096&e)?(zt=7,4096):0!=(t=4186112&e)?(zt=6,t):0!=(t=62914560&e)?(zt=5,t):67108864&e?(zt=4,67108864):0!=(134217728&e)?(zt=3,134217728):0!=(t=805306368&e)?(zt=2,t):0!=(1073741824&e)?(zt=1,1073741824):(zt=8,e)}function Ft(e,t){var n=e.pendingLanes;if(0===n)return zt=0;var r=0,a=0,o=e.expiredLanes,l=e.suspendedLanes,i=e.pingedLanes;if(0!==o)r=o,a=zt=15;else if(0!=(o=134217727&n)){var u=o&~l;0!==u?(r=At(u),a=zt):0!=(i&=o)&&(r=At(i),a=zt)}else 0!=(o=n&~l)?(r=At(o),a=zt):0!==i&&(r=At(i),a=zt);if(0===r)return 0;if(r=n&((0>(r=31-Vt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&l)){if(At(t),a<=zt)return t;zt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Vt(t)),r|=e[n],t&=~a;return r}function Dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ut(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Bt(24&~t))?Ut(10,t):e;case 10:return 0===(e=Bt(192&~t))?Ut(8,t):e;case 8:return 0===(e=Bt(3584&~t))&&0===(e=Bt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Bt(805306368&~t))&&(t=268435456),t}throw Error(l(358,e))}function Bt(e){return e&-e}function jt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function $t(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Vt(t)]=n}var Vt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/Wt|0)|0},Ht=Math.log,Wt=Math.LN2,Qt=o.unstable_UserBlockingPriority,qt=o.unstable_runWithPriority,Kt=!0;function Gt(e,t,n,r){Ae||Re();var a=Xt,o=Ae;Ae=!0;try{Ie(a,e,t,n,r)}finally{(Ae=o)||De()}}function Yt(e,t,n,r){qt(Qt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var a;if(Kt)if((a=0==(4&t))&&0<ot.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),ot.push(e);else{var o=Jt(e,t,n,r);if(null===o)a&&mt(e,r);else{if(a){if(-1<dt.indexOf(e))return e=pt(o,e,t,n,r),void ot.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return lt=ht(lt,e,t,n,r,a),!0;case"dragenter":return it=ht(it,e,t,n,r,a),!0;case"mouseover":return ut=ht(ut,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return ct.set(o,ht(ct.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,st.set(o,ht(st.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;mt(e,r)}Mr(e,t,r,null,n)}}}function Jt(e,t,n,r){var a=xe(r);if(null!==(a=Jr(a))){var o=Ge(a);if(null===o)a=null;else{var l=o.tag;if(13===l){if(null!==(a=Ye(o)))return a;a=null}else if(3===l){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Mr(e,t,r,a,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===a[o-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function on(){return!1}function ln(e){function t(t,n,r,a,o){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(a):a[l]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:on,this.isPropagationStopped=on,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,cn,sn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=a({},fn,{view:0,detail:0}),mn=ln(pn),hn=a({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Pn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(un=e.screenX-sn.screenX,cn=e.screenY-sn.screenY):cn=un=0,sn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),vn=ln(hn),yn=ln(a({},hn,{dataTransfer:0})),gn=ln(a({},pn,{relatedTarget:0})),bn=ln(a({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),En=ln(a({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=ln(a({},fn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function Pn(){return xn}var Nn=ln(a({},pn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Pn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),_n=ln(a({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tn=ln(a({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Pn})),Ln=ln(a({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Mn=ln(a({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),On=[9,13,27,32],In=f&&"CompositionEvent"in window,Rn=null;f&&"documentMode"in document&&(Rn=document.documentMode);var zn=f&&"TextEvent"in window&&!Rn,An=f&&(!In||Rn&&8<Rn&&11>=Rn),Fn=String.fromCharCode(32),Dn=!1;function Un(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jn=!1,$n={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!$n[e.type]:"textarea"===t}function Hn(e,t,n,r){Le(r),0<(t=Ir(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,Qn=null;function qn(e){xr(e,0)}function Kn(e){if(X(ea(e)))return e}function Gn(e,t){if("change"===e)return t}var Yn=!1;if(f){var Xn;if(f){var Jn="oninput"in document;if(!Jn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Jn="function"==typeof Zn.oninput}Xn=Jn}else Xn=!1;Yn=Xn&&(!document.documentMode||9<document.documentMode)}function er(){Wn&&(Wn.detachEvent("onpropertychange",tr),Qn=Wn=null)}function tr(e){if("value"===e.propertyName&&Kn(Qn)){var t=[];if(Hn(t,Qn,e,xe(e)),e=qn,Ae)e(t);else{Ae=!0;try{Oe(e,t)}finally{Ae=!1,De()}}}}function nr(e,t,n){"focusin"===e?(er(),Qn=n,(Wn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Qn)}function ar(e,t){if("click"===e)return Kn(t)}function or(e,t){if("input"===e||"change"===e)return Kn(t)}var lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function ur(e,t){if(lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!lr(e[n[r]],t[n[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=J((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,vr=null,yr=null,gr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;gr||null==hr||hr!==J(r)||(r="selectionStart"in(r=hr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=Ir(vr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}Rt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Rt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Rt(It,2);for(var Er="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<Er.length;wr++)Ot.set(Er[wr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Cr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,i,u,c){if(Ke.apply(this,arguments),Ve){if(!Ve)throw Error(l(198));var s=He;Ve=!1,He=null,We||(We=!0,Qe=s)}}(r,t,void 0,e),e.currentTarget=null}function xr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,i,c),o=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,c=i.currentTarget,i=i.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,i,c),o=u}}}if(We)throw e=Qe,We=!1,Qe=null,e}function Pr(e,t){var n=na(t),r=e+"__bubble";n.has(r)||(Lr(t,e,2,!1),n.add(r))}var Nr="_reactListening"+Math.random().toString(36).slice(2);function _r(e){e[Nr]||(e[Nr]=!0,i.forEach((function(t){Sr.has(t)||Tr(t,!1,e,null),Tr(t,!0,e,null)})))}function Tr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Sr.has(e)){if("scroll"!==e)return;a|=2,o=r}var l=na(o),i=e+"__"+(t?"capture":"bubble");l.has(i)||(t&&(a|=4),Lr(o,e,a,t),l.add(i))}function Lr(e,t,n,r){var a=Ot.get(t);switch(void 0===a?2:a){case 0:a=Gt;break;case 1:a=Yt;break;default:a=Xt}n=a.bind(null,t,n,e),a=void 0,!Be||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Mr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;l=l.return}for(;null!==i;){if(null===(l=Jr(i)))return;if(5===(u=l.tag)||6===u){r=o=l;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Fe)return e();Fe=!0;try{ze(e,t,n)}finally{Fe=!1,De()}}((function(){var r=o,a=xe(n),l=[];e:{var i=Mt.get(e);if(void 0!==i){var u=dn,c=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Nn;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Tn;break;case Nt:case _t:case Tt:u=bn;break;case Lt:u=Ln;break;case"scroll":u=mn;break;case"wheel":u=Mn;break;case"copy":case"cut":case"paste":u=En;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=_n}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,m=r;null!==m;){var h=(p=m).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==d&&null!=(h=Ue(m,d))&&s.push(Or(m,h,p))),f)break;m=m.return}0<s.length&&(i=new u(i,c,null,n,a),l.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Jr(c)&&!c[Yr])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Jr(c):null)&&(c!==(f=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=vn,h="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(s=_n,h="onPointerLeave",d="onPointerEnter",m="pointer"),f=null==u?i:ea(u),p=null==c?i:ea(c),(i=new s(h,m+"leave",u,n,a)).target=f,i.relatedTarget=p,h=null,Jr(a)===r&&((s=new s(d,m+"enter",c,n,a)).target=p,s.relatedTarget=f,h=s),f=h,u&&c)e:{for(d=c,m=0,p=s=u;p;p=Rr(p))m++;for(p=0,h=d;h;h=Rr(h))p++;for(;0<m-p;)s=Rr(s),m--;for(;0<p-m;)d=Rr(d),p--;for(;m--;){if(s===d||null!==d&&s===d.alternate)break e;s=Rr(s),d=Rr(d)}s=null}else s=null;null!==u&&zr(l,i,u,s,!1),null!==c&&null!==f&&zr(l,f,c,s,!0)}if("select"===(u=(i=r?ea(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=Gn;else if(Vn(i))if(Yn)v=or;else{v=rr;var y=nr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=ar);switch(v&&(v=v(e,r))?Hn(l,v,n,a):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ae(i,"number",i.value)),y=r?ea(r):window,e){case"focusin":(Vn(y)||"true"===y.contentEditable)&&(hr=y,vr=r,yr=null);break;case"focusout":yr=vr=hr=null;break;case"mousedown":gr=!0;break;case"contextmenu":case"mouseup":case"dragend":gr=!1,br(l,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":br(l,n,a)}var g;if(In)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else jn?Un(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(An&&"ko"!==n.locale&&(jn||"onCompositionStart"!==b?"onCompositionEnd"===b&&jn&&(g=nn()):(en="value"in(Zt=a)?Zt.value:Zt.textContent,jn=!0)),0<(y=Ir(r,b)).length&&(b=new wn(b,e,null,n,a),l.push({event:b,listeners:y}),(g||null!==(g=Bn(n)))&&(b.data=g))),(g=zn?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(Dn=!0,Fn);case"textInput":return(e=t.data)===Fn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(jn)return"compositionend"===e||!In&&Un(e,t)?(e=nn(),tn=en=Zt=null,jn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return An&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Ir(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),l.push({event:a,listeners:r}),a.data=g)}xr(l,t)}))}function Or(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ir(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Ue(e,n))&&r.unshift(Or(e,o,a)),null!=(o=Ue(e,t))&&r.push(Or(e,o,a))),e=e.return}return r}function Rr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function zr(e,t,n,r,a){for(var o=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,a?null!=(u=Ue(n,o))&&l.unshift(Or(n,u,i)):a||null!=(u=Ue(n,o))&&l.push(Or(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}function Ar(){}var Fr=null,Dr=null;function Ur(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Br(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var jr="function"==typeof setTimeout?setTimeout:void 0,$r="function"==typeof clearTimeout?clearTimeout:void 0;function Vr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Hr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Qr=0,qr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+qr,Gr="__reactProps$"+qr,Yr="__reactContainer$"+qr,Xr="__reactEvents$"+qr;function Jr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Yr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[Kr])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[Kr]||e[Yr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function ta(e){return e[Gr]||null}function na(e){var t=e[Xr];return void 0===t&&(t=e[Xr]=new Set),t}var ra=[],aa=-1;function oa(e){return{current:e}}function la(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function ia(e,t){aa++,ra[aa]=e.current,e.current=t}var ua={},ca=oa(ua),sa=oa(!1),fa=ua;function da(e,t){var n=e.type.contextTypes;if(!n)return ua;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function pa(e){return null!=e.childContextTypes}function ma(){la(sa),la(ca)}function ha(e,t,n){if(ca.current!==ua)throw Error(l(168));ia(ca,t),ia(sa,n)}function va(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(l(108,q(t)||"Unknown",o));return a({},n,r)}function ya(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ua,fa=ca.current,ia(ca,e),ia(sa,sa.current),!0}function ga(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=va(e,t,fa),r.__reactInternalMemoizedMergedChildContext=e,la(sa),la(ca),ia(ca,e)):la(sa),ia(sa,n)}var ba=null,Ea=null,wa=o.unstable_runWithPriority,ka=o.unstable_scheduleCallback,Sa=o.unstable_cancelCallback,Ca=o.unstable_shouldYield,xa=o.unstable_requestPaint,Pa=o.unstable_now,Na=o.unstable_getCurrentPriorityLevel,_a=o.unstable_ImmediatePriority,Ta=o.unstable_UserBlockingPriority,La=o.unstable_NormalPriority,Ma=o.unstable_LowPriority,Oa=o.unstable_IdlePriority,Ia={},Ra=void 0!==xa?xa:function(){},za=null,Aa=null,Fa=!1,Da=Pa(),Ua=1e4>Da?Pa:function(){return Pa()-Da};function Ba(){switch(Na()){case _a:return 99;case Ta:return 98;case La:return 97;case Ma:return 96;case Oa:return 95;default:throw Error(l(332))}}function ja(e){switch(e){case 99:return _a;case 98:return Ta;case 97:return La;case 96:return Ma;case 95:return Oa;default:throw Error(l(332))}}function $a(e,t){return e=ja(e),wa(e,t)}function Va(e,t,n){return e=ja(e),ka(e,t,n)}function Ha(){if(null!==Aa){var e=Aa;Aa=null,Sa(e)}Wa()}function Wa(){if(!Fa&&null!==za){Fa=!0;var e=0;try{var t=za;$a(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),za=null}catch(t){throw null!==za&&(za=za.slice(e+1)),ka(_a,Ha),t}finally{Fa=!1}}}var Qa=w.ReactCurrentBatchConfig;function qa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ka=oa(null),Ga=null,Ya=null,Xa=null;function Ja(){Xa=Ya=Ga=null}function Za(e){var t=Ka.current;la(Ka),e.type._context._currentValue=t}function eo(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function to(e,t){Ga=e,Xa=Ya=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Il=!0),e.firstContext=null)}function no(e,t){if(Xa!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Xa=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ya){if(null===Ga)throw Error(l(308));Ya=t,Ga.dependencies={lanes:0,firstContext:t,responders:null}}else Ya=Ya.next=t;return e._currentValue}var ro=!1;function ao(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function oo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function lo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function io(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function uo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=l:o=o.next=l,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function co(e,t,n,r){var o=e.updateQueue;ro=!1;var l=o.firstBaseUpdate,i=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?l=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==l){for(d=o.baseState,i=0,f=s=c=null;;){u=l.lane;var p=l.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var m=e,h=l;switch(u=t,p=n,h.tag){case 1:if("function"==typeof(m=h.payload)){d=m.call(p,d,u);break e}d=m;break e;case 3:m.flags=-4097&m.flags|64;case 0:if(null==(u="function"==typeof(m=h.payload)?m.call(p,d,u):m))break e;d=a({},d,u);break e;case 2:ro=!0}}null!==l.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[l]:u.push(l))}else p={eventTime:p,lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(l=l.next)){if(null===(u=o.shared.pending))break;l=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(c=d),o.baseState=c,o.firstBaseUpdate=s,o.lastBaseUpdate=f,zi|=i,e.lanes=i,e.memoizedState=d}}function so(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var fo=(new r.Component).refs;function po(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var mo={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=lu(),a=iu(e),o=lo(r,a);o.payload=t,null!=n&&(o.callback=n),io(e,o),uu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=lu(),a=iu(e),o=lo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),io(e,o),uu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=lu(),r=iu(e),a=lo(n,r);a.tag=2,null!=t&&(a.callback=t),io(e,a),uu(e,r,n)}};function ho(e,t,n,r,a,o,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,l):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,o))}function vo(e,t,n){var r=!1,a=ua,o=t.contextType;return"object"==typeof o&&null!==o?o=no(o):(a=pa(t)?fa:ca.current,o=(r=null!=(r=t.contextTypes))?da(e,a):ua),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=mo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function yo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&mo.enqueueReplaceState(t,t.state,null)}function go(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=fo,ao(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=no(o):(o=pa(t)?fa:ca.current,a.context=da(e,o)),co(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(po(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&mo.enqueueReplaceState(a,a.state,null),co(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var bo=Array.isArray;function Eo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===fo&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function wo(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ko(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Bu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Hu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=Eo(e,t,n),r.return=e,r):((r=ju(n.type,n.key,n.props,null,e.mode,r)).ref=Eo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Wu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=$u(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Hu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=ju(t.type,t.key,t.props,null,e.mode,n)).ref=Eo(e,null,t),n.return=e,n;case S:return(t=Wu(t,e.mode,n)).return=e,t}if(bo(t)||$(t))return(t=$u(t,e.mode,n,null)).return=e,t;wo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?n.type===C?f(e,t,n.props.children,r,a):c(e,t,n,r):null;case S:return n.key===a?s(e,t,n,r):null}if(bo(n)||$(n))return null!==a?null:f(e,t,n,r,null);wo(e,n)}return null}function m(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return e=e.get(null===r.key?n:r.key)||null,r.type===C?f(t,e,r.props.children,a,r.key):c(t,e,r,a);case S:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(bo(r)||$(r))return f(t,e=e.get(n)||null,r,a,null);wo(t,r)}return null}function h(a,l,i,u){for(var c=null,s=null,f=l,h=l=0,v=null;null!==f&&h<i.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(a,f,i[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(a,f),l=o(y,l,h),null===s?c=y:s.sibling=y,s=y,f=v}if(h===i.length)return n(a,f),c;if(null===f){for(;h<i.length;h++)null!==(f=d(a,i[h],u))&&(l=o(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);h<i.length;h++)null!==(v=m(f,a,h,i[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),l=o(v,l,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),c}function v(a,i,u,c){var s=$(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=i,v=i=0,y=null,g=u.next();null!==h&&!g.done;v++,g=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var b=p(a,h,g.value,c);if(null===b){null===h&&(h=y);break}e&&h&&null===b.alternate&&t(a,h),i=o(b,i,v),null===f?s=b:f.sibling=b,f=b,h=y}if(g.done)return n(a,h),s;if(null===h){for(;!g.done;v++,g=u.next())null!==(g=d(a,g.value,c))&&(i=o(g,i,v),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(a,h);!g.done;v++,g=u.next())null!==(g=m(h,a,v,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?v:g.key),i=o(g,i,v),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach((function(e){return t(a,e)})),s}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===C&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case k:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===C){n(e,c.sibling),(r=a(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=a(c,o.props)).ref=Eo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===C?((r=$u(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=ju(o.type,o.key,o.props,null,e.mode,u)).ref=Eo(e,r,o),u.return=e,e=u)}return i(e);case S:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Wu(o,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Hu(o,e.mode,u)).return=e,e=r),i(e);if(bo(o))return h(e,r,o,u);if($(o))return v(e,r,o,u);if(s&&wo(e,o),void 0===o&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(l(152,q(e.type)||"Component"))}return n(e,r)}}var So=ko(!0),Co=ko(!1),xo={},Po=oa(xo),No=oa(xo),_o=oa(xo);function To(e){if(e===xo)throw Error(l(174));return e}function Lo(e,t){switch(ia(_o,t),ia(No,e),ia(Po,xo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}la(Po),ia(Po,t)}function Mo(){la(Po),la(No),la(_o)}function Oo(e){To(_o.current);var t=To(Po.current),n=pe(t,e.type);t!==n&&(ia(No,e),ia(Po,n))}function Io(e){No.current===e&&(la(Po),la(No))}var Ro=oa(0);function zo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ao=null,Fo=null,Do=!1;function Uo(e,t){var n=Du(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Bo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function jo(e){if(Do){var t=Fo;if(t){var n=t;if(!Bo(e,t)){if(!(t=Hr(n.nextSibling))||!Bo(e,t))return e.flags=-1025&e.flags|2,Do=!1,void(Ao=e);Uo(Ao,n)}Ao=e,Fo=Hr(t.firstChild)}else e.flags=-1025&e.flags|2,Do=!1,Ao=e}}function $o(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ao=e}function Vo(e){if(e!==Ao)return!1;if(!Do)return $o(e),Do=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Br(t,e.memoizedProps))for(t=Fo;t;)Uo(e,t),t=Hr(t.nextSibling);if($o(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Fo=Hr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Fo=null}}else Fo=Ao?Hr(e.stateNode.nextSibling):null;return!0}function Ho(){Fo=Ao=null,Do=!1}var Wo=[];function Qo(){for(var e=0;e<Wo.length;e++)Wo[e]._workInProgressVersionPrimary=null;Wo.length=0}var qo=w.ReactCurrentDispatcher,Ko=w.ReactCurrentBatchConfig,Go=0,Yo=null,Xo=null,Jo=null,Zo=!1,el=!1;function tl(){throw Error(l(321))}function nl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function rl(e,t,n,r,a,o){if(Go=o,Yo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qo.current=null===e||null===e.memoizedState?Tl:Ll,e=n(r,a),el){o=0;do{if(el=!1,!(25>o))throw Error(l(301));o+=1,Jo=Xo=null,t.updateQueue=null,qo.current=Ml,e=n(r,a)}while(el)}if(qo.current=_l,t=null!==Xo&&null!==Xo.next,Go=0,Jo=Xo=Yo=null,Zo=!1,t)throw Error(l(300));return e}function al(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Jo?Yo.memoizedState=Jo=e:Jo=Jo.next=e,Jo}function ol(){if(null===Xo){var e=Yo.alternate;e=null!==e?e.memoizedState:null}else e=Xo.next;var t=null===Jo?Yo.memoizedState:Jo.next;if(null!==t)Jo=t,Xo=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Xo=e).memoizedState,baseState:Xo.baseState,baseQueue:Xo.baseQueue,queue:Xo.queue,next:null},null===Jo?Yo.memoizedState=Jo=e:Jo=Jo.next=e}return Jo}function ll(e,t){return"function"==typeof t?t(e):t}function il(e){var t=ol(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Xo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=i=o=null,c=a;do{var s=c.lane;if((Go&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,o=r):u=u.next=f,Yo.lanes|=s,zi|=s}c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=i,lr(r,t.memoizedState)||(Il=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ul(e){var t=ol(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);lr(o,t.memoizedState)||(Il=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function cl(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Go&e)===e)&&(t._workInProgressVersionPrimary=r,Wo.push(t))),e)return n(t._source);throw Wo.push(t),Error(l(350))}function sl(e,t,n,r){var a=Ni;if(null===a)throw Error(l(349));var o=t._getVersion,i=o(t._source),u=qo.current,c=u.useState((function(){return cl(a,t,n)})),s=c[1],f=c[0];c=Jo;var d=e.memoizedState,p=d.refs,m=p.getSnapshot,h=d.source;d=d.subscribe;var v=Yo;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=o(t._source);if(!lr(i,e)){e=n(t._source),lr(f,e)||(s(e),e=iu(v),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,l=e;0<l;){var u=31-Vt(l),c=1<<u;r[u]|=e,l&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(v);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),lr(m,n)&&lr(h,t)&&lr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ll,lastRenderedState:f}).dispatch=s=Nl.bind(null,Yo,e),c.queue=e,c.baseQueue=null,f=cl(a,t,n),c.memoizedState=c.baseState=f),f}function fl(e,t,n){return sl(ol(),e,t,n)}function dl(e){var t=al();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ll,lastRenderedState:e}).dispatch=Nl.bind(null,Yo,e),[t.memoizedState,e]}function pl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Yo.updateQueue)?(t={lastEffect:null},Yo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ml(e){return e={current:e},al().memoizedState=e}function hl(){return ol().memoizedState}function vl(e,t,n,r){var a=al();Yo.flags|=e,a.memoizedState=pl(1|t,n,void 0,void 0===r?null:r)}function yl(e,t,n,r){var a=ol();r=void 0===r?null:r;var o=void 0;if(null!==Xo){var l=Xo.memoizedState;if(o=l.destroy,null!==r&&nl(r,l.deps))return void pl(t,n,o,r)}Yo.flags|=e,a.memoizedState=pl(1|t,n,o,r)}function gl(e,t){return vl(516,4,e,t)}function bl(e,t){return yl(516,4,e,t)}function El(e,t){return yl(4,2,e,t)}function wl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function kl(e,t,n){return n=null!=n?n.concat([e]):null,yl(4,2,wl.bind(null,t,e),n)}function Sl(){}function Cl(e,t){var n=ol();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&nl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function xl(e,t){var n=ol();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&nl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Pl(e,t){var n=Ba();$a(98>n?98:n,(function(){e(!0)})),$a(97<n?97:n,(function(){var n=Ko.transition;Ko.transition=1;try{e(!1),t()}finally{Ko.transition=n}}))}function Nl(e,t,n){var r=lu(),a=iu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},l=t.pending;if(null===l?o.next=o:(o.next=l.next,l.next=o),t.pending=o,l=e.alternate,e===Yo||null!==l&&l===Yo)el=Zo=!0;else{if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=l(i,n);if(o.eagerReducer=l,o.eagerState=u,lr(u,i))return}catch(e){}uu(e,a,r)}}var _l={readContext:no,useCallback:tl,useContext:tl,useEffect:tl,useImperativeHandle:tl,useLayoutEffect:tl,useMemo:tl,useReducer:tl,useRef:tl,useState:tl,useDebugValue:tl,useDeferredValue:tl,useTransition:tl,useMutableSource:tl,useOpaqueIdentifier:tl,unstable_isNewReconciler:!1},Tl={readContext:no,useCallback:function(e,t){return al().memoizedState=[e,void 0===t?null:t],e},useContext:no,useEffect:gl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,vl(4,2,wl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return vl(4,2,e,t)},useMemo:function(e,t){var n=al();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=al();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Nl.bind(null,Yo,e),[r.memoizedState,e]},useRef:ml,useState:dl,useDebugValue:Sl,useDeferredValue:function(e){var t=dl(e),n=t[0],r=t[1];return gl((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=dl(!1),t=e[0];return ml(e=Pl.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=al();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},sl(r,e,t,n)},useOpaqueIdentifier:function(){if(Do){var e=!1,t=function(e){return{$$typeof:z,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Qr++).toString(36))),Error(l(355))})),n=dl(t)[1];return 0==(2&Yo.mode)&&(Yo.flags|=516,pl(5,(function(){n("r:"+(Qr++).toString(36))}),void 0,null)),t}return dl(t="r:"+(Qr++).toString(36)),t},unstable_isNewReconciler:!1},Ll={readContext:no,useCallback:Cl,useContext:no,useEffect:bl,useImperativeHandle:kl,useLayoutEffect:El,useMemo:xl,useReducer:il,useRef:hl,useState:function(){return il(ll)},useDebugValue:Sl,useDeferredValue:function(e){var t=il(ll),n=t[0],r=t[1];return bl((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=il(ll)[0];return[hl().current,e]},useMutableSource:fl,useOpaqueIdentifier:function(){return il(ll)[0]},unstable_isNewReconciler:!1},Ml={readContext:no,useCallback:Cl,useContext:no,useEffect:bl,useImperativeHandle:kl,useLayoutEffect:El,useMemo:xl,useReducer:ul,useRef:hl,useState:function(){return ul(ll)},useDebugValue:Sl,useDeferredValue:function(e){var t=ul(ll),n=t[0],r=t[1];return bl((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=ul(ll)[0];return[hl().current,e]},useMutableSource:fl,useOpaqueIdentifier:function(){return ul(ll)[0]},unstable_isNewReconciler:!1},Ol=w.ReactCurrentOwner,Il=!1;function Rl(e,t,n,r){t.child=null===e?Co(t,null,n,r):So(t,e.child,n,r)}function zl(e,t,n,r,a){n=n.render;var o=t.ref;return to(t,a),r=rl(e,t,n,r,o,a),null===e||Il?(t.flags|=1,Rl(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zl(e,t,a))}function Al(e,t,n,r,a,o){if(null===e){var l=n.type;return"function"!=typeof l||Uu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=ju(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Fl(e,t,l,r,a,o))}return l=e.child,0==(a&o)&&(a=l.memoizedProps,(n=null!==(n=n.compare)?n:ur)(a,r)&&e.ref===t.ref)?Zl(e,t,o):(t.flags|=1,(e=Bu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Fl(e,t,n,r,a,o){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Il=!1,0==(o&a))return t.lanes=e.lanes,Zl(e,t,o);0!=(16384&e.flags)&&(Il=!0)}return Bl(e,t,n,r,o)}function Dl(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},vu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},vu(0,e),null;t.memoizedState={baseLanes:0},vu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,vu(0,r);return Rl(e,t,a,n),t.child}function Ul(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Bl(e,t,n,r,a){var o=pa(n)?fa:ca.current;return o=da(t,o),to(t,a),n=rl(e,t,n,r,o,a),null===e||Il?(t.flags|=1,Rl(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zl(e,t,a))}function jl(e,t,n,r,a){if(pa(n)){var o=!0;ya(t)}else o=!1;if(to(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),vo(t,n,r),go(t,n,r,a),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?no(c):da(t,c=pa(n)?fa:ca.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==c)&&yo(t,l,r,c),ro=!1;var d=t.memoizedState;l.state=d,co(t,r,l,a),u=t.memoizedState,i!==r||d!==u||sa.current||ro?("function"==typeof s&&(po(t,n,s,r),u=t.memoizedState),(i=ro||ho(t,n,i,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4)):("function"==typeof l.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4),r=!1)}else{l=t.stateNode,oo(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:qa(t.type,i),l.props=c,f=t.pendingProps,d=l.context,u="object"==typeof(u=n.contextType)&&null!==u?no(u):da(t,u=pa(n)?fa:ca.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&yo(t,l,r,u),ro=!1,d=t.memoizedState,l.state=d,co(t,r,l,a);var m=t.memoizedState;i!==f||d!==m||sa.current||ro?("function"==typeof p&&(po(t,n,p,r),m=t.memoizedState),(c=ro||ho(t,n,c,r,d,m,u))?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,m,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=m),l.props=r,l.state=m,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return $l(e,t,n,r,o,a)}function $l(e,t,n,r,a,o){Ul(e,t);var l=0!=(64&t.flags);if(!r&&!l)return a&&ga(t,n,!1),Zl(e,t,o);r=t.stateNode,Ol.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=So(t,e.child,null,o),t.child=So(t,null,i,o)):Rl(e,t,i,o),t.memoizedState=r.state,a&&ga(t,n,!0),t.child}function Vl(e){var t=e.stateNode;t.pendingContext?ha(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ha(0,t.context,!1),Lo(e,t.containerInfo)}var Hl,Wl,Ql,ql={dehydrated:null,retryLane:0};function Kl(e,t,n){var r,a=t.pendingProps,o=Ro.current,l=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(l=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ia(Ro,1&o),null===e?(void 0!==a.fallback&&jo(t),e=a.children,o=a.fallback,l?(e=Gl(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=ql,e):"number"==typeof a.unstable_expectedLoadTime?(e=Gl(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=ql,t.lanes=33554432,e):((n=Vu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,l?(a=function(e,t,n,r,a){var o=t.mode,l=e.child;e=l.sibling;var i={mode:"hidden",children:n};return 0==(2&o)&&t.child!==l?((n=t.child).childLanes=0,n.pendingProps=i,null!==(l=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=l,l.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Bu(l,i),null!==e?r=Bu(e,r):(r=$u(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),l=t.child,o=e.child.memoizedState,l.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},l.childLanes=e.childLanes&~n,t.memoizedState=ql,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Bu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Gl(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Vu(t,a,0,null),n=$u(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Yl(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),eo(e.return,t)}function Xl(e,t,n,r,a,o){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=a,l.lastEffect=o)}function Jl(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Rl(e,t,r.children,n),0!=(2&(r=Ro.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yl(e,n);else if(19===e.tag)Yl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(Ro,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===zo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Xl(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===zo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Xl(t,!0,n,null,o,t.lastEffect);break;case"together":Xl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zi|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Bu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Bu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ei(e,t){if(!Do)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ti(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return pa(t.type)&&ma(),null;case 3:return Mo(),la(sa),la(ca),Qo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Vo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Io(t);var o=To(_o.current);if(n=t.type,null!==e&&null!=t.stateNode)Wl(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=To(Po.current),Vo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Kr]=t,r[Gr]=i,n){case"dialog":Pr("cancel",r),Pr("close",r);break;case"iframe":case"object":case"embed":Pr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)Pr(kr[e],r);break;case"source":Pr("error",r);break;case"img":case"image":case"link":Pr("error",r),Pr("load",r);break;case"details":Pr("toggle",r);break;case"input":ee(r,i),Pr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Pr("invalid",r);break;case"textarea":ue(r,i),Pr("invalid",r)}for(var c in Se(n,i),e=null,i)i.hasOwnProperty(c)&&(o=i[c],"children"===c?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(c)&&null!=o&&"onScroll"===c&&Pr("scroll",r));switch(n){case"input":Y(r),re(r,i,!0);break;case"textarea":Y(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Ar)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Kr]=t,e[Gr]=r,Hl(e,t),t.stateNode=e,c=Ce(n,r),n){case"dialog":Pr("cancel",e),Pr("close",e),o=r;break;case"iframe":case"object":case"embed":Pr("load",e),o=r;break;case"video":case"audio":for(o=0;o<kr.length;o++)Pr(kr[o],e);o=r;break;case"source":Pr("error",e),o=r;break;case"img":case"image":case"link":Pr("error",e),Pr("load",e),o=r;break;case"details":Pr("toggle",e),o=r;break;case"input":ee(e,r),o=Z(e,r),Pr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Pr("invalid",e);break;case"textarea":ue(e,r),o=ie(e,r),Pr("invalid",e);break;default:o=r}Se(n,o);var s=o;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?we(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Pr("scroll",e):null!=f&&E(e,i,f,c))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?le(e,!!r.multiple,i,!1):null!=r.defaultValue&&le(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Ar)}Ur(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Ql(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=To(_o.current),To(Po.current),Vo(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return la(Ro),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Vo(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ro.current)?0===Oi&&(Oi=3):(0!==Oi&&3!==Oi||(Oi=4),null===Ni||0==(134217727&zi)&&0==(134217727&Ai)||du(Ni,Ti))),(r||n)&&(t.flags|=4),null);case 4:return Mo(),null===e&&_r(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return pa(t.type)&&ma(),null;case 19:if(la(Ro),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)ei(r,!1);else{if(0!==Oi||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=zo(e))){for(t.flags|=64,ei(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(Ro,1&Ro.current|2),t.child}e=e.sibling}null!==r.tail&&Ua()>Bi&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=zo(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ei(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Do)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Ua()-r.renderingStartTime>Bi&&1073741824!==n&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Ua(),n.sibling=null,t=Ro.current,ia(Ro,i?1&t|2:1&t),n):null;case 23:case 24:return yu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(l(156,t.tag))}function ni(e){switch(e.tag){case 1:pa(e.type)&&ma();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Mo(),la(sa),la(ca),Qo(),0!=(64&(t=e.flags)))throw Error(l(285));return e.flags=-4097&t|64,e;case 5:return Io(e),null;case 13:return la(Ro),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return la(Ro),null;case 4:return Mo(),null;case 10:return Za(e),null;case 23:case 24:return yu(),null;default:return null}}function ri(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ai(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Hl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wl=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,To(Po.current);var l,i=null;switch(n){case"input":o=Z(e,o),r=Z(e,r),i=[];break;case"option":o=oe(e,o),r=oe(e,r),i=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":o=ie(e,o),r=ie(e,r),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Ar)}for(f in Se(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var c=o[f];for(l in c)c.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Pr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===z?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Ql=function(e,t,n,r){n!==r&&(t.flags|=4)};var oi="function"==typeof WeakMap?WeakMap:Map;function li(e,t,n){(n=lo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hi||(Hi=!0,Wi=r),ai(0,t)},n}function ii(e,t,n){(n=lo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ai(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Qi?Qi=new Set([this]):Qi.add(this),ai(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ui="function"==typeof WeakSet?WeakSet:Set;function ci(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ru(e,t)}else t.current=null}function si(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(l(163))}function fi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Mu(n,e),Lu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:qa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&so(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}so(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Ur(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(l(163))}function di(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=Ee("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pi(e,t){if(Ea&&"function"==typeof Ea.onCommitFiberUnmount)try{Ea.onCommitFiberUnmount(ba,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Mu(t,n);else{r=t;try{a()}catch(e){Ru(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ci(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ru(t,e)}break;case 5:ci(t);break;case 4:bi(e,t)}}function mi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(hi(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?yi(e,n,t):gi(e,n,t)}function yi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Ar));else if(4!==r&&null!==(e=e.child))for(yi(e,t,n),e=e.sibling;null!==e;)yi(e,t,n),e=e.sibling}function gi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(gi(e,t,n),e=e.sibling;null!==e;)gi(e,t,n),e=e.sibling}function bi(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(l(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var i=e,u=a,c=u;;)if(pi(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=a.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(pi(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function Ei(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Gr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ce(e,a),t=Ce(e,r),a=0;a<o.length;a+=2){var i=o[a],u=o[a+1];"style"===i?we(n,u):"dangerouslySetInnerHTML"===i?ve(n,u):"children"===i?ye(n,u):E(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?le(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?le(n,!!r.multiple,r.defaultValue,!0):le(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Ui=Ua(),di(t.child,!0)),void wi(t);case 19:return void wi(t);case 17:return;case 23:case 24:return void di(t,null!==t.memoizedState)}throw Error(l(163))}function wi(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ui),t.forEach((function(t){var r=Au.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ki(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Si=Math.ceil,Ci=w.ReactCurrentDispatcher,xi=w.ReactCurrentOwner,Pi=0,Ni=null,_i=null,Ti=0,Li=0,Mi=oa(0),Oi=0,Ii=null,Ri=0,zi=0,Ai=0,Fi=0,Di=null,Ui=0,Bi=1/0;function ji(){Bi=Ua()+500}var $i,Vi=null,Hi=!1,Wi=null,Qi=null,qi=!1,Ki=null,Gi=90,Yi=[],Xi=[],Ji=null,Zi=0,eu=null,tu=-1,nu=0,ru=0,au=null,ou=!1;function lu(){return 0!=(48&Pi)?Ua():-1!==tu?tu:tu=Ua()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ba()?1:2;if(0===nu&&(nu=Ri),0!==Qa.transition){0!==ru&&(ru=null!==Di?Di.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Ba(),e=Ut(0!=(4&Pi)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Zi)throw Zi=0,eu=null,Error(l(185));if(null===(e=cu(e,t)))return null;$t(e,t,n),e===Ni&&(Ai|=t,4===Oi&&du(e,Ti));var r=Ba();1===t?0!=(8&Pi)&&0==(48&Pi)?pu(e):(su(e,n),0===Pi&&(ji(),Ha())):(0==(4&Pi)||98!==r&&99!==r||(null===Ji?Ji=new Set([e]):Ji.add(e)),su(e,n)),Di=e}function cu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Vt(i),c=1<<u,s=o[u];if(-1===s){if(0==(c&r)||0!=(c&a)){s=t,At(c);var f=zt;o[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=Ft(e,e===Ni?Ti:0),t=zt,0===r)null!==n&&(n!==Ia&&Sa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ia&&Sa(n)}15===t?(n=pu.bind(null,e),null===za?(za=[n],Aa=ka(_a,Wa)):za.push(n),n=Ia):n=14===t?Va(99,pu.bind(null,e)):Va(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(l(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&Pi))throw Error(l(327));var t=e.callbackNode;if(Tu()&&e.callbackNode!==t)return null;var n=Ft(e,e===Ni?Ti:0);if(0===n)return null;var r=n,a=Pi;Pi|=16;var o=Eu();for(Ni===e&&Ti===r||(ji(),gu(e,r));;)try{Su();break}catch(t){bu(e,t)}if(Ja(),Ci.current=o,Pi=a,null!==_i?r=0:(Ni=null,Ti=0,r=Oi),0!=(Ri&Ai))gu(e,0);else if(0!==r){if(2===r&&(Pi|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=Dt(e))&&(r=wu(e,n))),1===r)throw t=Ii,gu(e,0),du(e,n),su(e,Ua()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(l(345));case 2:Pu(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Ui+500-Ua())){if(0!==Ft(e,0))break;if(((a=e.suspendedLanes)&n)!==n){lu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=jr(Pu.bind(null,e),r);break}Pu(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var i=31-Vt(n);o=1<<i,(i=r[i])>a&&(a=i),n&=~o}if(n=a,10<(n=(120>(n=Ua()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Si(n/1960))-n)){e.timeoutHandle=jr(Pu.bind(null,e),n);break}Pu(e);break;case 5:Pu(e);break;default:throw Error(l(329))}}return su(e,Ua()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Fi,t&=~Ai,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Vt(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&Pi))throw Error(l(327));if(Tu(),e===Ni&&0!=(e.expiredLanes&Ti)){var t=Ti,n=wu(e,t);0!=(Ri&Ai)&&(n=wu(e,t=Ft(e,t)))}else n=wu(e,t=Ft(e,0));if(0!==e.tag&&2===n&&(Pi|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=Dt(e))&&(n=wu(e,t))),1===n)throw n=Ii,gu(e,0),du(e,t),su(e,Ua()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Pu(e),su(e,Ua()),null}function mu(e,t){var n=Pi;Pi|=1;try{return e(t)}finally{0===(Pi=n)&&(ji(),Ha())}}function hu(e,t){var n=Pi;Pi&=-2,Pi|=8;try{return e(t)}finally{0===(Pi=n)&&(ji(),Ha())}}function vu(e,t){ia(Mi,Li),Li|=t,Ri|=t}function yu(){Li=Mi.current,la(Mi)}function gu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,$r(n)),null!==_i)for(n=_i.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ma();break;case 3:Mo(),la(sa),la(ca),Qo();break;case 5:Io(r);break;case 4:Mo();break;case 13:case 19:la(Ro);break;case 10:Za(r);break;case 23:case 24:yu()}n=n.return}Ni=e,_i=Bu(e.current,null),Ti=Li=Ri=t,Oi=0,Ii=null,Fi=Ai=zi=0}function bu(e,t){for(;;){var n=_i;try{if(Ja(),qo.current=_l,Zo){for(var r=Yo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Zo=!1}if(Go=0,Jo=Xo=Yo=null,el=!1,xi.current=null,null===n||null===n.return){Oi=1,Ii=t,_i=null;break}e:{var o=e,l=n.return,i=n,u=t;if(t=Ti,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Ro.current),d=l;do{var p;if(p=13===d.tag){var m=d.memoizedState;if(null!==m)p=null!==m.dehydrated;else{var h=d.memoizedProps;p=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var y=new Set;y.add(c),d.updateQueue=y}else v.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=lo(-1,1);g.tag=2,io(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new oi,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var E=zu.bind(null,o,c,i);c.then(E,E)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Oi&&(Oi=2),u=ri(u,i),d=l;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,uo(d,li(0,o,t));break e;case 1:o=u;var w=d.type,k=d.stateNode;if(0==(64&d.flags)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Qi||!Qi.has(k)))){d.flags|=4096,t&=-t,d.lanes|=t,uo(d,ii(d,o,t));break e}}d=d.return}while(null!==d)}xu(n)}catch(e){t=e,_i===n&&null!==n&&(_i=n=n.return);continue}break}}function Eu(){var e=Ci.current;return Ci.current=_l,null===e?_l:e}function wu(e,t){var n=Pi;Pi|=16;var r=Eu();for(Ni===e&&Ti===t||gu(e,t);;)try{ku();break}catch(t){bu(e,t)}if(Ja(),Pi=n,Ci.current=r,null!==_i)throw Error(l(261));return Ni=null,Ti=0,Oi}function ku(){for(;null!==_i;)Cu(_i)}function Su(){for(;null!==_i&&!Ca();)Cu(_i)}function Cu(e){var t=$i(e.alternate,e,Li);e.memoizedProps=e.pendingProps,null===t?xu(e):_i=t,xi.current=null}function xu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ti(n,t,Li)))return void(_i=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Li)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ni(t)))return n.flags&=2047,void(_i=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(_i=t);_i=t=e}while(null!==t);0===Oi&&(Oi=5)}function Pu(e){var t=Ba();return $a(99,Nu.bind(null,e,t)),null}function Nu(e,t){do{Tu()}while(null!==Ki);if(0!=(48&Pi))throw Error(l(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<o;){var c=31-Vt(o),s=1<<c;a[c]=0,i[c]=-1,u[c]=-1,o&=~s}if(null!==Ji&&0==(24&r)&&Ji.has(e)&&Ji.delete(e),e===Ni&&(_i=Ni=null,Ti=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Pi,Pi|=32,xi.current=null,Fr=Kt,pr(i=dr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,o=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,m=0,h=0,v=i,y=null;t:for(;;){for(var g;v!==u||0!==o&&3!==v.nodeType||(d=f+o),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)y=v,v=g;for(;;){if(v===i)break t;if(y===u&&++m===o&&(d=f),y===c&&++h===s&&(p=f),null!==(g=v.nextSibling))break;y=(v=y).parentNode}v=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Dr={focusedElem:i,selectionRange:u},Kt=!1,au=null,ou=!1,Vi=r;do{try{_u()}catch(e){if(null===Vi)throw Error(l(330));Ru(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);au=null,Vi=r;do{try{for(i=e;null!==Vi;){var b=Vi.flags;if(16&b&&ye(Vi.stateNode,""),128&b){var E=Vi.alternate;if(null!==E){var w=E.ref;null!==w&&("function"==typeof w?w(null):w.current=null)}}switch(1038&b){case 2:vi(Vi),Vi.flags&=-3;break;case 6:vi(Vi),Vi.flags&=-3,Ei(Vi.alternate,Vi);break;case 1024:Vi.flags&=-1025;break;case 1028:Vi.flags&=-1025,Ei(Vi.alternate,Vi);break;case 4:Ei(Vi.alternate,Vi);break;case 8:bi(i,u=Vi);var k=u.alternate;mi(u),null!==k&&mi(k)}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(l(330));Ru(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);if(w=Dr,E=dr(),b=w.focusedElem,i=w.selectionRange,E!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==i&&pr(b)&&(E=i.start,void 0===(w=i.end)&&(w=E),"selectionStart"in b?(b.selectionStart=E,b.selectionEnd=Math.min(w,b.value.length)):(w=(E=b.ownerDocument||document)&&E.defaultView||window).getSelection&&(w=w.getSelection(),u=b.textContent.length,k=Math.min(i.start,u),i=void 0===i.end?k:Math.min(i.end,u),!w.extend&&k>i&&(u=i,i=k,k=u),u=sr(b,k),o=sr(b,i),u&&o&&(1!==w.rangeCount||w.anchorNode!==u.node||w.anchorOffset!==u.offset||w.focusNode!==o.node||w.focusOffset!==o.offset)&&((E=E.createRange()).setStart(u.node,u.offset),w.removeAllRanges(),k>i?(w.addRange(E),w.extend(o.node,o.offset)):(E.setEnd(o.node,o.offset),w.addRange(E))))),E=[];for(w=b;w=w.parentNode;)1===w.nodeType&&E.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<E.length;b++)(w=E[b]).element.scrollLeft=w.left,w.element.scrollTop=w.top}Kt=!!Fr,Dr=Fr=null,e.current=n,Vi=r;do{try{for(b=e;null!==Vi;){var S=Vi.flags;if(36&S&&fi(b,Vi.alternate,Vi),128&S){E=void 0;var C=Vi.ref;if(null!==C){var x=Vi.stateNode;switch(Vi.tag){case 5:E=x;break;default:E=x}"function"==typeof C?C(E):C.current=E}}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(l(330));Ru(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);Vi=null,Ra(),Pi=a}else e.current=n;if(qi)qi=!1,Ki=e,Gi=t;else for(Vi=r;null!==Vi;)t=Vi.nextEffect,Vi.nextEffect=null,8&Vi.flags&&((S=Vi).sibling=null,S.stateNode=null),Vi=t;if(0===(r=e.pendingLanes)&&(Qi=null),1===r?e===eu?Zi++:(Zi=0,eu=e):Zi=0,n=n.stateNode,Ea&&"function"==typeof Ea.onCommitFiberRoot)try{Ea.onCommitFiberRoot(ba,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,Ua()),Hi)throw Hi=!1,e=Wi,Wi=null,e;return 0!=(8&Pi)||Ha(),null}function _u(){for(;null!==Vi;){var e=Vi.alternate;ou||null===au||(0!=(8&Vi.flags)?Ze(Vi,au)&&(ou=!0):13===Vi.tag&&ki(e,Vi)&&Ze(Vi,au)&&(ou=!0));var t=Vi.flags;0!=(256&t)&&si(e,Vi),0==(512&t)||qi||(qi=!0,Va(97,(function(){return Tu(),null}))),Vi=Vi.nextEffect}}function Tu(){if(90!==Gi){var e=97<Gi?97:Gi;return Gi=90,$a(e,Ou)}return!1}function Lu(e,t){Yi.push(t,e),qi||(qi=!0,Va(97,(function(){return Tu(),null})))}function Mu(e,t){Xi.push(t,e),qi||(qi=!0,Va(97,(function(){return Tu(),null})))}function Ou(){if(null===Ki)return!1;var e=Ki;if(Ki=null,0!=(48&Pi))throw Error(l(331));var t=Pi;Pi|=32;var n=Xi;Xi=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],i=a.destroy;if(a.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===o)throw Error(l(330));Ru(o,e)}}for(n=Yi,Yi=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(l(330));Ru(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Pi=t,Ha(),!0}function Iu(e,t,n){io(e,t=li(0,t=ri(n,t),1)),t=lu(),null!==(e=cu(e,1))&&($t(e,1,t),su(e,t))}function Ru(e,t){if(3===e.tag)Iu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Iu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r))){var a=ii(n,e=ri(t,e),1);if(io(n,a),a=lu(),null!==(n=cu(n,1)))$t(n,1,a),su(n,a);else if("function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function zu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=lu(),e.pingedLanes|=e.suspendedLanes&n,Ni===e&&(Ti&n)===n&&(4===Oi||3===Oi&&(62914560&Ti)===Ti&&500>Ua()-Ui?gu(e,0):Fi|=n),su(e,t)}function Au(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Ba()?1:2:(0===nu&&(nu=Ri),0===(t=Bt(62914560&~nu))&&(t=4194304))),n=lu(),null!==(e=cu(e,t))&&($t(e,t,n),su(e,n))}function Fu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Du(e,t,n,r){return new Fu(e,t,n,r)}function Uu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bu(e,t){var n=e.alternate;return null===n?((n=Du(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function ju(e,t,n,r,a,o){var i=2;if(r=e,"function"==typeof e)Uu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case C:return $u(n.children,a,o,t);case A:i=8,a|=16;break;case x:i=8,a|=1;break;case P:return(e=Du(12,n,t,8|a)).elementType=P,e.type=P,e.lanes=o,e;case L:return(e=Du(13,n,t,a)).type=L,e.elementType=L,e.lanes=o,e;case M:return(e=Du(19,n,t,a)).elementType=M,e.lanes=o,e;case F:return Vu(n,a,o,t);case D:return(e=Du(24,n,t,a)).elementType=D,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case N:i=10;break e;case _:i=9;break e;case T:i=11;break e;case O:i=14;break e;case I:i=16,r=null;break e;case R:i=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Du(i,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function $u(e,t,n,r){return(e=Du(7,e,r,t)).lanes=n,e}function Vu(e,t,n,r){return(e=Du(23,e,r,t)).elementType=F,e.lanes=n,e}function Hu(e,t,n){return(e=Du(6,e,null,t)).lanes=n,e}function Wu(e,t,n){return(t=Du(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=jt(0),this.expirationTimes=jt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=jt(0),this.mutableSourceEagerHydrationData=null}function qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ku(e,t,n,r){var a=t.current,o=lu(),i=iu(a);e:if(n){t:{if(Ge(n=n._reactInternals)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(pa(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(pa(c)){n=va(n,c,u);break e}}n=u}else n=ua;return null===t.context?t.context=n:t.pendingContext=n,(t=lo(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),io(a,t),uu(a,i,o),i}function Gu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Yu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xu(e,t){Yu(e,t),(e=e.alternate)&&Yu(e,t)}function Ju(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Qu(e,t,null!=n&&!0===n.hydrate),t=Du(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ao(t),e[Yr]=n.current,_r(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(e,t,n,r,a){var o=n._reactRootContainer;if(o){var l=o._internalRoot;if("function"==typeof a){var i=a;a=function(){var e=Gu(l);i.call(e)}}Ku(t,l,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ju(e,0,t?{hydrate:!0}:void 0)}(n,r),l=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Gu(l);u.call(e)}}hu((function(){Ku(t,l,e,a)}))}return Gu(l)}function tc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zu(t))throw Error(l(200));return qu(e,t,null,n)}$i=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||sa.current)Il=!0;else{if(0==(n&r)){switch(Il=!1,t.tag){case 3:Vl(t),Ho();break;case 5:Oo(t);break;case 1:pa(t.type)&&ya(t);break;case 4:Lo(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(Ka,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Kl(e,t,n):(ia(Ro,1&Ro.current),null!==(t=Zl(e,t,n))?t.sibling:null);ia(Ro,1&Ro.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Jl(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(Ro,Ro.current),r)break;return null;case 23:case 24:return t.lanes=0,Dl(e,t,n)}return Zl(e,t,n)}Il=0!=(16384&e.flags)}else Il=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=da(t,ca.current),to(t,n),a=rl(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,pa(r)){var o=!0;ya(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ao(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&po(t,r,i,e),a.updater=mo,t.stateNode=a,a._reactInternals=t,go(t,r,e,n),t=$l(null,t,r,!0,o,n)}else t.tag=0,Rl(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Uu(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===O)return 14}return 2}(a),e=qa(a,e),o){case 0:t=Bl(null,t,a,e,n);break e;case 1:t=jl(null,t,a,e,n);break e;case 11:t=zl(null,t,a,e,n);break e;case 14:t=Al(null,t,a,qa(a.type,e),r,n);break e}throw Error(l(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Bl(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,jl(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 3:if(Vl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,oo(e,t),co(t,r,null,n),(r=t.memoizedState.element)===a)Ho(),t=Zl(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Fo=Hr(t.stateNode.containerInfo.firstChild),Ao=t,o=Do=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Wo.push(o);for(n=Co(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Rl(e,t,r,n),Ho();t=t.child}return t;case 5:return Oo(t),null===e&&jo(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,Br(r,a)?i=null:null!==o&&Br(r,o)&&(t.flags|=16),Ul(e,t),Rl(e,t,i,n),t.child;case 6:return null===e&&jo(t),null;case 13:return Kl(e,t,n);case 4:return Lo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=So(t,null,r,n):Rl(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,zl(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 7:return Rl(e,t,t.pendingProps,n),t.child;case 8:case 12:return Rl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,i=t.memoizedProps,o=a.value;var u=t.type._context;if(ia(Ka,u._currentValue),u._currentValue=o,null!==i)if(u=i.value,0==(o=lr(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(i.children===a.children&&!sa.current){t=Zl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===u.tag&&((s=lo(-1,n&-n)).tag=2,io(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),eo(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Rl(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,to(t,n),r=r(a=no(a,o.unstable_observedBits)),t.flags|=1,Rl(e,t,r,n),t.child;case 14:return o=qa(a=t.type,t.pendingProps),Al(e,t,a,o=qa(a.type,o),r,n);case 15:return Fl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,pa(r)?(e=!0,ya(t)):e=!1,to(t,n),vo(t,r,a),go(t,r,a,n),$l(null,t,r,!0,e,n);case 19:return Jl(e,t,n);case 23:case 24:return Dl(e,t,n)}throw Error(l(156,t.tag))},Ju.prototype.render=function(e){Ku(e,this._internalRoot,null,null)},Ju.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ku(null,e,null,(function(){t[Yr]=null}))},et=function(e){13===e.tag&&(uu(e,4,lu()),Xu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,lu()),Xu(e,67108864))},nt=function(e){if(13===e.tag){var t=lu(),n=iu(e);uu(e,n,t),Xu(e,n)}},rt=function(e,t){return t()},Pe=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ta(r);if(!a)throw Error(l(90));X(r),ne(r,a)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&le(e,!!n.multiple,t,!1)}},Oe=mu,Ie=function(e,t,n,r,a){var o=Pi;Pi|=4;try{return $a(98,e.bind(null,t,n,r,a))}finally{0===(Pi=o)&&(ji(),Ha())}},Re=function(){0==(49&Pi)&&(function(){if(null!==Ji){var e=Ji;Ji=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Ua())}))}Ha()}(),Tu())},ze=function(e,t){var n=Pi;Pi|=2;try{return e(t)}finally{0===(Pi=n)&&(ji(),Ha())}};var nc={Events:[Zr,ea,ta,Le,Me,Tu,{current:!1}]},rc={findFiberByHostInstance:Jr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ac={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var oc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!oc.isDisabled&&oc.supportsFiber)try{ba=oc.inject(ac),Ea=oc}catch(he){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,t.createPortal=tc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=Je(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Pi;if(0!=(48&n))return e(t);Pi|=1;try{if(e)return $a(99,e.bind(null,t))}finally{Pi=n,Ha()}},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(l(200));return ec(null,e,t,!0,n)},t.render=function(e,t,n){if(!Zu(t))throw Error(l(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(l(40));return!!e._reactRootContainer&&(hu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[Yr]=null}))})),!0)},t.unstable_batchedUpdates=mu,t.unstable_createPortal=function(e,t){return tc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return ec(e,t,n,!1,r)},t.version="17.0.2"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,m=n?Symbol.for("react.suspense_list"):60120,h=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,E=n?Symbol.for("react.scope"):60119;function w(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case o:case i:case l:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case h:case u:return e;default:return t}}case a:return t}}}function k(e){return w(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=o,t.Lazy=v,t.Memo=h,t.Portal=a,t.Profiler=i,t.StrictMode=l,t.Suspense=p,t.isAsyncMode=function(e){return k(e)||w(e)===s},t.isConcurrentMode=k,t.isContextConsumer=function(e){return w(e)===c},t.isContextProvider=function(e){return w(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return w(e)===d},t.isFragment=function(e){return w(e)===o},t.isLazy=function(e){return w(e)===v},t.isMemo=function(e){return w(e)===h},t.isPortal=function(e){return w(e)===a},t.isProfiler=function(e){return w(e)===i},t.isStrictMode=function(e){return w(e)===l},t.isSuspense=function(e){return w(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===i||e===l||e===p||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===h||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===E||e.$$typeof===y)},t.typeOf=w},864:(e,t,n)=>{"use strict";e.exports=n(921)},427:(e,t,n)=>{"use strict";function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,r(e,t)}n.r(t),n.d(t,{BrowserRouter:()=>ye,HashRouter:()=>ge,Link:()=>Ce,MemoryRouter:()=>q,NavLink:()=>Ne,Prompt:()=>G,Redirect:()=>Z,Route:()=>re,Router:()=>Q,StaticRouter:()=>ce,Switch:()=>se,generatePath:()=>J,matchPath:()=>ne,useHistory:()=>pe,useLocation:()=>me,useParams:()=>he,useRouteMatch:()=>ve,withRouter:()=>fe});var o=n(294),l=n(697),i=n.n(l);function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function c(e){return"/"===e.charAt(0)}function s(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}function f(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}const d=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"==typeof t||"object"==typeof n){var r=f(t),a=f(n);return r!==t||a!==n?e(r,a):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};const p=function(e,t){if(!e)throw new Error("Invariant failed")};function m(e){return"/"===e.charAt(0)?e:"/"+e}function h(e){return"/"===e.charAt(0)?e.substr(1):e}function v(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function y(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function g(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function b(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=u({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],o=e&&c(e),l=t&&c(t),i=o||l;if(e&&c(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];n="."===u||".."===u||""===u}else n=!1;for(var f=0,d=a.length;d>=0;d--){var p=a[d];"."===p?s(a,d):".."===p?(s(a,d),f++):f&&(s(a,d),f--)}if(!i)for(;f--;f)a.unshift("..");!i||""===a[0]||a[0]&&c(a[0])||a.unshift("");var m=a.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function E(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var w=!("undefined"==typeof window||!window.document||!window.document.createElement);function k(e,t){t(window.confirm(e))}var S="popstate",C="hashchange";function x(){try{return window.history.state||{}}catch(e){return{}}}function P(e){void 0===e&&(e={}),w||p(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,l=o.forceRefresh,i=void 0!==l&&l,c=o.getUserConfirmation,s=void 0===c?k:c,f=o.keyLength,d=void 0===f?6:f,h=e.basename?y(m(e.basename)):"";function P(e){var t=e||{},n=t.key,r=t.state,a=window.location,o=a.pathname+a.search+a.hash;return h&&(o=v(o,h)),b(o,r,n)}function N(){return Math.random().toString(36).substr(2,d)}var _=E();function T(e){u(j,e),j.length=n.length,_.notifyListeners(j.location,j.action)}function L(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||I(P(e.state))}function M(){I(P(x()))}var O=!1;function I(e){O?(O=!1,T()):_.confirmTransitionTo(e,"POP",s,(function(t){t?T({action:"POP",location:e}):function(e){var t=j.location,n=z.indexOf(t.key);-1===n&&(n=0);var r=z.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(O=!0,F(a))}(e)}))}var R=P(x()),z=[R.key];function A(e){return h+g(e)}function F(e){n.go(e)}var D=0;function U(e){1===(D+=e)&&1===e?(window.addEventListener(S,L),a&&window.addEventListener(C,M)):0===D&&(window.removeEventListener(S,L),a&&window.removeEventListener(C,M))}var B=!1,j={length:n.length,action:"POP",location:R,createHref:A,push:function(e,t){var a="PUSH",o=b(e,t,N(),j.location);_.confirmTransitionTo(o,a,s,(function(e){if(e){var t=A(o),l=o.key,u=o.state;if(r)if(n.pushState({key:l,state:u},null,t),i)window.location.href=t;else{var c=z.indexOf(j.location.key),s=z.slice(0,c+1);s.push(o.key),z=s,T({action:a,location:o})}else window.location.href=t}}))},replace:function(e,t){var a="REPLACE",o=b(e,t,N(),j.location);_.confirmTransitionTo(o,a,s,(function(e){if(e){var t=A(o),l=o.key,u=o.state;if(r)if(n.replaceState({key:l,state:u},null,t),i)window.location.replace(t);else{var c=z.indexOf(j.location.key);-1!==c&&(z[c]=o.key),T({action:a,location:o})}else window.location.replace(t)}}))},go:F,goBack:function(){F(-1)},goForward:function(){F(1)},block:function(e){void 0===e&&(e=!1);var t=_.setPrompt(e);return B||(U(1),B=!0),function(){return B&&(B=!1,U(-1)),t()}},listen:function(e){var t=_.appendListener(e);return U(1),function(){U(-1),t()}}};return j}var N="hashchange",_={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+h(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:h,decodePath:m},slash:{encodePath:m,decodePath:m}};function T(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function L(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function M(e){window.location.replace(T(window.location.href)+"#"+e)}function O(e){void 0===e&&(e={}),w||p(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,a=void 0===r?k:r,o=n.hashType,l=void 0===o?"slash":o,i=e.basename?y(m(e.basename)):"",c=_[l],s=c.encodePath,f=c.decodePath;function d(){var e=f(L());return i&&(e=v(e,i)),b(e)}var h=E();function S(e){u(B,e),B.length=t.length,h.notifyListeners(B.location,B.action)}var C=!1,x=null;function P(){var e,t,n=L(),r=s(n);if(n!==r)M(r);else{var o=d(),l=B.location;if(!C&&(t=o,(e=l).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(x===g(o))return;x=null,function(e){if(C)C=!1,S();else{h.confirmTransitionTo(e,"POP",a,(function(t){t?S({action:"POP",location:e}):function(e){var t=B.location,n=z.lastIndexOf(g(t));-1===n&&(n=0);var r=z.lastIndexOf(g(e));-1===r&&(r=0);var a=n-r;a&&(C=!0,A(a))}(e)}))}}(o)}}var O=L(),I=s(O);O!==I&&M(I);var R=d(),z=[g(R)];function A(e){t.go(e)}var F=0;function D(e){1===(F+=e)&&1===e?window.addEventListener(N,P):0===F&&window.removeEventListener(N,P)}var U=!1,B={length:t.length,action:"POP",location:R,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=T(window.location.href)),n+"#"+s(i+g(e))},push:function(e,t){var n="PUSH",r=b(e,void 0,void 0,B.location);h.confirmTransitionTo(r,n,a,(function(e){if(e){var t=g(r),a=s(i+t);if(L()!==a){x=t,function(e){window.location.hash=e}(a);var o=z.lastIndexOf(g(B.location)),l=z.slice(0,o+1);l.push(t),z=l,S({action:n,location:r})}else S()}}))},replace:function(e,t){var n="REPLACE",r=b(e,void 0,void 0,B.location);h.confirmTransitionTo(r,n,a,(function(e){if(e){var t=g(r),a=s(i+t);L()!==a&&(x=t,M(a));var o=z.indexOf(g(B.location));-1!==o&&(z[o]=t),S({action:n,location:r})}}))},go:A,goBack:function(){A(-1)},goForward:function(){A(1)},block:function(e){void 0===e&&(e=!1);var t=h.setPrompt(e);return U||(D(1),U=!0),function(){return U&&(U=!1,D(-1)),t()}},listen:function(e){var t=h.appendListener(e);return D(1),function(){D(-1),t()}}};return B}function I(e,t,n){return Math.min(Math.max(e,t),n)}function R(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,a=void 0===r?["/"]:r,o=t.initialIndex,l=void 0===o?0:o,i=t.keyLength,c=void 0===i?6:i,s=E();function f(e){u(y,e),y.length=y.entries.length,s.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=I(l,0,a.length-1),m=a.map((function(e){return b(e,void 0,"string"==typeof e?d():e.key||d())})),h=g;function v(e){var t=I(y.index+e,0,y.entries.length-1),r=y.entries[t];s.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:m.length,action:"POP",location:m[p],index:p,entries:m,createHref:h,push:function(e,t){var r="PUSH",a=b(e,t,d(),y.location);s.confirmTransitionTo(a,r,n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,a):n.push(a),f({action:r,location:a,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",a=b(e,t,d(),y.location);s.confirmTransitionTo(a,r,n,(function(e){e&&(y.entries[y.index]=a,f({action:r,location:a}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return y}var z=1073741823,A="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function F(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const D=o.createContext||function(e,t){var n,r,l,u="__create-react-context-"+((A[l="__global_unique_id__"]=(A[l]||0)+1)+"__"),c=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=F(t.props.value),t}a(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[u]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((o=r)===(l=a)?0!==o||1/o==1/l:o!=o&&l!=l)?n=0:(n="function"==typeof t?t(r,a):z,0!=(n|=0)&&this.emitter.set(e.value,n))}var o,l},r.render=function(){return this.props.children},n}(o.Component);c.childContextTypes=((n={})[u]=i().object.isRequired,n);var s=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}a(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?z:t},r.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?z:e},r.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},r.getValue=function(){return this.context[u]?this.context[u].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(o.Component);return s.contextTypes=((r={})[u]=i().object,r),{Provider:c,Consumer:s}};var U=n(779),B=n.n(U);function j(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n(864);var $=n(679),V=n.n($),H=function(e){var t=D();return t.displayName="Router-History",t}(),W=function(e){var t=D();return t.displayName="Router",t}(),Q=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}a(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.createElement(W.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.createElement(H.Provider,{children:this.props.children||null,value:this.props.history}))},t}(o.Component),q=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=R(t.props),t}return a(t,e),t.prototype.render=function(){return o.createElement(Q,{history:this.history,children:this.props.children})},t}(o.Component),K=function(e){function t(){return e.apply(this,arguments)||this}a(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(o.Component);function G(e){var t=e.message,n=e.when,r=void 0===n||n;return o.createElement(W.Consumer,null,(function(e){if(e||p(!1),!r||e.staticContext)return null;var n=e.history.block;return o.createElement(K,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})}))}var Y={},X=0;function J(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(Y[e])return Y[e];var t=B().compile(e);return X<1e4&&(Y[e]=t,X++),t}(e)(t,{pretty:!0})}function Z(e){var t=e.computedMatch,n=e.to,r=e.push,a=void 0!==r&&r;return o.createElement(W.Consumer,null,(function(e){e||p(!1);var r=e.history,l=e.staticContext,i=a?r.push:r.replace,c=b(t?"string"==typeof n?J(n,t.params):u({},n,{pathname:J(n.pathname,t.params)}):n);return l?(i(c),null):o.createElement(K,{onMount:function(){i(c)},onUpdate:function(e,t){var n,r,a=b(t.to);n=a,r=u({},c,{key:a.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&d(n.state,r.state)||i(c)},to:n})}))}var ee={},te=0;function ne(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,o=void 0!==a&&a,l=n.strict,i=void 0!==l&&l,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=ee[n]||(ee[n]={});if(r[e])return r[e];var a=[],o={regexp:B()(e,a,t),keys:a};return te<1e4&&(r[e]=o,te++),o}(n,{end:o,strict:i,sensitive:c}),a=r.regexp,l=r.keys,u=a.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return o&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:l.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var re=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return o.createElement(W.Consumer,null,(function(t){t||p(!1);var n=e.props.location||t.location,r=u({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?ne(n.pathname,e.props):t.match}),a=e.props,l=a.children,i=a.component,c=a.render;return Array.isArray(l)&&0===l.length&&(l=null),o.createElement(W.Provider,{value:r},r.match?l?"function"==typeof l?l(r):l:i?o.createElement(i,r):c?c(r):null:"function"==typeof l?l(r):null)}))},t}(o.Component);function ae(e){return"/"===e.charAt(0)?e:"/"+e}function oe(e,t){if(!e)return t;var n=ae(e);return 0!==t.pathname.indexOf(n)?t:u({},t,{pathname:t.pathname.substr(n.length)})}function le(e){return"string"==typeof e?e:g(e)}function ie(e){return function(){p(!1)}}function ue(){}var ce=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return ue},t.handleBlock=function(){return ue},t}a(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,a=void 0===r?"":r,o=n.context,l=void 0===o?{}:o;l.action=t,l.location=function(e,t){return e?u({},t,{pathname:ae(e)+t.pathname}):t}(a,b(e)),l.url=le(l.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,a=void 0===r?{}:r,l=e.location,i=void 0===l?"/":l,c=j(e,["basename","context","location"]),s={createHref:function(e){return ae(n+le(e))},action:"POP",location:oe(n,b(i)),push:this.handlePush,replace:this.handleReplace,go:ie(),goBack:ie(),goForward:ie(),listen:this.handleListen,block:this.handleBlock};return o.createElement(Q,u({},c,{history:s,staticContext:a}))},t}(o.Component),se=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return o.createElement(W.Consumer,null,(function(t){t||p(!1);var n,r,a=e.props.location||t.location;return o.Children.forEach(e.props.children,(function(e){if(null==r&&o.isValidElement(e)){n=e;var l=e.props.path||e.props.from;r=l?ne(a.pathname,u({},e.props,{path:l})):t.match}})),r?o.cloneElement(n,{location:a,computedMatch:r}):null}))},t}(o.Component);function fe(e){var t="withRouter("+(e.displayName||e.name)+")",n=function(t){var n=t.wrappedComponentRef,r=j(t,["wrappedComponentRef"]);return o.createElement(W.Consumer,null,(function(t){return t||p(!1),o.createElement(e,u({},r,t,{ref:n}))}))};return n.displayName=t,n.WrappedComponent=e,V()(n,e)}var de=o.useContext;function pe(){return de(H)}function me(){return de(W).location}function he(){var e=de(W).match;return e?e.params:{}}function ve(e){var t=me(),n=de(W).match;return e?ne(t.pathname,e):n}var ye=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=P(t.props),t}return a(t,e),t.prototype.render=function(){return o.createElement(Q,{history:this.history,children:this.props.children})},t}(o.Component),ge=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=O(t.props),t}return a(t,e),t.prototype.render=function(){return o.createElement(Q,{history:this.history,children:this.props.children})},t}(o.Component),be=function(e,t){return"function"==typeof e?e(t):e},Ee=function(e,t){return"string"==typeof e?b(e,null,null,t):e},we=function(e){return e},ke=o.forwardRef;void 0===ke&&(ke=we);var Se=ke((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,l=j(e,["innerRef","navigate","onClick"]),i=l.target,c=u({},l,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=we!==ke&&t||n,o.createElement("a",c)})),Ce=ke((function(e,t){var n=e.component,r=void 0===n?Se:n,a=e.replace,l=e.to,i=e.innerRef,c=j(e,["component","replace","to","innerRef"]);return o.createElement(W.Consumer,null,(function(e){e||p(!1);var n=e.history,s=Ee(be(l,e.location),e.location),f=s?n.createHref(s):"",d=u({},c,{href:f,navigate:function(){var t=be(l,e.location);(a?n.replace:n.push)(t)}});return we!==ke?d.ref=t||i:d.innerRef=i,o.createElement(r,d)}))})),xe=function(e){return e},Pe=o.forwardRef;void 0===Pe&&(Pe=xe);var Ne=Pe((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,a=e.activeClassName,l=void 0===a?"active":a,i=e.activeStyle,c=e.className,s=e.exact,f=e.isActive,d=e.location,m=e.sensitive,h=e.strict,v=e.style,y=e.to,g=e.innerRef,b=j(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.createElement(W.Consumer,null,(function(e){e||p(!1);var n=d||e.location,a=Ee(be(y,n),n),E=a.pathname,w=E&&E.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=w?ne(n.pathname,{path:w,exact:s,sensitive:m,strict:h}):null,S=!!(f?f(k,n):k),C=S?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(c,l):c,x=S?u({},v,{},i):v,P=u({"aria-current":S&&r||null,className:C,style:x,to:a},b);return xe!==Pe?P.ref=t||g:P.innerRef=g,o.createElement(Ce,P)}))}))},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var l=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),l=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function v(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var b=g.prototype=new y;b.constructor=g,r(b,v.prototype),b.isPureReactComponent=!0;var E={current:null},w=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,o={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)w.call(t,r)&&!k.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:l,ref:i,props:o,_owner:E.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var x=/\/+/g;function P(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function N(e,t,n,r,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return l=l(u=e),e=""===r?"."+P(u,0):r,Array.isArray(l)?(n="",null!=e&&(n=e.replace(x,"$&/")+"/"),N(l,t,n,"",(function(e){return e}))):null!=l&&(C(l)&&(l=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(x,"$&/")+"/")+e)),t.push(l)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+P(i=e[c],c);u+=N(i,t,n,s,l)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(i=e.next()).done;)u+=N(i=i.value,t,n,s=r+P(i,c++),l);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function _(e,t,n){if(null==e)return e;var r=[],a=0;return N(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function T(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var L={current:null};function M(){var e=L.current;if(null===e)throw Error(p(321));return e}var O={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:_,forEach:function(e,t,n){_(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return _(e,(function(){t++})),t},toArray:function(e){return _(e,(function(e){return e}))||[]},only:function(e){if(!C(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=E.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)w.call(t,s)&&!k.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:a,type:e.type,key:l,ref:i,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=C,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return M().useCallback(e,t)},t.useContext=function(e,t){return M().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return M().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return M().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return M().useLayoutEffect(e,t)},t.useMemo=function(e,t){return M().useMemo(e,t)},t.useReducer=function(e,t,n){return M().useReducer(e,t,n)},t.useRef=function(e){return M().useRef(e)},t.useState=function(e){return M().useState(e)},t.version="17.0.2"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var h=!1,v=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,w=E.port2;E.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+g;try{v(!0,e)?w.postMessage(null):(h=!1,v=null)}catch(e){throw w.postMessage(null),e}}else h=!1},n=function(e){v=e,h||(h=!0,w.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},a=function(){p(y),y=-1}}function k(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<x(a,t)))break e;e[r]=t,e[n]=a,n=r}}function S(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,l=e[o],i=o+1,u=e[i];if(void 0!==l&&0>x(l,n))void 0!==u&&0>x(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[o]=n,r=o);else{if(!(void 0!==u&&0>x(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function x(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],N=[],_=1,T=null,L=3,M=!1,O=!1,I=!1;function R(e){for(var t=S(N);null!==t;){if(null===t.callback)C(N);else{if(!(t.startTime<=e))break;C(N),t.sortIndex=t.expirationTime,k(P,t)}t=S(N)}}function z(e){if(I=!1,R(e),!O)if(null!==S(P))O=!0,n(A);else{var t=S(N);null!==t&&r(z,t.startTime-e)}}function A(e,n){O=!1,I&&(I=!1,a()),M=!0;var o=L;try{for(R(n),T=S(P);null!==T&&(!(T.expirationTime>n)||e&&!t.unstable_shouldYield());){var l=T.callback;if("function"==typeof l){T.callback=null,L=T.priorityLevel;var i=l(T.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?T.callback=i:T===S(P)&&C(P),R(n)}else C(P);T=S(P)}if(null!==T)var u=!0;else{var c=S(N);null!==c&&r(z,c.startTime-n),u=!1}return u}finally{T=null,L=o,M=!1}}var F=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){O||M||(O=!0,n(A))},t.unstable_getCurrentPriorityLevel=function(){return L},t.unstable_getFirstCallbackNode=function(){return S(P)},t.unstable_next=function(e){switch(L){case 1:case 2:case 3:var t=3;break;default:t=L}var n=L;L=t;try{return e()}finally{L=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=F,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=L;L=e;try{return t()}finally{L=n}},t.unstable_scheduleCallback=function(e,o,l){var i=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?i+l:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:_++,callback:o,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>i?(e.sortIndex=l,k(N,e),null===S(P)&&e===S(N)&&(I?a():I=!0,r(z,l-i))):(e.sortIndex=u,k(P,e),O||M||(O=!0,n(A))),e},t.unstable_wrapCallback=function(e){var t=L;return function(){var n=L;L=t;try{return e.apply(this,arguments)}finally{L=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},632:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(427),o=n(742),l=n(335),i=n(858),u=n(508),c=n(539),s=n(7);t.default=function(){return r.createElement(a.HashRouter,null,r.createElement(o.default,null),r.createElement(a.Switch,null,r.createElement(a.Route,{exact:!0,path:"/",component:u.default}),r.createElement(a.Route,{exact:!0,path:"/showcase",component:c.default}),r.createElement(a.Route,{path:"/gear",component:l.default}),r.createElement(a.Route,{path:"/songs",component:i.default}),r.createElement(a.Route,{path:"/stribe",component:s.default})))}},508:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(427);t.default=function(){return r.createElement(r.Fragment,null,r.createElement("div",{className:"home-container"},r.createElement("h1",null,"New Album ",r.createElement("span",null,"Cloud Taster")," Available Now"),r.createElement("div",{className:"home-album-buttons"},r.createElement("img",{src:"./././images/album.png"}),r.createElement("div",{className:"home-buttons"},r.createElement(a.NavLink,{activeClassName:"active",to:"/showcase"},r.createElement("button",null,"Listen")),r.createElement(a.NavLink,{activeClassName:"active",to:"/stribe",onClick:function(){document.querySelector("nav").style.display="none"}},r.createElement("button",null,"Buy")))),r.createElement("h2",null,"Some Other Time (Video)"),r.createElement("iframe",{loading:"lazy",width:"100%",height:"100%",src:"https://www.youtube.com/embed/JR--I7zmunw",title:"YouTube video player",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",scrolling:"no",frameBorder:"0"})))}},335:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(){return r.createElement("div",{id:"gear-container"},r.createElement("h1",null,"Gear"),r.createElement("img",{loading:"lazy",id:"af75",src:"./././images/guitar3.png"}),r.createElement("h2",{id:"af75-h2"},"2010 Ibanez AF75 BS"),r.createElement("div",{className:"my-guitar"},r.createElement("div",{className:"body"},r.createElement("h3",null,"Body"),r.createElement("div",{className:"specs"},r.createElement("span",null,"Body Type:"),r.createElement("span",null,"Hollow Body")),r.createElement("div",{className:"specs"},r.createElement("span",null,"Dimensions:"),r.createElement("span",null,'Length: 495mm / 19½"'),r.createElement("span",null,'Width: 400mm / 15¾"'),r.createElement("span",null,'Depth: 92mm / 3⅝"')),r.createElement("div",{className:"specs"},r.createElement("span",null,"Top:"),r.createElement("span",null,"Material: Maple (laminated)"),r.createElement("span",null,"Binding: Ivory multi-ply")),r.createElement("div",{className:"specs"},r.createElement("span",null,"Back/sides:"),r.createElement("span",null,"Material: Maple (laminated)")),r.createElement("div",{className:"specs"},r.createElement("span",null,"Neck joint:"),r.createElement("span",null,"Set-in")),r.createElement("div",{className:"specs"},r.createElement("span",null,"Bridge:"),r.createElement("span",null,"ART-1 on a wooden base"))),r.createElement("div",{className:"neck"},r.createElement("h3",null,"Neck"),r.createElement("div",{className:"specs"},r.createElement("span",null,"Neck material:"),r.createElement("span",null,"1-piece mahogany")),r.createElement("div",{className:"specs"},r.createElement("span",null,"Scale length:"),r.createElement("span",null,'628mm / 24¾"')),r.createElement("div",{className:"specs"},r.createElement("span",null,"Fingerboard Material:"),r.createElement("span",null,"Rosewood w/ ivory binding")),r.createElement("div",{className:"specs"},r.createElement("span",null,"Fingerboard inlays:"),r.createElement("span",null,"Pearl block")),r.createElement("div",{className:"specs"},r.createElement("span",null,"Frets:"),r.createElement("span",null,"20 / medium"))),r.createElement("div",{className:"other"},r.createElement("h3",null,"Other"),r.createElement("div",{className:"specs"},r.createElement("span",null,"Neck pickup:"),r.createElement("span",null,"Ibanez Artcore Humbucker 1")),r.createElement("div",{className:"specs"},r.createElement("span",null,"Strings:"),r.createElement("span",null,"D'addario flat wound ECG25"),r.createElement("span",null,".012/.016/.024w/.032/.042/.052")))),r.createElement("p",{className:"guitar-paragraph"},"Yup. An AF75. This guitar has similar dimensions and the same materials as the popular ES-175. Maple back and sides, mahogany neck, rosewood fretboard. The newer AF75s are built cheaply. Laurel, linden and walnut. Not good. Avoid those. My guitar has flatwound 12s with lowish action. It doesn't fight me when I play it. I know my limits on it. It can sound uneven but I think it adds charm to it. I would recommend it to anyone who is looking for a versatile electric guitar."),r.createElement("img",{loading:"lazy",id:"focusrite",src:"./././images/focusrite.png"}),r.createElement("h2",{id:"fr-h2"},"Focusrite Solo"),r.createElement("div",{className:"my-focusrite"},r.createElement("div",{className:"fr-specs"},r.createElement("h3",null,"Specs"),r.createElement("div",{className:"specs"},r.createElement("span",null,"Inputs:"),r.createElement("span",null,"3-pin XLR"),r.createElement("span",null,'¼" input jack')),r.createElement("div",{className:"specs"},r.createElement("span",null,"Outputs:"),r.createElement("span",null,'2 x ¼" speaker jacks'),r.createElement("span",null,'¼" output jack')))),r.createElement("p",{className:"focusrite-paragraph"},"This is the amplifier I use. What is the purpose of an amplifier? To amplify the natural acoustic sound of the instrument. This is something I think today's guitarists forget sometimes. I just want something to amplify the acoustic sound of my instrument. It has no effects but I can plug headphones into it and hear latency-less amplification. I can digitally add effects online if I need them. I can record with it. The truth is I play unplugged most of the time anyway! I like the acoustic sound of my guitar. But even when I plug it in I like the slight natural overdrive of the neck pickup that comes through the focusrite. If I were to get real serious as a musician I would upgrade this but I play just because music is fun and that is good enough for me."))}},742:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(427);t.default=function(){return r.createElement("nav",{id:"top"},r.createElement("h2",null,"Steven Fabrizio"),r.createElement("ul",null,r.createElement(a.NavLink,{exact:!0,activeClassName:"active",to:"/"},"home"),r.createElement(a.NavLink,{activeClassName:"active",to:"/showcase"},"listen"),r.createElement(a.NavLink,{activeClassName:"active",to:"/stribe",onClick:function(){document.querySelector("nav").style.display="none"}},"buy"),r.createElement(a.NavLink,{activeClassName:"active",to:"/gear"},"gear"),r.createElement(a.NavLink,{activeClassName:"active",to:"/songs"},"future songs")))}},539:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(294);t.default=function(){var e=a.useState("show"),t=e[0],n=e[1],o=a.useState("none"),l=o[0],i=o[1],u=a.useState("none"),c=u[0],s=u[1],f=a.useState("none"),d=f[0],p=f[1],m=a.useState("none"),h=m[0],v=m[1],y=a.useState("none"),g=y[0],b=y[1],E=a.useState("none"),w=E[0],k=E[1],S=a.useState("none"),C=S[0],x=S[1],P=a.useState("inline"),N=P[0],_=P[1],T=a.useState("none"),L=T[0],M=T[1],O=a.useState("none"),I=O[0],R=O[1],z=a.useState("none"),A=z[0],F=z[1],D=a.useState("none"),U=D[0],B=D[1],j=a.useState("none"),$=j[0],V=j[1],H=a.useState("none"),W=H[0],Q=H[1],q=a.useState("none"),K=q[0],G=q[1];function Y(){for(var e=document.querySelectorAll("audio"),t=0;t<e.length;t++)e[t].pause(),e[t].currentTime=0}return r.createElement("div",{className:"sccontainer"},r.createElement("div",{className:"showcase-img"},r.createElement("div",{className:"showcase-img-inside"},r.createElement("div",{className:"listcontainer"},r.createElement("ul",null,r.createElement("li",{className:t,onClick:function(){return Y(),n("show"),i("none"),s("none"),p("none"),v("none"),b("none"),k("none"),x("none"),_("inline"),M("none"),R("none"),F("none"),B("none"),V("none"),Q("none"),void G("none")}},"A Dream Is A Wish Your Heart Makes"),r.createElement("li",{className:l,onClick:function(){return Y(),n("none"),i("show"),s("none"),p("none"),v("none"),b("none"),k("none"),x("none"),_("none"),M("inline"),R("none"),F("none"),B("none"),V("none"),Q("none"),void G("none")}},"Beautiful Love"),r.createElement("li",{className:h,onClick:function(){return Y(),n("none"),i("none"),s("none"),p("none"),v("show"),b("none"),k("none"),x("none"),_("none"),M("none"),R("none"),F("none"),B("inline"),V("none"),Q("none"),void G("none")}},"Emily"),r.createElement("li",{className:C,onClick:function(){return Y(),n("none"),i("none"),s("none"),p("none"),v("none"),b("none"),k("none"),x("show"),_("none"),M("none"),R("none"),F("none"),B("none"),V("none"),Q("none"),void G("inline")}},"How Deep Is The Ocean?"),r.createElement("li",{className:w,onClick:function(){return Y(),n("none"),i("none"),s("none"),p("none"),v("none"),b("none"),k("show"),x("none"),_("none"),M("none"),R("none"),F("none"),B("none"),V("none"),Q("inline"),void G("none")}},"I'm A Fool To Want You"),r.createElement("li",{className:g,onClick:function(){return Y(),n("none"),i("none"),s("none"),p("none"),v("none"),b("show"),k("none"),x("none"),_("none"),M("none"),R("none"),F("none"),B("none"),V("inline"),Q("none"),void G("none")}},"My Foolish Heart"),r.createElement("li",{className:c,onClick:function(){return Y(),n("none"),i("none"),s("show"),p("none"),v("none"),b("none"),k("none"),x("none"),_("none"),M("none"),R("inline"),F("none"),B("none"),V("none"),Q("none"),void G("none")}},"What Are You Doing The Rest of Your Life?"),r.createElement("li",{className:d,onClick:function(){return Y(),n("none"),i("none"),s("none"),p("show"),v("none"),b("none"),k("none"),x("none"),_("none"),M("none"),R("none"),F("inline"),B("none"),V("none"),Q("none"),void G("none")}},"When I Fall In Love")))),r.createElement("div",{className:"audiocontainer"},r.createElement("div",{className:"audio1",style:{display:""+N}},r.createElement("h2",null,"A Dream Is A Wish Your Heart Makes"),r.createElement("audio",{controls:!0},r.createElement("source",{src:"src\\components\\4adreamisawish.mp3",type:"audio/mpeg"}))),r.createElement("div",{className:"audio2",style:{display:""+L}},r.createElement("h2",null,"Beautiful Love"),r.createElement("audio",{controls:!0},r.createElement("source",{src:"src\\components\\3beautifullove.mp3",type:"audio/mpeg"}))),r.createElement("div",{className:"audio3",style:{display:""+I}},r.createElement("h2",null,"What Are You Doing The Rest of Your Life?"),r.createElement("audio",{controls:!0},r.createElement("source",{src:"src\\components\\5whatrudoingtherest.mp3",type:"audio/mpeg"}))),r.createElement("div",{className:"audio4",style:{display:""+A}},r.createElement("h2",null,"When I Fall In Love"),r.createElement("audio",{controls:!0},r.createElement("source",{src:"src\\components\\1whenifall.mp3",type:"audio/mpeg"}))),r.createElement("div",{className:"audio5",style:{display:""+U}},r.createElement("h2",null,"Emily"),r.createElement("audio",{controls:!0},r.createElement("source",{src:"src\\components\\2emily.mp3",type:"audio/mpeg"}))),r.createElement("div",{className:"audio6",style:{display:""+$}},r.createElement("h2",null,"My Foolish Heart"),r.createElement("audio",{controls:!0},r.createElement("source",{src:"src\\components\\8myfoolish.mp3",type:"audio/mpeg"}))),r.createElement("div",{className:"audio7",style:{display:""+W}},r.createElement("h2",null,"I'm A Fool To Want You"),r.createElement("audio",{controls:!0},r.createElement("source",{src:"src\\components\\6imafool.mp3",type:"audio/mpeg"}))),r.createElement("div",{className:"audio8",style:{display:""+K}},r.createElement("h2",null,"How Deep Is The Ocean"),r.createElement("audio",{controls:!0},r.createElement("source",{src:"src\\components\\7howdeep.mp3",type:"audio/mpeg"}))))))}},858:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(294);t.default=function(){null===document.querySelector(".song-name")&&fetch("./././song-list-data.json").then((function(e){return e.json()})).then((function(e){var t=function(e){for(var t=0;t<n.length;t++){var r=document.createElement("li");r.innerText=n[t],r.classList.add("song-name"),e.appendChild(r)}},n=e[0].standards.sort(),r=document.createElement("ul");r.classList.add("standards");var a=document.createElement("h2");a.innerText="Standards",r.appendChild(a),t(r),document.querySelector(".songs").appendChild(r),n=e[1].opera.sort();var o=document.createElement("ul");o.classList.add("opera");var l=document.createElement("h2");l.innerText="Opera",o.appendChild(l),t(o),document.querySelector(".songs").appendChild(o),n=e[2].contemporary.sort();var i=document.createElement("ul");i.classList.add("contemporary");var u=document.createElement("h2");u.innerText="Contemporary",i.appendChild(u),t(i),document.querySelector(".songs").appendChild(i)}));var e=a.useState(!1),t=e[0],n=e[1],o=a.useState(!0),l=o[0],i=o[1],u=a.useState(!1),c=u[0],s=u[1],f=a.useState(!0),d=f[0],p=f[1],m=a.useState(!1),h=m[0],v=m[1],y=a.useState(!0),g=y[0],b=y[1];return r.createElement("div",{id:"songs-container"},r.createElement("h1",null,"Songs To Do"),r.createElement("p",{className:"songs-p"},"This is list of songs I am interested in learning."),r.createElement("div",{className:"songs"},r.createElement("div",{className:"bill",onMouseEnter:function(){return n(!0),void i(!1)},onMouseLeave:function(){return n(!1),void i(!0)}},r.createElement("h2",null,"Bill Evans"),r.createElement("h3",null,"Pianist"),l&&r.createElement("p",{className:"billshow"},"“I always like people who have developed long and hard... I think what they arrive at is usually a much deeper and more beautiful thing than the person who seems to have that ability and fluidity from the beginning.”"),t&&r.createElement("p",{className:"billhide"},"“I believe in things that are developed through hard work. I always like people who have developed long and hard, especially through introspection and a lot of dedication. I think what they arrive at is usually a much deeper and more beautiful thing than the person who seems to have that ability and fluidity from the beginning. I say this because it's a good message to give to young talents who feel as I used to.”")),r.createElement("div",{className:"maria",onMouseEnter:function(){return s(!0),void p(!1)},onMouseLeave:function(){return s(!1),void p(!0)}},r.createElement("h2",null,"Maria Callas"),r.createElement("h3",null,"Soprano"),d&&r.createElement("p",{className:"mariashow"},"“When music fails to agree to the ear, to soothe the ear and the heart and the senses, then it has missed the point.”"),c&&r.createElement("p",{className:"mariahide"},"“When music fails to agree to the ear, to soothe the ear and the heart and the senses, then it has missed it's point. That is why I don't agree with modern music... Music should be essentially simple, and upon simplicity and beauty of line, it could become great.”")),r.createElement("div",{className:"tony",onMouseEnter:function(){return v(!0),void b(!1)},onMouseLeave:function(){return v(!1),void b(!0)}},r.createElement("h2",null,"Tony Bennett"),r.createElement("h3",null,"Tenor"),g&&r.createElement("p",{className:"tonyshow"},"“When you listen to the audience, they will tell you what they like.”"),h&&r.createElement("p",{className:"tonyhide"},"“I'm still learning about music. The best way to learn is to listen to the audience. When you listen to the audience, they will tell you what they like. I wish these big corporations, instead of telling the audience what they should have, would listen.”"))))}},7:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),a=n(427);t.default=function(){return r.createElement(r.Fragment,null,r.createElement("div",{className:"stribe-container"},r.createElement("div",{className:"left-half"},r.createElement("span",{id:"stribe-top"},r.createElement(a.NavLink,{activeClassName:"active",to:"/",onClick:function(){document.querySelector("nav").style.display="grid"},id:"nav-stribe"},r.createElement("span",{id:"back"},"← Back")),"Steven Fabrizio Music"),r.createElement("h4",{id:"stribe-h4"},"Pay Steven Fabrizio Music"),r.createElement("span",{id:"cart"},r.createElement("del",null,"$14.99")," $0.00"),r.createElement("div",{id:"order"},r.createElement("span",{id:"spot1"},"Cloud Taster"),r.createElement("span",{id:"spot2"},"$0.00"),r.createElement("span",{id:"spot3"},"Qty 1")),r.createElement("div",{id:"footerthing"},r.createElement("span",null,"Powered by",r.createElement("span",{className:"stribe"},"stribe")),r.createElement("span",{id:"terms"},"Terms"),r.createElement("span",{id:"privacy"},"Privacy"))),r.createElement("div",{className:"right-half"},r.createElement("form",{action:"https://cdn.discordapp.com/attachments/840737262044315669/898000311124394004/3beautifullove.mp3"},r.createElement("div",{className:"form-header"},r.createElement("h4",{className:"title"},"Pay with card")),r.createElement("label",{htmlFor:"email",id:"email-label"},"Email"),r.createElement("input",{type:"email",id:"email",name:"email"}),r.createElement("label",{htmlFor:"card",id:"card-label"},"Card information"),r.createElement("div",{className:"ccstuff"},r.createElement("input",{onKeyPress:function(e){/[0-9]/.test(e.key)||e.preventDefault()},onChange:function(){var e;4!==(e=document.getElementById("ccn").value).length&&9!==e.length&&14!==e.length||(document.getElementById("ccn").value=document.getElementById("ccn").value+" ")},maxLength:19,placeholder:"4242 4242 4242 4242",autoComplete:"cc-number",inputMode:"numeric",id:"ccn",name:"card",type:"tel"}),r.createElement("input",{autoComplete:"cc-exp",autoCorrect:"off",spellCheck:"false",id:"cardExpiry",name:"cardExpiry",type:"tel",placeholder:"MMYY",onKeyPress:function(e){/[0-9]/.test(e.key)||e.preventDefault()},maxLength:4}),r.createElement("input",{className:"CheckoutInput CheckoutInput--tabularnums Input Input--empty",autoComplete:"cc-exp",autoCorrect:"off",spellCheck:"false",type:"tel","aria-label":"Expiration",id:"cardcvc",placeholder:"CVC","aria-invalid":"false",onKeyPress:function(e){/[0-9]/.test(e.key)||e.preventDefault()},maxLength:3})),r.createElement("label",{htmlFor:"name",id:"name-label"},"Name on card"),r.createElement("input",{type:"text",id:"name",name:"name",placeholder:""}),r.createElement("label",{htmlFor:"Country",id:"country-label"},"Country or region"),r.createElement("div",{className:"CoR"},r.createElement("select",{name:"Country",id:"country"},r.createElement("option",{value:"Afghanistan"},"Afghanistan"),r.createElement("option",{value:"Albania"},"Albania"),r.createElement("option",{value:"Algeria"},"Algeria"),r.createElement("option",{value:"American Samoa"},"American Samoa"),r.createElement("option",{value:"Andorra"},"Andorra"),r.createElement("option",{value:"Angola"},"Angola"),r.createElement("option",{value:"Anguilla"},"Anguilla"),r.createElement("option",{value:"Antarctica"},"Antarctica"),r.createElement("option",{value:"Antigua and Barbuda"},"Antigua and Barbuda"),r.createElement("option",{value:"Argentina"},"Argentina"),r.createElement("option",{value:"Armenia"},"Armenia"),r.createElement("option",{value:"Aruba"},"Aruba"),r.createElement("option",{value:"Australia"},"Australia"),r.createElement("option",{value:"Austria"},"Austria"),r.createElement("option",{value:"Azerbaijan"},"Azerbaijan"),r.createElement("option",{value:"Bahamas"},"Bahamas"),r.createElement("option",{value:"Bahrain"},"Bahrain"),r.createElement("option",{value:"Bangladesh"},"Bangladesh"),r.createElement("option",{value:"Barbados"},"Barbados"),r.createElement("option",{value:"Belarus"},"Belarus"),r.createElement("option",{value:"Belgium"},"Belgium"),r.createElement("option",{value:"Belize"},"Belize"),r.createElement("option",{value:"Benin"},"Benin"),r.createElement("option",{value:"Bermuda"},"Bermuda"),r.createElement("option",{value:"Bhutan"},"Bhutan"),r.createElement("option",{value:"Bolivia"},"Bolivia"),r.createElement("option",{value:"Bosnia and Herzegovina"},"Bosnia and Herzegovina"),r.createElement("option",{value:"Botswana"},"Botswana"),r.createElement("option",{value:"Bouvet Island"},"Bouvet Island"),r.createElement("option",{value:"Brazil"},"Brazil"),r.createElement("option",{value:"British Indian Ocean Territory"},"British Indian Ocean Territory"),r.createElement("option",{value:"Brunei Darussalam"},"Brunei Darussalam"),r.createElement("option",{value:"Bulgaria"},"Bulgaria"),r.createElement("option",{value:"Burkina Faso"},"Burkina Faso"),r.createElement("option",{value:"Burundi"},"Burundi"),r.createElement("option",{value:"Cambodia"},"Cambodia"),r.createElement("option",{value:"Cameroon"},"Cameroon"),r.createElement("option",{value:"Canada"},"Canada"),r.createElement("option",{value:"Cape Verde"},"Cape Verde"),r.createElement("option",{value:"Cayman Islands"},"Cayman Islands"),r.createElement("option",{value:"Central African Republic"},"Central African Republic"),r.createElement("option",{value:"Chad"},"Chad"),r.createElement("option",{value:"Chile"},"Chile"),r.createElement("option",{value:"China"},"China"),r.createElement("option",{value:"Christmas Island"},"Christmas Island"),r.createElement("option",{value:"Cocos (Keeling) Islands"},"Cocos (Keeling) Islands"),r.createElement("option",{value:"Colombia"},"Colombia"),r.createElement("option",{value:"Comoros"},"Comoros"),r.createElement("option",{value:"Congo"},"Congo"),r.createElement("option",{value:"Congo, The Democratic Republic of The"},"Congo, The Democratic Republic of The"),r.createElement("option",{value:"Cook Islands"},"Cook Islands"),r.createElement("option",{value:"Costa Rica"},"Costa Rica"),r.createElement("option",{value:"Cote D'ivoire"},"Cote D'ivoire"),r.createElement("option",{value:"Croatia"},"Croatia"),r.createElement("option",{value:"Cuba"},"Cuba"),r.createElement("option",{value:"Cyprus"},"Cyprus"),r.createElement("option",{value:"Czech Republic"},"Czech Republic"),r.createElement("option",{value:"Denmark"},"Denmark"),r.createElement("option",{value:"Djibouti"},"Djibouti"),r.createElement("option",{value:"Dominica"},"Dominica"),r.createElement("option",{value:"Dominican Republic"},"Dominican Republic"),r.createElement("option",{value:"Ecuador"},"Ecuador"),r.createElement("option",{value:"Egypt"},"Egypt"),r.createElement("option",{value:"El Salvador"},"El Salvador"),r.createElement("option",{value:"Equatorial Guinea"},"Equatorial Guinea"),r.createElement("option",{value:"Eritrea"},"Eritrea"),r.createElement("option",{value:"Estonia"},"Estonia"),r.createElement("option",{value:"Ethiopia"},"Ethiopia"),r.createElement("option",{value:"Falkland Islands (Malvinas)"},"Falkland Islands (Malvinas)"),r.createElement("option",{value:"Faroe Islands"},"Faroe Islands"),r.createElement("option",{value:"Fiji"},"Fiji"),r.createElement("option",{value:"Finland"},"Finland"),r.createElement("option",{value:"France"},"France"),r.createElement("option",{value:"French Guiana"},"French Guiana"),r.createElement("option",{value:"French Polynesia"},"French Polynesia"),r.createElement("option",{value:"French Southern Territories"},"French Southern Territories"),r.createElement("option",{value:"Gabon"},"Gabon"),r.createElement("option",{value:"Gambia"},"Gambia"),r.createElement("option",{value:"Georgia"},"Georgia"),r.createElement("option",{value:"Germany"},"Germany"),r.createElement("option",{value:"Ghana"},"Ghana"),r.createElement("option",{value:"Gibraltar"},"Gibraltar"),r.createElement("option",{value:"Greece"},"Greece"),r.createElement("option",{value:"Greenland"},"Greenland"),r.createElement("option",{value:"Grenada"},"Grenada"),r.createElement("option",{value:"Guadeloupe"},"Guadeloupe"),r.createElement("option",{value:"Guam"},"Guam"),r.createElement("option",{value:"Guatemala"},"Guatemala"),r.createElement("option",{value:"Guinea"},"Guinea"),r.createElement("option",{value:"Guinea-bissau"},"Guinea-bissau"),r.createElement("option",{value:"Guyana"},"Guyana"),r.createElement("option",{value:"Haiti"},"Haiti"),r.createElement("option",{value:"Heard Island and Mcdonald Islands"},"Heard Island and Mcdonald Islands"),r.createElement("option",{value:"Holy See (Vatican City State)"},"Holy See (Vatican City State)"),r.createElement("option",{value:"Honduras"},"Honduras"),r.createElement("option",{value:"Hong Kong"},"Hong Kong"),r.createElement("option",{value:"Hungary"},"Hungary"),r.createElement("option",{value:"Iceland"},"Iceland"),r.createElement("option",{value:"India"},"India"),r.createElement("option",{value:"Indonesia"},"Indonesia"),r.createElement("option",{value:"Iran, Islamic Republic of"},"Iran, Islamic Republic of"),r.createElement("option",{value:"Iraq"},"Iraq"),r.createElement("option",{value:"Ireland"},"Ireland"),r.createElement("option",{value:"Israel"},"Israel"),r.createElement("option",{value:"Italy"},"Italy"),r.createElement("option",{value:"Jamaica"},"Jamaica"),r.createElement("option",{value:"Japan"},"Japan"),r.createElement("option",{value:"Jordan"},"Jordan"),r.createElement("option",{value:"Kazakhstan"},"Kazakhstan"),r.createElement("option",{value:"Kenya"},"Kenya"),r.createElement("option",{value:"Kiribati"},"Kiribati"),r.createElement("option",{value:"Korea, Democratic People's Republic of"},"Korea, Democratic People's Republic of"),r.createElement("option",{value:"Korea, Republic of"},"Korea, Republic of"),r.createElement("option",{value:"Kuwait"},"Kuwait"),r.createElement("option",{value:"Kyrgyzstan"},"Kyrgyzstan"),r.createElement("option",{value:"Lao People's Democratic Republic"},"Lao People's Democratic Republic"),r.createElement("option",{value:"Latvia"},"Latvia"),r.createElement("option",{value:"Lebanon"},"Lebanon"),r.createElement("option",{value:"Lesotho"},"Lesotho"),r.createElement("option",{value:"Liberia"},"Liberia"),r.createElement("option",{value:"Libyan Arab Jamahiriya"},"Libyan Arab Jamahiriya"),r.createElement("option",{value:"Liechtenstein"},"Liechtenstein"),r.createElement("option",{value:"Lithuania"},"Lithuania"),r.createElement("option",{value:"Luxembourg"},"Luxembourg"),r.createElement("option",{value:"Macao"},"Macao"),r.createElement("option",{value:"North Macedonia"},"North Macedonia"),r.createElement("option",{value:"Madagascar"},"Madagascar"),r.createElement("option",{value:"Malawi"},"Malawi"),r.createElement("option",{value:"Malaysia"},"Malaysia"),r.createElement("option",{value:"Maldives"},"Maldives"),r.createElement("option",{value:"Mali"},"Mali"),r.createElement("option",{value:"Malta"},"Malta"),r.createElement("option",{value:"Marshall Islands"},"Marshall Islands"),r.createElement("option",{value:"Martinique"},"Martinique"),r.createElement("option",{value:"Mauritania"},"Mauritania"),r.createElement("option",{value:"Mauritius"},"Mauritius"),r.createElement("option",{value:"Mayotte"},"Mayotte"),r.createElement("option",{value:"Mexico"},"Mexico"),r.createElement("option",{value:"Micronesia, Federated States of"},"Micronesia, Federated States of"),r.createElement("option",{value:"Moldova, Republic of"},"Moldova, Republic of"),r.createElement("option",{value:"Monaco"},"Monaco"),r.createElement("option",{value:"Mongolia"},"Mongolia"),r.createElement("option",{value:"Montserrat"},"Montserrat"),r.createElement("option",{value:"Morocco"},"Morocco"),r.createElement("option",{value:"Mozambique"},"Mozambique"),r.createElement("option",{value:"Myanmar"},"Myanmar"),r.createElement("option",{value:"Namibia"},"Namibia"),r.createElement("option",{value:"Nauru"},"Nauru"),r.createElement("option",{value:"Nepal"},"Nepal"),r.createElement("option",{value:"Netherlands"},"Netherlands"),r.createElement("option",{value:"Netherlands Antilles"},"Netherlands Antilles"),r.createElement("option",{value:"New Caledonia"},"New Caledonia"),r.createElement("option",{value:"New Zealand"},"New Zealand"),r.createElement("option",{value:"Nicaragua"},"Nicaragua"),r.createElement("option",{value:"Niger"},"Niger"),r.createElement("option",{value:"Nigeria"},"Nigeria"),r.createElement("option",{value:"Niue"},"Niue"),r.createElement("option",{value:"Norfolk Island"},"Norfolk Island"),r.createElement("option",{value:"Northern Mariana Islands"},"Northern Mariana Islands"),r.createElement("option",{value:"Norway"},"Norway"),r.createElement("option",{value:"Oman"},"Oman"),r.createElement("option",{value:"Pakistan"},"Pakistan"),r.createElement("option",{value:"Palau"},"Palau"),r.createElement("option",{value:"Palestinian Territory, Occupied"},"Palestinian Territory, Occupied"),r.createElement("option",{value:"Panama"},"Panama"),r.createElement("option",{value:"Papua New Guinea"},"Papua New Guinea"),r.createElement("option",{value:"Paraguay"},"Paraguay"),r.createElement("option",{value:"Peru"},"Peru"),r.createElement("option",{value:"Philippines"},"Philippines"),r.createElement("option",{value:"Pitcairn"},"Pitcairn"),r.createElement("option",{value:"Poland"},"Poland"),r.createElement("option",{value:"Portugal"},"Portugal"),r.createElement("option",{value:"Puerto Rico"},"Puerto Rico"),r.createElement("option",{value:"Qatar"},"Qatar"),r.createElement("option",{value:"Reunion"},"Reunion"),r.createElement("option",{value:"Romania"},"Romania"),r.createElement("option",{value:"Russian Federation"},"Russian Federation"),r.createElement("option",{value:"Rwanda"},"Rwanda"),r.createElement("option",{value:"Saint Helena"},"Saint Helena"),r.createElement("option",{value:"Saint Kitts and Nevis"},"Saint Kitts and Nevis"),r.createElement("option",{value:"Saint Lucia"},"Saint Lucia"),r.createElement("option",{value:"Saint Pierre and Miquelon"},"Saint Pierre and Miquelon"),r.createElement("option",{value:"Saint Vincent and The Grenadines"},"Saint Vincent and The Grenadines"),r.createElement("option",{value:"Samoa"},"Samoa"),r.createElement("option",{value:"San Marino"},"San Marino"),r.createElement("option",{value:"Sao Tome and Principe"},"Sao Tome and Principe"),r.createElement("option",{value:"Saudi Arabia"},"Saudi Arabia"),r.createElement("option",{value:"Senegal"},"Senegal"),r.createElement("option",{value:"Serbia and Montenegro"},"Serbia and Montenegro"),r.createElement("option",{value:"Seychelles"},"Seychelles"),r.createElement("option",{value:"Sierra Leone"},"Sierra Leone"),r.createElement("option",{value:"Singapore"},"Singapore"),r.createElement("option",{value:"Slovakia"},"Slovakia"),r.createElement("option",{value:"Slovenia"},"Slovenia"),r.createElement("option",{value:"Solomon Islands"},"Solomon Islands"),r.createElement("option",{value:"Somalia"},"Somalia"),r.createElement("option",{value:"South Africa"},"South Africa"),r.createElement("option",{value:"South Georgia and The South Sandwich Islands"},"South Georgia and The South Sandwich Islands"),r.createElement("option",{value:"Spain"},"Spain"),r.createElement("option",{value:"Sri Lanka"},"Sri Lanka"),r.createElement("option",{value:"Sudan"},"Sudan"),r.createElement("option",{value:"Suriname"},"Suriname"),r.createElement("option",{value:"Svalbard and Jan Mayen"},"Svalbard and Jan Mayen"),r.createElement("option",{value:"Swaziland"},"Swaziland"),r.createElement("option",{value:"Sweden"},"Sweden"),r.createElement("option",{value:"Switzerland"},"Switzerland"),r.createElement("option",{value:"Syrian Arab Republic"},"Syrian Arab Republic"),r.createElement("option",{value:"Taiwan, Province of China"},"Taiwan, Province of China"),r.createElement("option",{value:"Tajikistan"},"Tajikistan"),r.createElement("option",{value:"Tanzania, United Republic of"},"Tanzania, United Republic of"),r.createElement("option",{value:"Thailand"},"Thailand"),r.createElement("option",{value:"Timor-leste"},"Timor-leste"),r.createElement("option",{value:"Togo"},"Togo"),r.createElement("option",{value:"Tokelau"},"Tokelau"),r.createElement("option",{value:"Tonga"},"Tonga"),r.createElement("option",{value:"Trinidad and Tobago"},"Trinidad and Tobago"),r.createElement("option",{value:"Tunisia"},"Tunisia"),r.createElement("option",{value:"Turkey"},"Turkey"),r.createElement("option",{value:"Turkmenistan"},"Turkmenistan"),r.createElement("option",{value:"Turks and Caicos Islands"},"Turks and Caicos Islands"),r.createElement("option",{value:"Tuvalu"},"Tuvalu"),r.createElement("option",{value:"Uganda"},"Uganda"),r.createElement("option",{value:"Ukraine"},"Ukraine"),r.createElement("option",{value:"United Arab Emirates"},"United Arab Emirates"),r.createElement("option",{value:"United Kingdom"},"United Kingdom"),r.createElement("option",{value:"United States",selected:!0},"United States"),r.createElement("option",{value:"United States Minor Outlying Islands"},"United States Minor Outlying Islands"),r.createElement("option",{value:"Uruguay"},"Uruguay"),r.createElement("option",{value:"Uzbekistan"},"Uzbekistan"),r.createElement("option",{value:"Vanuatu"},"Vanuatu"),r.createElement("option",{value:"Venezuela"},"Venezuela"),r.createElement("option",{value:"Viet Nam"},"Viet Nam"),r.createElement("option",{value:"Virgin Islands, British"},"Virgin Islands, British"),r.createElement("option",{value:"Virgin Islands, U.S."},"Virgin Islands, U.S."),r.createElement("option",{value:"Wallis and Futuna"},"Wallis and Futuna"),r.createElement("option",{value:"Western Sahara"},"Western Sahara"),r.createElement("option",{value:"Yemen"},"Yemen"),r.createElement("option",{value:"Zambia"},"Zambia"),r.createElement("option",{value:"Zimbabwe"},"Zimbabwe")),r.createElement("input",{type:"text",id:"zip",name:"zip",placeholder:"ZIP",onKeyPress:function(e){/[0-9]/.test(e.key)||e.preventDefault()},maxLength:5})),r.createElement("button",{className:"submit",id:"submit-btn",title:"You do not need to fill in the above information!"},"Pay $0.00")))))}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=n(294),t=n(935),r=n(632);t.render(e.createElement(r.default,null),document.querySelector("#root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2VzbS92YWx1ZS1lcXVhbC5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzbS9yZWFjdC1yb3V0ZXItZG9tLmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vc3JjL2FwcC50c3giLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC8uL3NyYy9jb21wb25lbnRzL2JldHRlcmhvbWUudHN4Iiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9zcmMvY29tcG9uZW50cy9nZWFyLnRzeCIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vc3JjL2NvbXBvbmVudHMvaGVhZGVyLnRzeCIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vc3JjL2NvbXBvbmVudHMvc2hvd2Nhc2UudHN4Iiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9zcmMvY29tcG9uZW50cy9zb25nc3RvZG8udHN4Iiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3QvLi9zcmMvY29tcG9uZW50cy9zdHJpYmUudHN4Iiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vbXlwcm9qOHR5cGVzY3JpcHRyZWFjdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL215cHJvajh0eXBlc2NyaXB0cmVhY3Qvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9teXByb2o4dHlwZXNjcmlwdHJlYWN0Ly4vc3JjL2luZGV4LnRzeCJdLCJuYW1lcyI6WyJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwibmFtZSIsImxlbmd0aCIsInByb3RvdHlwZSIsImNhbGxlciIsImNhbGxlZSIsImFyZ3VtZW50cyIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImRlZmluZVByb3BlcnR5IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50Iiwia2V5cyIsImNvbmNhdCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiaSIsImtleSIsImRlc2NyaXB0b3IiLCJlIiwiaGFzT3duUHJvcGVydHkiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsIlR5cGVFcnJvciIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJuIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0Iiwic291cmNlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsInMiLCJjYWxsIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhdGgiLCJvcHRpb25zIiwiUmVnRXhwIiwiZ3JvdXBzIiwibWF0Y2giLCJwdXNoIiwicHJlZml4IiwiZGVsaW1pdGVyIiwib3B0aW9uYWwiLCJyZXBlYXQiLCJwYXJ0aWFsIiwiYXN0ZXJpc2siLCJwYXR0ZXJuIiwiYXR0YWNoS2V5cyIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJmbGFncyIsImFycmF5VG9SZWdleHAiLCJ0b2tlbnNUb1JlZ0V4cCIsInBhcnNlIiwic3RyaW5nVG9SZWdleHAiLCJjb21waWxlIiwic3RyIiwidG9rZW5zVG9GdW5jdGlvbiIsIlBBVEhfUkVHRVhQIiwicmVzIiwidG9rZW5zIiwiaW5kZXgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZXhlYyIsIm0iLCJlc2NhcGVkIiwib2Zmc2V0Iiwic2xpY2UiLCJuZXh0IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInJlcGxhY2UiLCJjIiwiY2hhckNvZGVBdCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiQXJyYXkiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsInZhbHVlIiwiSlNPTiIsInN0cmluZ2lmeSIsImoiLCJ0ZXN0IiwicmUiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJlbmQiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiaXNBcnJheSIsImFyciIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsImxvY2F0aW9uIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiRXJyb3IiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsInIiLCJ5IiwiYSIsImIiLCJiYSIsIlNldCIsImNhIiwiZGEiLCJlYSIsImFkZCIsImZhIiwid2luZG93IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaGEiLCJpYSIsImphIiwia2EiLCJCIiwiZCIsImYiLCJnIiwidGhpcyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwiRCIsInRvTG93ZXJDYXNlIiwib2EiLCJwYSIsInFhIiwibWEiLCJpc05hTiIsIm5hIiwibGEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInhsaW5rSHJlZiIsInJhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJzYSIsInRhIiwidWEiLCJ3YSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiU3ltYm9sIiwiZm9yIiwiRSIsIk1hIiwiS2EiLCJpdGVyYXRvciIsIkxhIiwiTmEiLCJzdGFjayIsInRyaW0iLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiayIsImgiLCJRYSIsInRhZyIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiY29uc3RydWN0b3IiLCJnZXQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwiWGEiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsIllhIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJaYSIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCIkYSIsImFiIiwiYmIiLCJjYiIsIm93bmVyRG9jdW1lbnQiLCJlYiIsImNoaWxkcmVuIiwiQ2hpbGRyZW4iLCJkYiIsImZiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwicGIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsInFiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJyYiIsInNiIiwidGIiLCJzdHlsZSIsImluZGV4T2YiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInViIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmIiLCJ3YiIsImlzIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJSYiIsImwiLCJhcHBseSIsIm9uRXJyb3IiLCJTYiIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJaYiIsImFsdGVybmF0ZSIsInJldHVybiIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImNjIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsImJjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsInhjIiwieWMiLCJzaGlmdCIsInpjIiwiQWMiLCJCYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIkNjIiwiRGMiLCJFYyIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIkZjIiwiR2MiLCJIYyIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJJYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiUWMiLCJ1bnN0YWJsZV9ub3ciLCJGIiwiUmMiLCJVYyIsInBlbmRpbmdMYW5lcyIsImV4cGlyZWRMYW5lcyIsInN1c3BlbmRlZExhbmVzIiwicGluZ2VkTGFuZXMiLCJWYyIsImVudGFuZ2xlZExhbmVzIiwiZW50YW5nbGVtZW50cyIsIldjIiwiWGMiLCJZYyIsIlpjIiwiJGMiLCJldmVudFRpbWVzIiwiTWF0aCIsImNsejMyIiwiYmQiLCJjZCIsImxvZyIsIkxOMiIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImlkIiwiYmluZCIsInVjIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsIm9kIiwia2V5Q29kZSIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiY3VycmVudFRhcmdldCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiaXNQZXJzaXN0ZW50Iiwid2QiLCJ4ZCIsInlkIiwic2QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwidGQiLCJ1ZCIsInZpZXciLCJkZXRhaWwiLCJ2ZCIsIkFkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiZ2V0TW9kaWZpZXJTdGF0ZSIsInpkIiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIkJkIiwiRGQiLCJkYXRhVHJhbnNmZXIiLCJGZCIsIkhkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIkpkIiwiY2xpcGJvYXJkRGF0YSIsIkxkIiwiTWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiTmQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwiT2QiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGQiLCJSZCIsImNvZGUiLCJsb2NhbGUiLCJ3aGljaCIsIlRkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiVmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiWGQiLCJaZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiJGQiLCJhZSIsImJlIiwiZG9jdW1lbnRNb2RlIiwiY2UiLCJkZSIsImVlIiwiZmUiLCJnZSIsImhlIiwiaWUiLCJsZSIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJtZSIsIm5lIiwib2UiLCJldmVudCIsImxpc3RlbmVycyIsInBlIiwicWUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwibmV4dFNpYmxpbmciLCJNZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJOZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJPZSIsImNvbnRlbnRFZGl0YWJsZSIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlZlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCJZYiIsImluc3RhbmNlIiwibGlzdGVuZXIiLCJHIiwiJGUiLCJoYXMiLCJhZiIsImJmIiwicmFuZG9tIiwiY2YiLCJkZiIsInBhc3NpdmUiLCJOYiIsIngiLCJ3IiwieiIsInUiLCJxIiwidCIsInYiLCJlZiIsImZmIiwicGFyZW50V2luZG93IiwiZ2YiLCJoZiIsIkoiLCJLIiwiUSIsIkwiLCJqZSIsImNoYXIiLCJrZSIsInVuc2hpZnQiLCJqZiIsImtmIiwibGYiLCJtZiIsImF1dG9Gb2N1cyIsIm5mIiwiX19odG1sIiwib2YiLCJzZXRUaW1lb3V0IiwicGYiLCJjbGVhclRpbWVvdXQiLCJxZiIsInJmIiwic2YiLCJwcmV2aW91c1NpYmxpbmciLCJ0ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiSCIsIkkiLCJDZiIsIk0iLCJOIiwiRGYiLCJFZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkZmIiwiR2YiLCJIZiIsIklmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiSmYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiUWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlJmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiU2YiLCJUZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiVWYiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlZmIiwiV2YiLCJYZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiWWYiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJPIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwiX2N1cnJlbnRWYWx1ZSIsInNnIiwiY2hpbGRMYW5lcyIsInRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJ1ZyIsInZnIiwiY29udGV4dCIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ3ZyIsInhnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJmaXJzdEJhc2VVcGRhdGUiLCJsYXN0QmFzZVVwZGF0ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwieWciLCJ6ZyIsImV2ZW50VGltZSIsImxhbmUiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJBZyIsIkJnIiwiQ2ciLCJBIiwicCIsIkMiLCJEZyIsIkVnIiwiRmciLCJDb21wb25lbnQiLCJyZWZzIiwiR2ciLCJLZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFscyIsImVucXVldWVTZXRTdGF0ZSIsIkhnIiwiSWciLCJKZyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJMZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiTWciLCJzdGF0ZSIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJQZyIsIlFnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlJnIiwiU2ciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiVGciLCJVZyIsIm1vZGUiLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsImRvbmUiLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJJaCIsIkpoIiwiS2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJMaCIsIk1oIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwibXV0YWJsZVJlYWRMYW5lcyIsIk5oIiwiVSIsInVzZVN0YXRlIiwiZ2V0U25hcHNob3QiLCJzdWJzY3JpYmUiLCJ1c2VFZmZlY3QiLCJzZXRTbmFwc2hvdCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiY3JlYXRlIiwiZGVzdHJveSIsImRlcHMiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZU9wYXF1ZUlkZW50aWZpZXIiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJ1ZiIsImVpIiwiUmVhY3RDdXJyZW50T3duZXIiLCJmaSIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwiYmFzZUxhbmVzIiwibmkiLCJvaSIsInBpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicWkiLCJyaSIsInBlbmRpbmdDb250ZXh0IiwiQmkiLCJEaSIsIkVpIiwic2kiLCJyZXRyeUxhbmUiLCJ0aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ1aSIsInVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxNb2RlIiwiQWkiLCJGaSIsIkdpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwiViIsIkhpIiwiSWkiLCJXIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJtZXNzYWdlIiwiTmkiLCJjb25zb2xlIiwiZXJyb3IiLCJPaSIsIldlYWtNYXAiLCJQaSIsIlFpIiwiUmkiLCJTaSIsImNvbXBvbmVudERpZENhdGNoIiwiVGkiLCJjb21wb25lbnRTdGFjayIsIlVpIiwiV2Vha1NldCIsIlZpIiwiV2kiLCJYaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiWWkiLCJaaSIsIiRpIiwiZm9jdXMiLCJhaiIsImRpc3BsYXkiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjaiIsImRqIiwiZWoiLCJmaiIsImdqIiwiaGoiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaWoiLCJqaiIsImtqIiwibGoiLCJ0aGVuIiwibWoiLCJuaiIsImNlaWwiLCJvaiIsInBqIiwiWCIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJaIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJTYyIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJUYyIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlVqIiwidGltZW91dEhhbmRsZSIsIldqIiwiWGoiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJrayIsImxrIiwibWsiLCJuayIsIm9rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwidWsiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIlZqIiwidmsiLCJFdmVudHMiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJGcmFnbWVudCIsIkxhenkiLCJQb3J0YWwiLCJQcm9maWxlciIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsImlzVmFsaWRFbGVtZW50VHlwZSIsInR5cGVPZiIsIl9zZXRQcm90b3R5cGVPZiIsIm8iLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiX2V4dGVuZHMiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJzcGxpY2VPbmUiLCJsaXN0IiwicG9wIiwidmFsdWVFcXVhbCIsImV2ZXJ5IiwiaXRlbSIsImFWYWx1ZSIsImJWYWx1ZSIsImNvbmRpdGlvbiIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJjcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwidW5kZWZpbmVkIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJoYXNUcmFpbGluZ1NsYXNoIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwidXAiLCJwYXJ0IiwicmVzdWx0IiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImZuIiwiaXNBY3RpdmUiLCJmaWx0ZXIiLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiUG9wU3RhdGVFdmVudCIsIkhhc2hDaGFuZ2VFdmVudCIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfcmVmIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsInRyYW5zaXRpb25NYW5hZ2VyIiwic2V0U3RhdGUiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiYmFzZVRhZyIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRBdHRyaWJ1dGUiLCJwdXNoSGFzaFBhdGgiLCJuZXh0UGF0aHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWF4IiwiY3JlYXRlTWVtb3J5SGlzdG9yeSIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJpZXMiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwic3BsaWNlIiwiY2FuR28iLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJjb21tb25qc0dsb2JhbCIsImdsb2JhbFRoaXMiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiUHJvdmlkZXIiLCJfQ29tcG9uZW50IiwiX3RoaXMiLCJlbWl0dGVyIiwiX3Byb3RvIiwibmV4dFByb3BzIiwib2xkVmFsdWUiLCJDb25zdW1lciIsIl9Db21wb25lbnQyIiwiX3RoaXMyIiwib25VcGRhdGUiLCJfcHJvdG8yIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJoaXN0b3J5Q29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCQxIiwiUm91dGVyIiwiX1JlYWN0JENvbXBvbmVudCIsIl9pc01vdW50ZWQiLCJfcGVuZGluZ0xvY2F0aW9uIiwic3RhdGljQ29udGV4dCIsImNvbXB1dGVSb290TWF0Y2giLCJwYXJhbXMiLCJpc0V4YWN0IiwiTWVtb3J5Um91dGVyIiwiTGlmZWN5Y2xlIiwib25Nb3VudCIsInByZXZQcm9wcyIsIm9uVW5tb3VudCIsIlByb21wdCIsIl9yZWYkd2hlbiIsIndoZW4iLCJtZXRob2QiLCJzZWxmIiwicmVsZWFzZSIsImNhY2hlIiwiY2FjaGVDb3VudCIsImdlbmVyYXRlUGF0aCIsImdlbmVyYXRvciIsImNvbXBpbGVQYXRoIiwiUmVkaXJlY3QiLCJjb21wdXRlZE1hdGNoIiwiX3JlZiRwdXNoIiwiY2FjaGUkMSIsImNhY2hlQ291bnQkMSIsIm1hdGNoUGF0aCIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJyZWR1Y2UiLCJtYXRjaGVkIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwidmFsdWVzIiwibWVtbyIsIlJvdXRlIiwiY29udGV4dCQxIiwiX3RoaXMkcHJvcHMiLCJjcmVhdGVVUkwiLCJzdGF0aWNIYW5kbGVyIiwibWV0aG9kTmFtZSIsIm5vb3AiLCJTdGF0aWNSb3V0ZXIiLCJoYW5kbGVQdXNoIiwibmF2aWdhdGVUbyIsImhhbmRsZVJlcGxhY2UiLCJoYW5kbGVMaXN0ZW4iLCJoYW5kbGVCbG9jayIsIl90aGlzJHByb3BzJGJhc2VuYW1lIiwiX3RoaXMkcHJvcHMkY29udGV4dCIsImFkZEJhc2VuYW1lIiwiX3RoaXMkcHJvcHMyIiwiX3RoaXMkcHJvcHMyJGJhc2VuYW1lIiwiX3RoaXMkcHJvcHMyJGNvbnRleHQiLCJfdGhpcyRwcm9wczIkbG9jYXRpb24iLCJyZXN0IiwiU3dpdGNoIiwid2l0aFJvdXRlciIsIndyYXBwZWRDb21wb25lbnRSZWYiLCJyZW1haW5pbmdQcm9wcyIsIldyYXBwZWRDb21wb25lbnQiLCJ1c2VIaXN0b3J5IiwidXNlTG9jYXRpb24iLCJ1c2VQYXJhbXMiLCJ1c2VSb3V0ZU1hdGNoIiwiQnJvd3NlclJvdXRlciIsIkhhc2hSb3V0ZXIiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsIm5vcm1hbGl6ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsImZvcndhcmRSZWYiLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwiZXgiLCJpc01vZGlmaWVkRXZlbnQiLCJMaW5rIiwiX3JlZjIiLCJfcmVmMiRjb21wb25lbnQiLCJmb3J3YXJkUmVmU2hpbSQxIiwiZm9yd2FyZFJlZiQxIiwiTmF2TGluayIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiY2xhc3NOYW1lIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiZXNjYXBlIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJkZWZhdWx0IiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJjb3VudCIsInRvQXJyYXkiLCJvbmx5IiwiUHVyZUNvbXBvbmVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJwZXJmb3JtYW5jZSIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiUmVhY3QiLCJyZWFjdF9yb3V0ZXJfZG9tXzEiLCJoZWFkZXJfMSIsImdlYXJfMSIsInNvbmdzdG9kb18xIiwiYmV0dGVyaG9tZV8xIiwic2hvd2Nhc2VfMSIsInN0cmliZV8xIiwic3JjIiwibG9hZGluZyIsInRpdGxlIiwiYWxsb3ciLCJzY3JvbGxpbmciLCJmcmFtZUJvcmRlciIsInJlYWN0XzEiLCJfYSIsIlluRkNsYXNzIiwic2V0WW5GQ2xhc3MiLCJfYiIsIlNvVENsYXNzIiwic2V0U29UQ2xhc3MiLCJfYyIsIldBWURDbGFzcyIsInNldFdBWURDbGFzcyIsIl9kIiwiV0lGaUxDbGFzcyIsInNldFdJRmlMQ2xhc3MiLCJfZSIsIkFCQ2xhc3MiLCJzZXRBQkNsYXNzIiwiX2YiLCJJSVJDbGFzcyIsInNldElJUkNsYXNzIiwiX2ciLCJFQ2xhc3MiLCJzZXRFQ2xhc3MiLCJfaCIsIlRTb1lTQ2xhc3MiLCJzZXRUU29ZU0NsYXNzIiwiX2oiLCJZbkZEaXNwbGF5Iiwic2V0WW5GRGlzcGxheSIsIl9rIiwiU29URGlzcGxheSIsInNldFNvVERpc3BsYXkiLCJfbCIsIldBWUREaXNwbGF5Iiwic2V0V0FZRERpc3BsYXkiLCJfbSIsIldJRmlMRGlzcGxheSIsInNldFdJRmlMRGlzcGxheSIsIl9vIiwiQUJEaXNwbGF5Iiwic2V0QUJEaXNwbGF5IiwiX3AiLCJJSVJEaXNwbGF5Iiwic2V0SUlSRGlzcGxheSIsIl9xIiwiRURpc3BsYXkiLCJzZXRFRGlzcGxheSIsIl9yIiwiVFNvWVNEaXNwbGF5Iiwic2V0VFNvWVNEaXNwbGF5IiwiU3RvcEF1ZGlvT25DbGljayIsImF1ZGlvRWxlbWVudHMiLCJwYXVzZSIsImN1cnJlbnRUaW1lIiwiY29udHJvbHMiLCJmZXRjaCIsInJlc3BvbnNlIiwianNvbiIsIkdlbmVyYXRlTGlzdHNPZlNvbmdzIiwibXlTb25nRGl2Iiwic3RhbmRhcmRzQXJyYXkiLCJteUxpIiwiaW5uZXJUZXh0IiwiY2xhc3NMaXN0Iiwic3RhbmRhcmRzIiwic29ydCIsIm15U29uZ1VsMSIsIm15SDIxIiwib3BlcmEiLCJteVNvbmdVbDIiLCJteUgyMiIsImNvbnRlbXBvcmFyeSIsIm15U29uZ0RpdjMiLCJteUgyMyIsImluSG92ZXJCIiwic2V0SG92ZXJJbkIiLCJvdXRIb3ZlckIiLCJzZXRIb3Zlck91dEIiLCJpbkhvdmVyTSIsInNldEhvdmVySW5NIiwib3V0SG92ZXJNIiwic2V0SG92ZXJPdXRNIiwiaW5Ib3ZlclQiLCJzZXRIb3ZlckluVCIsIm91dEhvdmVyVCIsInNldEhvdmVyT3V0VCIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VMZWF2ZSIsImh0bWxGb3IiLCJvbktleVByZXNzIiwib25DaGFuZ2UiLCJjY252YWx1ZSIsImdldEVsZW1lbnRCeUlkIiwibWF4TGVuZ3RoIiwicGxhY2Vob2xkZXIiLCJhdXRvQ29tcGxldGUiLCJpbnB1dE1vZGUiLCJhdXRvQ29ycmVjdCIsInNwZWxsQ2hlY2siLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJGdW5jdGlvbiIsInByb3AiLCJ0b1N0cmluZ1RhZyIsIlJlYWN0RE9NIiwiYXBwXzEiXSwibWFwcGluZ3MiOiI7d0NBRUEsSUFBSUEsRUFBVSxFQUFRLEtBTWxCQyxFQUFnQixDQUNsQkMsbUJBQW1CLEVBQ25CQyxhQUFhLEVBQ2JDLGNBQWMsRUFDZEMsY0FBYyxFQUNkQyxhQUFhLEVBQ2JDLGlCQUFpQixFQUNqQkMsMEJBQTBCLEVBQzFCQywwQkFBMEIsRUFDMUJDLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxNQUFNLEdBRUpDLEVBQWdCLENBQ2xCQyxNQUFNLEVBQ05DLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxRQUFRLEVBQ1JDLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxPQUFPLEdBU0xDLEVBQWUsQ0FDakIsVUFBWSxFQUNaQyxTQUFTLEVBQ1RqQixjQUFjLEVBQ2RDLGFBQWEsRUFDYkssV0FBVyxFQUNYQyxNQUFNLEdBRUpXLEVBQWUsR0FJbkIsU0FBU0MsRUFBV0MsR0FF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QU90NkMsU0FBU293QyxjQUFjLFciLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xyXG5cclxuLyoqXHJcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxyXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXHJcbiAqL1xyXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcclxuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcclxuICBjb250ZXh0VHlwZTogdHJ1ZSxcclxuICBjb250ZXh0VHlwZXM6IHRydWUsXHJcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxyXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxyXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcclxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXHJcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxyXG4gIG1peGluczogdHJ1ZSxcclxuICBwcm9wVHlwZXM6IHRydWUsXHJcbiAgdHlwZTogdHJ1ZVxyXG59O1xyXG52YXIgS05PV05fU1RBVElDUyA9IHtcclxuICBuYW1lOiB0cnVlLFxyXG4gIGxlbmd0aDogdHJ1ZSxcclxuICBwcm90b3R5cGU6IHRydWUsXHJcbiAgY2FsbGVyOiB0cnVlLFxyXG4gIGNhbGxlZTogdHJ1ZSxcclxuICBhcmd1bWVudHM6IHRydWUsXHJcbiAgYXJpdHk6IHRydWVcclxufTtcclxudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XHJcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcclxuICByZW5kZXI6IHRydWUsXHJcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxyXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxyXG4gIHByb3BUeXBlczogdHJ1ZVxyXG59O1xyXG52YXIgTUVNT19TVEFUSUNTID0ge1xyXG4gICckJHR5cGVvZic6IHRydWUsXHJcbiAgY29tcGFyZTogdHJ1ZSxcclxuICBkZWZhdWx0UHJvcHM6IHRydWUsXHJcbiAgZGlzcGxheU5hbWU6IHRydWUsXHJcbiAgcHJvcFR5cGVzOiB0cnVlLFxyXG4gIHR5cGU6IHRydWVcclxufTtcclxudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xyXG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XHJcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xyXG5cclxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcclxuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XHJcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcclxuICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XHJcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXHJcblxyXG5cclxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcclxufVxyXG5cclxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xyXG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xyXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcclxudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XHJcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcclxudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XHJcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcclxuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcclxuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXHJcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XHJcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xyXG5cclxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xyXG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XHJcblxyXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xyXG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xyXG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xyXG5cclxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XHJcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xyXG5cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xyXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XHJcbiIsIi8qXHJcbm9iamVjdC1hc3NpZ25cclxuKGMpIFNpbmRyZSBTb3JodXNcclxuQGxpY2Vuc2UgTUlUXHJcbiovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXHJcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xyXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xyXG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XHJcblxyXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcclxuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIE9iamVjdCh2YWwpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XHJcblx0dHJ5IHtcclxuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxyXG5cclxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcclxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcclxuXHRcdHRlc3QxWzVdID0gJ2RlJztcclxuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxyXG5cdFx0dmFyIHRlc3QyID0ge307XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcclxuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xyXG5cdFx0fVxyXG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcclxuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xyXG5cdFx0fSk7XHJcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcclxuXHRcdHZhciB0ZXN0MyA9IHt9O1xyXG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XHJcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XHJcblx0XHR9KTtcclxuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxyXG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0cnVlO1xyXG5cdH0gY2F0Y2ggKGVycikge1xyXG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XHJcblx0dmFyIGZyb207XHJcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcclxuXHR2YXIgc3ltYm9scztcclxuXHJcblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcclxuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcclxuXHJcblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xyXG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XHJcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcclxuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcclxuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xyXG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIHRvO1xyXG59O1xyXG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxyXG5cclxuLyoqXHJcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cclxuICovXHJcbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXHJcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2VcclxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcclxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cclxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxyXG5cclxuLyoqXHJcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXHJcbiAqXHJcbiAqIEB0eXBlIHtSZWdFeHB9XHJcbiAqL1xyXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcclxuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxyXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXHJcbiAgJyhcXFxcXFxcXC4pJyxcclxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxyXG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XHJcbiAgLy9cclxuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXHJcbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxyXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cclxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXHJcbl0uam9pbignfCcpLCAnZycpXHJcblxyXG4vKipcclxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcclxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xyXG4gKiBAcmV0dXJuIHshQXJyYXl9XHJcbiAqL1xyXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XHJcbiAgdmFyIHRva2VucyA9IFtdXHJcbiAgdmFyIGtleSA9IDBcclxuICB2YXIgaW5kZXggPSAwXHJcbiAgdmFyIHBhdGggPSAnJ1xyXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcclxuICB2YXIgcmVzXHJcblxyXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XHJcbiAgICB2YXIgbSA9IHJlc1swXVxyXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cclxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcclxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXHJcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXHJcblxyXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXHJcbiAgICBpZiAoZXNjYXBlZCkge1xyXG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cclxuICAgICAgY29udGludWVcclxuICAgIH1cclxuXHJcbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cclxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cclxuICAgIHZhciBuYW1lID0gcmVzWzNdXHJcbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxyXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXHJcbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cclxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxyXG5cclxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXHJcbiAgICBpZiAocGF0aCkge1xyXG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxyXG4gICAgICBwYXRoID0gJydcclxuICAgIH1cclxuXHJcbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcclxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcclxuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xyXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXHJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcclxuXHJcbiAgICB0b2tlbnMucHVzaCh7XHJcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXHJcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxyXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcclxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxyXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcclxuICAgICAgcGFydGlhbDogcGFydGlhbCxcclxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXHJcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXHJcbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xyXG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxyXG4gIH1cclxuXHJcbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cclxuICBpZiAocGF0aCkge1xyXG4gICAgdG9rZW5zLnB1c2gocGF0aClcclxuICB9XHJcblxyXG4gIHJldHVybiB0b2tlbnNcclxufVxyXG5cclxuLyoqXHJcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXHJcbiAqXHJcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xyXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XHJcbiAqL1xyXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcclxuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpLCBvcHRpb25zKVxyXG59XHJcblxyXG4vKipcclxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXHJcbiAqXHJcbiAqIEBwYXJhbSAge3N0cmluZ31cclxuICogQHJldHVybiB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcclxuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xyXG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxyXG4gIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9XHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcclxuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xyXG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxyXG4gIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cclxuICovXHJcbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucywgb3B0aW9ucykge1xyXG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxyXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXHJcblxyXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcclxuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xyXG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcsIGZsYWdzKG9wdGlvbnMpKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcclxuICAgIHZhciBwYXRoID0gJydcclxuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XHJcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cclxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxyXG5cclxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICBwYXRoICs9IHRva2VuXHJcblxyXG4gICAgICAgIGNvbnRpbnVlXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cclxuICAgICAgdmFyIHNlZ21lbnRcclxuXHJcbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XHJcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XHJcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cclxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XHJcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgY29udGludWVcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xyXG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xyXG4gICAgICAgICAgICBjb250aW51ZVxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcclxuXHJcbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnRpbnVlXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcclxuXHJcbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBwYXRoXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cclxuICpcclxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcclxuICogQHJldHVybiB7c3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcclxuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxyXG59XHJcblxyXG4vKipcclxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xyXG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxyXG59XHJcblxyXG4vKipcclxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cclxuICpcclxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcclxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xyXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxyXG4gKi9cclxuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcclxuICByZS5rZXlzID0ga2V5c1xyXG4gIHJldHVybiByZVxyXG59XHJcblxyXG4vKipcclxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cclxuICpcclxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XHJcbiAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xyXG59XHJcblxyXG4vKipcclxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXHJcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcclxuICogQHJldHVybiB7IVJlZ0V4cH1cclxuICovXHJcbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XHJcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cclxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcclxuXHJcbiAgaWYgKGdyb3Vwcykge1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAga2V5cy5wdXNoKHtcclxuICAgICAgICBuYW1lOiBpLFxyXG4gICAgICAgIHByZWZpeDogbnVsbCxcclxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXHJcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxyXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXHJcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXHJcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxyXG4gICAgICAgIHBhdHRlcm46IG51bGxcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cclxuICpcclxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxyXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXHJcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcclxuICogQHJldHVybiB7IVJlZ0V4cH1cclxuICovXHJcbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcclxuICB2YXIgcGFydHMgPSBbXVxyXG5cclxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcclxuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcclxuICB9XHJcblxyXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcclxuXHJcbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxyXG59XHJcblxyXG4vKipcclxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXHJcbiAqXHJcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcclxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xyXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXHJcbiAqIEByZXR1cm4geyFSZWdFeHB9XHJcbiAqL1xyXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xyXG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXHJcbiAqXHJcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXHJcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcclxuICogQHJldHVybiB7IVJlZ0V4cH1cclxuICovXHJcbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcclxuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcclxuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXHJcbiAgICBrZXlzID0gW11cclxuICB9XHJcblxyXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XHJcblxyXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxyXG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcclxuICB2YXIgcm91dGUgPSAnJ1xyXG5cclxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cclxuXHJcbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xyXG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcclxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcclxuXHJcbiAgICAgIGtleXMucHVzaCh0b2tlbilcclxuXHJcbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcclxuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XHJcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XHJcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxyXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXHJcblxyXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXHJcbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXHJcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxyXG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cclxuICBpZiAoIXN0cmljdCkge1xyXG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xyXG4gIH1cclxuXHJcbiAgaWYgKGVuZCkge1xyXG4gICAgcm91dGUgKz0gJyQnXHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXHJcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxyXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXHJcbiAgfVxyXG5cclxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXHJcbiAqXHJcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXHJcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcclxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXHJcbiAqXHJcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxyXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcclxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXHJcbiAqIEByZXR1cm4geyFSZWdFeHB9XHJcbiAqL1xyXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcclxuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcclxuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXHJcbiAgICBrZXlzID0gW11cclxuICB9XHJcblxyXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XHJcblxyXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XHJcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcclxuICB9XHJcblxyXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XHJcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXHJcbn1cclxuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcclxuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcclxufTtcclxuIiwiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XHJcblxyXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cclxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XHJcbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcclxuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XHJcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xyXG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXHJcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcclxuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xyXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcclxuICAgICk7XHJcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcclxuICAgIHRocm93IGVycjtcclxuICB9O1xyXG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XHJcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcclxuICAgIHJldHVybiBzaGltO1xyXG4gIH07XHJcbiAgLy8gSW1wb3J0YW50IVxyXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxyXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcclxuICAgIGFycmF5OiBzaGltLFxyXG4gICAgYm9vbDogc2hpbSxcclxuICAgIGZ1bmM6IHNoaW0sXHJcbiAgICBudW1iZXI6IHNoaW0sXHJcbiAgICBvYmplY3Q6IHNoaW0sXHJcbiAgICBzdHJpbmc6IHNoaW0sXHJcbiAgICBzeW1ib2w6IHNoaW0sXHJcblxyXG4gICAgYW55OiBzaGltLFxyXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcclxuICAgIGVsZW1lbnQ6IHNoaW0sXHJcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcclxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXHJcbiAgICBub2RlOiBzaGltLFxyXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXHJcbiAgICBvbmVPZjogZ2V0U2hpbSxcclxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcclxuICAgIHNoYXBlOiBnZXRTaGltLFxyXG4gICAgZXhhY3Q6IGdldFNoaW0sXHJcblxyXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXHJcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxyXG4gIH07XHJcblxyXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xyXG5cclxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XHJcbn07XHJcbiIsIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcclxuXHJcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXHJcbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxyXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XHJcbn0gZWxzZSB7XHJcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cclxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XHJcbn1cclxuIiwiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xyXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxyXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcclxuICpcclxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG4vKlxyXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXHJcbiovXHJcbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHkoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHkoMjI3KSk7dmFyIGJhPW5ldyBTZXQsY2E9e307ZnVuY3Rpb24gZGEoYSxiKXtlYShhLGIpO2VhKGErXCJDYXB0dXJlXCIsYil9XHJcbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cclxudmFyIGZhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxoYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8saWE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxcclxuamE9e30sa2E9e307ZnVuY3Rpb24gbGEoYSl7aWYoaWEuY2FsbChrYSxhKSlyZXR1cm4hMDtpZihpYS5jYWxsKGphLGEpKXJldHVybiExO2lmKGhhLnRlc3QoYSkpcmV0dXJuIGthW2FdPSEwO2phW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIG1hKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxyXG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xyXG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xyXG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGRpc2FibGVSZW1vdGVQbGF5YmFjayBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xyXG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxyXG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLFxyXG5wYSk7RFtiXT1uZXcgQihiLDEsITEsYSxudWxsLCExLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XHJcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcclxuZnVuY3Rpb24gcWEoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwobmEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP2xhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XHJcbnZhciByYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxzYT02MDEwMyx0YT02MDEwNix1YT02MDEwNyx3YT02MDEwOCx4YT02MDExNCx5YT02MDEwOSx6YT02MDExMCxBYT02MDExMixCYT02MDExMyxDYT02MDEyMCxEYT02MDExNSxFYT02MDExNixGYT02MDEyMSxHYT02MDEyOCxIYT02MDEyOSxJYT02MDEzMCxKYT02MDEzMTtcclxuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxyXG52YXIgS2E9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIExhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1LYSYmYVtLYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgTWE7ZnVuY3Rpb24gTmEoYSl7aWYodm9pZCAwPT09TWEpdHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGMpe3ZhciBiPWMuc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7TWE9YiYmYlsxXXx8XCJcIn1yZXR1cm5cIlxcblwiK01hK2F9dmFyIE9hPSExO1xyXG5mdW5jdGlvbiBQYShhLGIpe2lmKCFhfHxPYSlyZXR1cm5cIlwiO09hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChrKXt2YXIgZD1rfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2goayl7ZD1rfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goayl7ZD1rfWEoKX19Y2F0Y2goayl7aWYoayYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBrLnN0YWNrKXtmb3IodmFyIGU9ay5zdGFjay5zcGxpdChcIlxcblwiKSxcclxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxyXG5mdW5jdGlvbiBRYShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gTmEoYS50eXBlKTtjYXNlIDE2OnJldHVybiBOYShcIkxhenlcIik7Y2FzZSAxMzpyZXR1cm4gTmEoXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBOYShcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAyOmNhc2UgMTU6cmV0dXJuIGE9UGEoYS50eXBlLCExKSxhO2Nhc2UgMTE6cmV0dXJuIGE9UGEoYS50eXBlLnJlbmRlciwhMSksYTtjYXNlIDIyOnJldHVybiBhPVBhKGEudHlwZS5fcmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1QYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cclxuZnVuY3Rpb24gUmEoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSB0YTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgeGE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2Ugd2E6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBCYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBDYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB6YTpyZXR1cm4oYS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSB5YTpyZXR1cm4oYS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBBYTp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtcclxucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XHJcbmZ1bmN0aW9uIFVhKGEpe3ZhciBiPVRhKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxyXG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxyXG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XHJcbmZ1bmN0aW9uIGFiKGEsYil7JGEoYSxiKTt2YXIgYz1TYShiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9iYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZiYihhLGIudHlwZSxTYShiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cclxuZnVuY3Rpb24gY2IoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cclxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XHJcbmZ1bmN0aW9uIGZiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitTYShjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxyXG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IoeSg5MSkpO3JldHVybiBtKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHkoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih5KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxyXG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XHJcbmZ1bmN0aW9uIGxiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxyXG52YXIgbmIsb2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09a2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bmI9bmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9bmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xyXG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxyXG52YXIgcWI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxyXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxyYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocWIpLmZvckVhY2goZnVuY3Rpb24oYSl7cmIuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtxYltiXT1xYlthXX0pfSk7ZnVuY3Rpb24gc2IoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHFiLmhhc093blByb3BlcnR5KGEpJiZxYlthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XHJcbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XHJcbmZ1bmN0aW9uIHZiKGEsYil7aWYoYil7aWYodWJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih5KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih5KDYyKSk7fX1cclxuZnVuY3Rpb24gd2IoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uIHhiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeWI9bnVsbCx6Yj1udWxsLEFiPW51bGw7XHJcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cclxuZnVuY3Rpb24gTmIoYSxiLGMpe2lmKExiKXJldHVybiBhKGIsYyk7TGI9ITA7dHJ5e3JldHVybiBKYihhLGIsYyl9ZmluYWxseXtMYj0hMSxNYigpfX1cclxuZnVuY3Rpb24gT2IoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDt2YXIgZD1EYihjKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09XHJcbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cclxuZnVuY3Rpb24gWWIoYSxiLGMsZCxlLGYsZyxoLGspe1hiLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihTYil7aWYoU2Ipe3ZhciBsPVRiO1NiPSExO1RiPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih5KDE5OCkpO1VifHwoVWI9ITAsVmI9bCl9fWZ1bmN0aW9uIFpiKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5mbGFncyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gJGIoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBhYyhhKXtpZihaYihhKSE9PWEpdGhyb3cgRXJyb3IoeSgxODgpKTt9XHJcbmZ1bmN0aW9uIGJjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPVpiKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGFjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGFjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IoeSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XHJcbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxyXG5mdW5jdGlvbiBkYyhhLGIpe2Zvcih2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09Yjspe2lmKGI9PT1hfHxiPT09YylyZXR1cm4hMDtiPWIucmV0dXJufXJldHVybiExfXZhciBlYyxmYyxnYyxoYyxpYz0hMSxqYz1bXSxrYz1udWxsLGxjPW51bGwsbWM9bnVsbCxuYz1uZXcgTWFwLG9jPW5ldyBNYXAscGM9W10scWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xyXG5mdW5jdGlvbiByYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSxkb21FdmVudE5hbWU6YixldmVudFN5c3RlbUZsYWdzOmN8MTYsbmF0aXZlRXZlbnQ6ZSx0YXJnZXRDb250YWluZXJzOltkXX19ZnVuY3Rpb24gc2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjprYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6bGM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6bWM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOm5jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOm9jLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxyXG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XHJcbmZ1bmN0aW9uIHVjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIGtjPXRjKGtjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBsYz10YyhsYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gbWM9dGMobWMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtuYy5zZXQoZix0YyhuYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsb2Muc2V0KGYsdGMob2MuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxyXG5mdW5jdGlvbiB2YyhhKXt2YXIgYj13YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVpiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPSRiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO2hjKGEubGFuZVByaW9yaXR5LGZ1bmN0aW9uKCl7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe2djKGMpfSl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxyXG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XHJcbmZ1bmN0aW9uIEFjKCl7Zm9yKGljPSExOzA8amMubGVuZ3RoOyl7dmFyIGE9amNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNiKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmZWMoYSk7YnJlYWt9Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpe2EuYmxvY2tlZE9uPWM7YnJlYWt9Yi5zaGlmdCgpfW51bGw9PT1hLmJsb2NrZWRPbiYmamMuc2hpZnQoKX1udWxsIT09a2MmJnhjKGtjKSYmKGtjPW51bGwpO251bGwhPT1sYyYmeGMobGMpJiYobGM9bnVsbCk7bnVsbCE9PW1jJiZ4YyhtYykmJihtYz1udWxsKTtuYy5mb3JFYWNoKHpjKTtvYy5mb3JFYWNoKHpjKX1cclxuZnVuY3Rpb24gQmMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLGljfHwoaWM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksQWMpKSl9XHJcbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cclxuZnVuY3Rpb24gRGMoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgRWM9e2FuaW1hdGlvbmVuZDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOkRjKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sRmM9e30sR2M9e307XHJcbmZhJiYoR2M9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgRWMuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgRWMudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBIYyhhKXtpZihGY1thXSlyZXR1cm4gRmNbYV07aWYoIUVjW2FdKXJldHVybiBhO3ZhciBiPUVjW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIEdjKXJldHVybiBGY1thXT1iW2NdO3JldHVybiBhfVxyXG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcclxuXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsTGMsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIFBjKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdO2U9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7TmMuc2V0KGQsYik7TWMuc2V0KGQsZSk7ZGEoZSxbZF0pfX12YXIgUWM9ci51bnN0YWJsZV9ub3c7UWMoKTt2YXIgRj04O1xyXG5mdW5jdGlvbiBSYyhhKXtpZigwIT09KDEmYSkpcmV0dXJuIEY9MTUsMTtpZigwIT09KDImYSkpcmV0dXJuIEY9MTQsMjtpZigwIT09KDQmYSkpcmV0dXJuIEY9MTMsNDt2YXIgYj0yNCZhO2lmKDAhPT1iKXJldHVybiBGPTEyLGI7aWYoMCE9PShhJjMyKSlyZXR1cm4gRj0xMSwzMjtiPTE5MiZhO2lmKDAhPT1iKXJldHVybiBGPTEwLGI7aWYoMCE9PShhJjI1NikpcmV0dXJuIEY9OSwyNTY7Yj0zNTg0JmE7aWYoMCE9PWIpcmV0dXJuIEY9OCxiO2lmKDAhPT0oYSY0MDk2KSlyZXR1cm4gRj03LDQwOTY7Yj00MTg2MTEyJmE7aWYoMCE9PWIpcmV0dXJuIEY9NixiO2I9NjI5MTQ1NjAmYTtpZigwIT09YilyZXR1cm4gRj01LGI7aWYoYSY2NzEwODg2NClyZXR1cm4gRj00LDY3MTA4ODY0O2lmKDAhPT0oYSYxMzQyMTc3MjgpKXJldHVybiBGPTMsMTM0MjE3NzI4O2I9ODA1MzA2MzY4JmE7aWYoMCE9PWIpcmV0dXJuIEY9MixiO2lmKDAhPT0oMTA3Mzc0MTgyNCZhKSlyZXR1cm4gRj0xLDEwNzM3NDE4MjQ7XHJcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XHJcbmZ1bmN0aW9uIFVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIEY9MDt2YXIgZD0wLGU9MCxmPWEuZXhwaXJlZExhbmVzLGc9YS5zdXNwZW5kZWRMYW5lcyxoPWEucGluZ2VkTGFuZXM7aWYoMCE9PWYpZD1mLGU9Rj0xNTtlbHNlIGlmKGY9YyYxMzQyMTc3MjcsMCE9PWYpe3ZhciBrPWYmfmc7MCE9PWs/KGQ9UmMoayksZT1GKTooaCY9ZiwwIT09aCYmKGQ9UmMoaCksZT1GKSl9ZWxzZSBmPWMmfmcsMCE9PWY/KGQ9UmMoZiksZT1GKTowIT09aCYmKGQ9UmMoaCksZT1GKTtpZigwPT09ZClyZXR1cm4gMDtkPTMxLVZjKGQpO2Q9YyYoKDA+ZD8wOjE8PGQpPDwxKS0xO2lmKDAhPT1iJiZiIT09ZCYmMD09PShiJmcpKXtSYyhiKTtpZihlPD1GKXJldHVybiBiO0Y9ZX1iPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLVZjKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxyXG5mdW5jdGlvbiBXYyhhKXthPWEucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1O3JldHVybiAwIT09YT9hOmEmMTA3Mzc0MTgyND8xMDczNzQxODI0OjB9ZnVuY3Rpb24gWGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxNTpyZXR1cm4gMTtjYXNlIDE0OnJldHVybiAyO2Nhc2UgMTI6cmV0dXJuIGE9WWMoMjQmfmIpLDA9PT1hP1hjKDEwLGIpOmE7Y2FzZSAxMDpyZXR1cm4gYT1ZYygxOTImfmIpLDA9PT1hP1hjKDgsYik6YTtjYXNlIDg6cmV0dXJuIGE9WWMoMzU4NCZ+YiksMD09PWEmJihhPVljKDQxODYxMTImfmIpLDA9PT1hJiYoYT01MTIpKSxhO2Nhc2UgMjpyZXR1cm4gYj1ZYyg4MDUzMDYzNjgmfmIpLDA9PT1iJiYoYj0yNjg0MzU0NTYpLGJ9dGhyb3cgRXJyb3IoeSgzNTgsYSkpO31mdW5jdGlvbiBZYyhhKXtyZXR1cm4gYSYtYX1mdW5jdGlvbiBaYyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1cclxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cclxuZnVuY3Rpb24gaGQoYSxiLGMsZCl7aWYoZmQpe3ZhciBlO2lmKChlPTA9PT0oYiY0KSkmJjA8amMubGVuZ3RoJiYtMTxxYy5pbmRleE9mKGEpKWE9cmMobnVsbCxhLGIsYyxkKSxqYy5wdXNoKGEpO2Vsc2V7dmFyIGY9eWMoYSxiLGMsZCk7aWYobnVsbD09PWYpZSYmc2MoYSxkKTtlbHNle2lmKGUpe2lmKC0xPHFjLmluZGV4T2YoYSkpe2E9cmMoZixhLGIsYyxkKTtqYy5wdXNoKGEpO3JldHVybn1pZih1YyhmLGEsYixjLGQpKXJldHVybjtzYyhhLGQpfWpkKGEsYixkLG51bGwsYyl9fX19XHJcbmZ1bmN0aW9uIHljKGEsYixjLGQpe3ZhciBlPXhiKGQpO2U9d2MoZSk7aWYobnVsbCE9PWUpe3ZhciBmPVpiKGUpO2lmKG51bGw9PT1mKWU9bnVsbDtlbHNle3ZhciBnPWYudGFnO2lmKDEzPT09Zyl7ZT0kYihmKTtpZihudWxsIT09ZSlyZXR1cm4gZTtlPW51bGx9ZWxzZSBpZigzPT09Zyl7aWYoZi5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWYudGFnP2Yuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtlPW51bGx9ZWxzZSBmIT09ZSYmKGU9bnVsbCl9fWpkKGEsYixkLGUsYyk7cmV0dXJuIG51bGx9dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO1xyXG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxyXG5mdW5jdGlvbiByZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9wZDpxZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXFkO3JldHVybiB0aGlzfW0oYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxyXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cclxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cclxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXlkJiYoeWQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHdkPWEuc2NyZWVuWC15ZC5zY3JlZW5YLHhkPWEuc2NyZWVuWS15ZC5zY3JlZW5ZKTp4ZD13ZD0wLHlkPWEpO3JldHVybiB3ZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnhkfX0pLEJkPXJkKEFkKSxDZD1tKHt9LEFkLHtkYXRhVHJhbnNmZXI6MH0pLERkPXJkKENkKSxFZD1tKHt9LHVkLHtyZWxhdGVkVGFyZ2V0OjB9KSxGZD1yZChFZCksR2Q9bSh7fSxzZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksSGQ9cmQoR2QpLElkPW0oe30sc2Qse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxKZD1yZChJZCksS2Q9bSh7fSxzZCx7ZGF0YTowfSksTGQ9cmQoS2QpLE1kPXtFc2M6XCJFc2NhcGVcIixcclxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXHJcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cclxudmFyIFFkPW0oe30sdWQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9TWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP05kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6emQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29kKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XHJcbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1tKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1tKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9bSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9bSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXHJcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XHJcbmZ1bmN0aW9uIGdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09JGQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gaGUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgaWU9ITE7ZnVuY3Rpb24gamUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGhlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtmZT0hMDtyZXR1cm4gZWU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09ZWUmJmZlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cclxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XHJcbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XHJcbmZ1bmN0aW9uIHZlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHdlPSExO2lmKGZhKXt2YXIgeGU7aWYoZmEpe3ZhciB5ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF5ZSl7dmFyIHplPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7emUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgemUub25pbnB1dH14ZT15ZX1lbHNlIHhlPSExO3dlPXhlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIEFlKCl7cGUmJihwZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkscWU9cGU9bnVsbCl9ZnVuY3Rpb24gQmUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnRlKHFlKSl7dmFyIGI9W107bmUoYixxZSxhLHhiKGEpKTthPXJlO2lmKEtiKWEoYik7ZWxzZXtLYj0hMDt0cnl7R2IoYSxiKX1maW5hbGx5e0tiPSExLE1iKCl9fX19XHJcbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlLEllPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cclxuZnVuY3Rpb24gTGUoYSxiKXt2YXIgYz1LZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZShjKX19ZnVuY3Rpb24gTWUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XHJcbmZ1bmN0aW9uIE5lKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVhhKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPVhhKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XHJcbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xyXG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7VGV8fG51bGw9PVFlfHxRZSE9PVhhKGQpfHwoZD1RZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZPZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLFNlJiZKZShTZSxkKXx8KFNlPWQsZD1vZShSZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyB0ZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9UWUpKSl9XHJcblBjKFwiY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXNpbiBmb2N1cyBmb2N1c291dCBibHVyIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksXHJcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xyXG5lYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2VhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJMZWF2ZVwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtkYShcIm9uQ2hhbmdlXCIsXCJjaGFuZ2UgY2xpY2sgZm9jdXNpbiBmb2N1c291dCBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvblNlbGVjdFwiLFwiZm9jdXNvdXQgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1c2luIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQmVmb3JlSW5wdXRcIixbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl0pO2RhKFwib25Db21wb3NpdGlvbkVuZFwiLFwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xyXG5kYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIFhlPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxZZT1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChYZSkpO1xyXG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxyXG5mdW5jdGlvbiBzZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a319fWlmKFViKXRocm93IGE9VmIsVWI9ITEsVmI9bnVsbCxhO31cclxuZnVuY3Rpb24gRyhhLGIpe3ZhciBjPSRlKGIpLGQ9YStcIl9fYnViYmxlXCI7Yy5oYXMoZCl8fChhZihiLGEsMiwhMSksYy5hZGQoZCkpfXZhciBiZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIGNmKGEpe2FbYmZdfHwoYVtiZl09ITAsYmEuZm9yRWFjaChmdW5jdGlvbihiKXtZZS5oYXMoYil8fGRmKGIsITEsYSxudWxsKTtkZihiLCEwLGEsbnVsbCl9KSl9XHJcbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cclxuZnVuY3Rpb24gYWYoYSxiLGMsZCl7dmFyIGU9TmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1lPzI6ZSl7Y2FzZSAwOmU9Z2Q7YnJlYWs7Y2FzZSAxOmU9aWQ7YnJlYWs7ZGVmYXVsdDplPWhkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFQYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XHJcbmZ1bmN0aW9uIGpkKGEsYixjLGQsZSl7dmFyIGY9ZDtpZigwPT09KGImMSkmJjA9PT0oYiYyKSYmbnVsbCE9PWQpYTpmb3IoOzspe2lmKG51bGw9PT1kKXJldHVybjt2YXIgZz1kLnRhZztpZigzPT09Z3x8ND09PWcpe3ZhciBoPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoaD09PWV8fDg9PT1oLm5vZGVUeXBlJiZoLnBhcmVudE5vZGU9PT1lKWJyZWFrO2lmKDQ9PT1nKWZvcihnPWQucmV0dXJuO251bGwhPT1nOyl7dmFyIGs9Zy50YWc7aWYoMz09PWt8fDQ9PT1rKWlmKGs9Zy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxrPT09ZXx8OD09PWsubm9kZVR5cGUmJmsucGFyZW50Tm9kZT09PWUpcmV0dXJuO2c9Zy5yZXR1cm59Zm9yKDtudWxsIT09aDspe2c9d2MoaCk7aWYobnVsbD09PWcpcmV0dXJuO2s9Zy50YWc7aWYoNT09PWt8fDY9PT1rKXtkPWY9Zztjb250aW51ZSBhfWg9aC5wYXJlbnROb2RlfX1kPWQucmV0dXJufU5iKGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPXhiKGMpLGc9W107XHJcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XHJcbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSBJYzpjYXNlIEpjOmNhc2UgS2M6az1IZDticmVhaztjYXNlIExjOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHc9MCE9PShiJjQpLHo9IXcmJlwic2Nyb2xsXCI9PT1hLHU9dz9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt3PVtdO2Zvcih2YXIgdD1kLHE7bnVsbCE9PVxyXG50Oyl7cT10O3ZhciB2PXEuc3RhdGVOb2RlOzU9PT1xLnRhZyYmbnVsbCE9PXYmJihxPXYsbnVsbCE9PXUmJih2PU9iKHQsdSksbnVsbCE9diYmdy5wdXNoKGVmKHQsdixxKSkpKTtpZih6KWJyZWFrO3Q9dC5yZXR1cm59MDx3Lmxlbmd0aCYmKGg9bmV3IGsoaCx4LG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmgsbGlzdGVuZXJzOnd9KSl9fWlmKDA9PT0oYiY3KSl7YTp7aD1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YTtrPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihoJiYwPT09KGImMTYpJiYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYod2MoeCl8fHhbZmZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCx4PXg/d2MoeCk6bnVsbCxudWxsIT09XHJcbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxyXG5nZih1KSxxLS07Zm9yKDt0LS07KXtpZih3PT09dXx8bnVsbCE9PXUmJnc9PT11LmFsdGVybmF0ZSlicmVhayBiO3c9Z2Yodyk7dT1nZih1KX13PW51bGx9ZWxzZSB3PW51bGw7bnVsbCE9PWsmJmhmKGcsaCxrLHcsITEpO251bGwhPT14JiZudWxsIT09eiYmaGYoZyx6LHgsdywhMCl9fX1hOntoPWQ/dWUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgSj12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKUo9RmU7ZWxzZXtKPURlO3ZhciBLPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYoSj1FZSk7aWYoSiYmKEo9SihhLGQpKSl7bmUoZyxKLGMsZSk7YnJlYWsgYX1LJiZLKGEsaCxkKTtcImZvY3Vzb3V0XCI9PT1hJiYoSz1oLl93cmFwcGVyU3RhdGUpJiZcclxuSy5jb250cm9sbGVkJiZcIm51bWJlclwiPT09aC50eXBlJiZiYihoLFwibnVtYmVyXCIsaC52YWx1ZSl9Sz1kP3VlKGQpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjppZihtZShLKXx8XCJ0cnVlXCI9PT1LLmNvbnRlbnRFZGl0YWJsZSlRZT1LLFJlPWQsU2U9bnVsbDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpTZT1SZT1RZT1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpUZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6VGU9ITE7VWUoZyxjLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihQZSlicmVhaztjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOlVlKGcsYyxlKX12YXIgUTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6TD1cIm9uQ29tcG9zaXRpb25FbmRcIjticmVhayBiO1xyXG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcclxuXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9USl9c2UoZyxiKX0pfWZ1bmN0aW9uIGVmKGEsYixjKXtyZXR1cm57aW5zdGFuY2U6YSxsaXN0ZW5lcjpiLGN1cnJlbnRUYXJnZXQ6Y319ZnVuY3Rpb24gb2UoYSxiKXtmb3IodmFyIGM9YitcIkNhcHR1cmVcIixkPVtdO251bGwhPT1hOyl7dmFyIGU9YSxmPWUuc3RhdGVOb2RlOzU9PT1lLnRhZyYmbnVsbCE9PWYmJihlPWYsZj1PYihhLGMpLG51bGwhPWYmJmQudW5zaGlmdChlZihhLGYsZSkpLGY9T2IoYSxiKSxudWxsIT1mJiZkLnB1c2goZWYoYSxmLGUpKSk7YT1hLnJldHVybn1yZXR1cm4gZH1mdW5jdGlvbiBnZihhKXtpZihudWxsPT09YSlyZXR1cm4gbnVsbDtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxyXG5mdW5jdGlvbiBoZihhLGIsYyxkLGUpe2Zvcih2YXIgZj1iLl9yZWFjdE5hbWUsZz1bXTtudWxsIT09YyYmYyE9PWQ7KXt2YXIgaD1jLGs9aC5hbHRlcm5hdGUsbD1oLnN0YXRlTm9kZTtpZihudWxsIT09ayYmaz09PWQpYnJlYWs7NT09PWgudGFnJiZudWxsIT09bCYmKGg9bCxlPyhrPU9iKGMsZiksbnVsbCE9ayYmZy51bnNoaWZ0KGVmKGMsayxoKSkpOmV8fChrPU9iKGMsZiksbnVsbCE9ayYmZy5wdXNoKGVmKGMsayxoKSkpKTtjPWMucmV0dXJufTAhPT1nLmxlbmd0aCYmYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpnfSl9ZnVuY3Rpb24gamYoKXt9dmFyIGtmPW51bGwsbGY9bnVsbDtmdW5jdGlvbiBtZihhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XHJcbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cclxuZnVuY3Rpb24gcmYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9ZnVuY3Rpb24gc2YoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIHRmPTA7ZnVuY3Rpb24gdWYoYSl7cmV0dXJueyQkdHlwZW9mOkdhLHRvU3RyaW5nOmEsdmFsdWVPZjphfX12YXIgdmY9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksd2Y9XCJfX3JlYWN0RmliZXIkXCIrdmYseGY9XCJfX3JlYWN0UHJvcHMkXCIrdmYsZmY9XCJfX3JlYWN0Q29udGFpbmVyJFwiK3ZmLHlmPVwiX19yZWFjdEV2ZW50cyRcIit2ZjtcclxuZnVuY3Rpb24gd2MoYSl7dmFyIGI9YVt3Zl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbZmZdfHxjW3dmXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPXNmKGEpO251bGwhPT1hOyl7aWYoYz1hW3dmXSlyZXR1cm4gYzthPXNmKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYihhKXthPWFbd2ZdfHxhW2ZmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gdWUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHkoMzMpKTt9ZnVuY3Rpb24gRGIoYSl7cmV0dXJuIGFbeGZdfHxudWxsfVxyXG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcclxuZnVuY3Rpb24gRWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBDZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBGZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEdmKCl7SChOKTtIKE0pfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihNLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih5KDE2OCkpO0koTSxiKTtJKE4sYyl9XHJcbmZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IoeSgxMDgsUmEoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbSh7fSxjLGQpfWZ1bmN0aW9uIEpmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxDZjtEZj1NLmN1cnJlbnQ7SShNLGEpO0koTixOLmN1cnJlbnQpO3JldHVybiEwfWZ1bmN0aW9uIEtmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih5KDE2OSkpO2M/KGE9SWYoYSxiLERmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChOKSxIKE0pLEkoTSxhKSk6SChOKTtJKE4sYyl9XHJcbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xyXG5mdW5jdGlvbiBlZygpe3N3aXRjaChUZigpKXtjYXNlIFVmOnJldHVybiA5OTtjYXNlIFZmOnJldHVybiA5ODtjYXNlIFdmOnJldHVybiA5NztjYXNlIFhmOnJldHVybiA5NjtjYXNlIFlmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBmZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gVWY7Y2FzZSA5ODpyZXR1cm4gVmY7Y2FzZSA5NzpyZXR1cm4gV2Y7Y2FzZSA5NjpyZXR1cm4gWGY7Y2FzZSA5NTpyZXR1cm4gWWY7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZ2coYSxiKXthPWZnKGEpO3JldHVybiBOZihhLGIpfWZ1bmN0aW9uIGhnKGEsYixjKXthPWZnKGEpO3JldHVybiBPZihhLGIsYyl9ZnVuY3Rpb24gaWcoKXtpZihudWxsIT09Ymcpe3ZhciBhPWJnO2JnPW51bGw7UGYoYSl9amcoKX1cclxuZnVuY3Rpb24gamcoKXtpZighY2cmJm51bGwhPT1hZyl7Y2c9ITA7dmFyIGE9MDt0cnl7dmFyIGI9YWc7Z2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO2FnPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PWFnJiYoYWc9YWcuc2xpY2UoYSsxKSksT2YoVWYsaWcpLGM7fWZpbmFsbHl7Y2c9ITF9fX12YXIga2c9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gbGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1tKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIG1nPUJmKG51bGwpLG5nPW51bGwsb2c9bnVsbCxwZz1udWxsO2Z1bmN0aW9uIHFnKCl7cGc9b2c9bmc9bnVsbH1cclxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxyXG5mdW5jdGlvbiB2ZyhhLGIpe2lmKHBnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilwZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09b2cpe2lmKG51bGw9PT1uZyl0aHJvdyBFcnJvcih5KDMwOCkpO29nPWI7bmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBvZz1vZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgd2c9ITE7ZnVuY3Rpb24geGcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxyXG5mdW5jdGlvbiB5ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB6ZyhhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1mdW5jdGlvbiBBZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cclxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XHJcbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxyXG5mdW5jdGlvbiBDZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3dnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG49YS5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe249bi51cGRhdGVRdWV1ZTt2YXIgQT1uLmxhc3RCYXNlVXBkYXRlO0EhPT1nJiYobnVsbD09PUE/bi5maXJzdEJhc2VVcGRhdGU9bDpBLm5leHQ9bCxuLmxhc3RCYXNlVXBkYXRlPWspfX1pZihudWxsIT09Zil7QT1lLmJhc2VTdGF0ZTtnPTA7bj1sPWs9bnVsbDtkb3toPWYubGFuZTt2YXIgcD1mLmV2ZW50VGltZTtpZigoZCZoKT09PWgpe251bGwhPT1uJiYobj1uLm5leHQ9e2V2ZW50VGltZTpwLGxhbmU6MCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxcclxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxyXG5mKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIGY9aC5uZXh0LGgubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9aCxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW4mJihrPUEpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW47RGd8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT1BfX1mdW5jdGlvbiBFZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IoeSgxOTEsZSkpO2UuY2FsbChkKX19fXZhciBGZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcclxuZnVuY3Rpb24gR2coYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm0oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxyXG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxyXG5iKTtBZyhhLGUpO0pnKGEsZCxjKX19O2Z1bmN0aW9uIExnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUplKGMsZCl8fCFKZShlLGYpOiEwfVxyXG5mdW5jdGlvbiBNZyhhLGIsYyl7dmFyIGQ9ITEsZT1DZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj12ZyhmKTooZT1GZihiKT9EZjpNLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9FZihhLGUpOkNmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9S2c7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XHJcbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cclxuZnVuY3Rpb24gT2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1GZzt4ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXZnKGYpOihmPUZmKGIpP0RmOk0uY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Q2coYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEdnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxyXG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksQ2coYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NCl9dmFyIFBnPUFycmF5LmlzQXJyYXk7XHJcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxyXG5mdW5jdGlvbiBSZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih5KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO31cclxuZnVuY3Rpb24gU2coYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5mbGFncz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1UZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFncz0yLFxyXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cclxuV2coYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG4oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVhnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gQShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VWcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGM9VmcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHRhOnJldHVybiBiPVdnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihQZyhiKXx8TGEoYikpcmV0dXJuIGI9WGcoYixcclxuYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1JnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PXVhP24oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSB0YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihQZyhjKXx8TGEoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bihhLGIsYyxkLG51bGwpO1JnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxcclxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxyXG5uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcseik7bnVsbD09PXQ/bD1uOnQuc2libGluZz1uO3Q9bjt1PXF9aWYoej09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDt6PGgubGVuZ3RoO3orKyl1PUEoZSxoW3pdLGspLG51bGwhPT11JiYoZz1mKHUsZyx6KSxudWxsPT09dD9sPXU6dC5zaWJsaW5nPXUsdD11KTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7ejxoLmxlbmd0aDt6KyspcT1DKHUsZSx6LGhbel0sayksbnVsbCE9PXEmJihhJiZudWxsIT09cS5hbHRlcm5hdGUmJnUuZGVsZXRlKG51bGw9PT1xLmtleT96OnEua2V5KSxnPWYocSxnLHopLG51bGw9PT10P2w9cTp0LnNpYmxpbmc9cSx0PXEpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gdyhlLGcsaCxrKXt2YXIgbD1MYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcih5KDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PVxyXG5oKXRocm93IEVycm9yKHkoMTUxKSk7Zm9yKHZhciB0PWw9bnVsbCx1PWcsej1nPTAscT1udWxsLG49aC5uZXh0KCk7bnVsbCE9PXUmJiFuLmRvbmU7eisrLG49aC5uZXh0KCkpe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIHc9cChlLHUsbi52YWx1ZSxrKTtpZihudWxsPT09dyl7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLHUpO2c9Zih3LGcseik7bnVsbD09PXQ/bD13OnQuc2libGluZz13O3Q9dzt1PXF9aWYobi5kb25lKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDshbi5kb25lO3orKyxuPWgubmV4dCgpKW49QShlLG4udmFsdWUsayksbnVsbCE9PW4mJihnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO3JldHVybiBsfWZvcih1PWQoZSx1KTshbi5kb25lO3orKyxuPWgubmV4dCgpKW49Qyh1LGUseixuLnZhbHVlLGspLG51bGwhPT1uJiYoYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZcclxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xyXG5kPWUoayxmLnByb3BzKTtkLnJlZj1RZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PXVhPyhkPVhnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1WZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1RZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgdGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9XHJcbldnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVVnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKFBnKGYpKXJldHVybiB4KGEsZCxmLGgpO2lmKExhKGYpKXJldHVybiB3KGEsZCxmLGgpO2wmJlJnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDIyOmNhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGhyb3cgRXJyb3IoeSgxNTIsUmEoYS50eXBlKXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWWc9U2coITApLFpnPVNnKCExKSwkZz17fSxhaD1CZigkZyksYmg9QmYoJGcpLGNoPUJmKCRnKTtcclxuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcclxuZnVuY3Rpb24gaWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgamg9bnVsbCxraD1udWxsLGxoPSExO1xyXG5mdW5jdGlvbiBtaChhLGIpe3ZhciBjPW5oKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmZsYWdzPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBvaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxyXG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxyXG5mdW5jdGlvbiByaChhKXtpZihhIT09amgpcmV0dXJuITE7aWYoIWxoKXJldHVybiBxaChhKSxsaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIW5mKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1raDtiOyltaChhLGIpLGI9cmYoYi5uZXh0U2libGluZyk7cWgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih5KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXtraD1yZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfWtoPW51bGx9fWVsc2Uga2g9amg/cmYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XHJcbmZ1bmN0aW9uIHNoKCl7a2g9amg9bnVsbDtsaD0hMX12YXIgdGg9W107ZnVuY3Rpb24gdWgoKXtmb3IodmFyIGE9MDthPHRoLmxlbmd0aDthKyspdGhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDt0aC5sZW5ndGg9MH12YXIgdmg9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcix3aD1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyx4aD0wLFI9bnVsbCxTPW51bGwsVD1udWxsLHloPSExLHpoPSExO2Z1bmN0aW9uIEFoKCl7dGhyb3cgRXJyb3IoeSgzMjEpKTt9ZnVuY3Rpb24gQmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cclxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cclxuZnVuY3Rpb24gSWgoKXtpZihudWxsPT09Uyl7dmFyIGE9Ui5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Uy5uZXh0O3ZhciBiPW51bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZTpULm5leHQ7aWYobnVsbCE9PWIpVD1iLFM9YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHkoMzEwKSk7Uz1hO2E9e21lbW9pemVkU3RhdGU6Uy5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpTLmJhc2VTdGF0ZSxiYXNlUXVldWU6Uy5iYXNlUXVldWUscXVldWU6Uy5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YX1yZXR1cm4gVH1mdW5jdGlvbiBKaChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cclxuZnVuY3Rpb24gS2goYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1TLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsubGFuZTtpZigoeGgmbCk9PT1sKW51bGwhPT1oJiYoaD1oLm5leHQ9e2xhbmU6MCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2Vsc2V7dmFyIG49e2xhbmU6bCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLFxyXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxyXG5mdW5jdGlvbiBMaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cclxuZnVuY3Rpb24gTWgoYSxiLGMpe3ZhciBkPWIuX2dldFZlcnNpb247ZD1kKGIuX3NvdXJjZSk7dmFyIGU9Yi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeTtpZihudWxsIT09ZSlhPWU9PT1kO2Vsc2UgaWYoYT1hLm11dGFibGVSZWFkTGFuZXMsYT0oeGgmYSk9PT1hKWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9ZCx0aC5wdXNoKGIpO2lmKGEpcmV0dXJuIGMoYi5fc291cmNlKTt0aC5wdXNoKGIpO3Rocm93IEVycm9yKHkoMzUwKSk7fVxyXG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cclxuZS5lbnRhbmdsZW1lbnRzLGg9YTswPGg7KXt2YXIgaz0zMS1WYyhoKSx2PTE8PGs7ZFtrXXw9YTtoJj1+dn19fSxbYyxiLGRdKTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3JldHVybiBkKGIuX3NvdXJjZSxmdW5jdGlvbigpe3ZhciBhPXAuZ2V0U25hcHNob3QsYz1wLnNldFNuYXBzaG90O3RyeXtjKGEoYi5fc291cmNlKSk7dmFyIGQ9SWcodyk7ZS5tdXRhYmxlUmVhZExhbmVzfD1kJmUucGVuZGluZ0xhbmVzfWNhdGNoKHEpe2MoZnVuY3Rpb24oKXt0aHJvdyBxO30pfX0pfSxbYixkXSk7SGUoQyxjKSYmSGUoeCxiKSYmSGUoQSxkKXx8KGE9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6bn0sYS5kaXNwYXRjaD1sPU9oLmJpbmQobnVsbCxSLGEpLGsucXVldWU9YSxrLmJhc2VRdWV1ZT1udWxsLG49TWgoZSxiLGMpLGsubWVtb2l6ZWRTdGF0ZT1rLmJhc2VTdGF0ZT1uKTtyZXR1cm4gbn1cclxuZnVuY3Rpb24gUGgoYSxiLGMpe3ZhciBkPUloKCk7cmV0dXJuIE5oKGQsYSxiLGMpfWZ1bmN0aW9uIFFoKGEpe3ZhciBiPUhoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxyXG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxyXG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1JaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1TKXt2YXIgZz1TLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkJoKGQsZy5kZXBzKSl7UmgoYixjLGYsZCk7cmV0dXJufX1SLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIFdoKGEsYil7cmV0dXJuIFVoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDQsYSxiKX1mdW5jdGlvbiBZaChhLGIpe3JldHVybiBWaCg0LDIsYSxiKX1mdW5jdGlvbiBaaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fVxyXG5mdW5jdGlvbiAkaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFZoKDQsMixaaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBhaSgpe31mdW5jdGlvbiBiaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBjaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cclxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cclxuZnVuY3Rpb24gT2goYSxiLGMpe3ZhciBkPUhnKCksZT1JZyhhKSxmPXtsYW5lOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sZz1iLnBlbmRpbmc7bnVsbD09PWc/Zi5uZXh0PWY6KGYubmV4dD1nLm5leHQsZy5uZXh0PWYpO2IucGVuZGluZz1mO2c9YS5hbHRlcm5hdGU7aWYoYT09PVJ8fG51bGwhPT1nJiZnPT09Uil6aD15aD0hMDtlbHNle2lmKDA9PT1hLmxhbmVzJiYobnVsbD09PWd8fDA9PT1nLmxhbmVzKSYmKGc9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1nKSl0cnl7dmFyIGg9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWcoaCxjKTtmLmVhZ2VyUmVkdWNlcj1nO2YuZWFnZXJTdGF0ZT1rO2lmKEhlKGssaCkpcmV0dXJufWNhdGNoKGwpe31maW5hbGx5e31KZyhhLGUsZCl9fVxyXG52YXIgR2g9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOkFoLHVzZUNvbnRleHQ6QWgsdXNlRWZmZWN0OkFoLHVzZUltcGVyYXRpdmVIYW5kbGU6QWgsdXNlTGF5b3V0RWZmZWN0OkFoLHVzZU1lbW86QWgsdXNlUmVkdWNlcjpBaCx1c2VSZWY6QWgsdXNlU3RhdGU6QWgsdXNlRGVidWdWYWx1ZTpBaCx1c2VEZWZlcnJlZFZhbHVlOkFoLHVzZVRyYW5zaXRpb246QWgsdXNlTXV0YWJsZVNvdXJjZTpBaCx1c2VPcGFxdWVJZGVudGlmaWVyOkFoLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRGg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7SGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6V2gsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFVoKDQsMixaaC5iaW5kKG51bGwsXHJcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcclxud2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPVFoKCExKSxiPWFbMF07YT1kaS5iaW5kKG51bGwsYVsxXSk7U2goYSk7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7ZC5tZW1vaXplZFN0YXRlPXtyZWZzOntnZXRTbmFwc2hvdDpiLHNldFNuYXBzaG90Om51bGx9LHNvdXJjZTphLHN1YnNjcmliZTpjfTtyZXR1cm4gTmgoZCxhLGIsYyl9LHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtpZihsaCl7dmFyIGE9ITEsYj11ZihmdW5jdGlvbigpe2F8fChhPSEwLGMoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpKTt0aHJvdyBFcnJvcih5KDM1NSkpO30pLGM9UWgoYilbMV07MD09PShSLm1vZGUmMikmJihSLmZsYWdzfD01MTYsUmgoNSxmdW5jdGlvbigpe2MoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpfSxcclxudm9pZCAwLG51bGwpKTtyZXR1cm4gYn1iPVwicjpcIisodGYrKykudG9TdHJpbmcoMzYpO1FoKGIpO3JldHVybiBifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEVoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6S2gsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUtoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9S2goSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXHJcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXHJcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LGVpPXJhLlJlYWN0Q3VycmVudE93bmVyLHVnPSExO2Z1bmN0aW9uIGZpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WmcoYixudWxsLGMsZCk6WWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gZ2koYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3RnKGIsZSk7ZD1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XHJcbmZ1bmN0aW9uIGlpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhamkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsa2koYSxiLGcsZCxlLGYpO2E9VmcoYy50eXBlLG51bGwsZCxiLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKDA9PT0oZSZmKSYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpKZSxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBoaShhLGIsZik7Yi5mbGFnc3w9MTthPVRnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxyXG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxyXG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZXx8XCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiPT09ZC5tb2RlKWlmKDA9PT0oYi5tb2RlJjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsYyk7ZWxzZSBpZigwIT09KGMmMTA3Mzc0MTgyNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixudWxsIT09Zj9mLmJhc2VMYW5lczpjKTtlbHNlIHJldHVybiBhPW51bGwhPT1mP2YuYmFzZUxhbmVzfGM6YyxiLmxhbmVzPWIuY2hpbGRMYW5lcz0xMDczNzQxODI0LGIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmF9LG5pKGIsYSksbnVsbDtlbHNlIG51bGwhPT1mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOmQ9YyxuaShiLGQpO2ZpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfVxyXG5mdW5jdGlvbiBvaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD0xMjh9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlKXt2YXIgZj1GZihjKT9EZjpNLmN1cnJlbnQ7Zj1FZihiLGYpO3RnKGIsZSk7Yz1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XHJcbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxyXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTmcoYixnLGQsbCk7d2c9ITE7dmFyIHA9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8cCE9PWt8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuJiYoR2coYixjLG4sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXdnfHxMZyhiLGMsaCxkLHAsayxsKSk/KEF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XHJcbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksZD0hMSl9ZWxzZXtnPWIuc3RhdGVOb2RlO3lnKGEsYik7aD1iLm1lbW9pemVkUHJvcHM7bD1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6bGcoYi50eXBlLGgpO2cucHJvcHM9bDtBPWIucGVuZGluZ1Byb3BzO3A9Zy5jb250ZXh0O2s9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9dmcoayk6KGs9RmYoYyk/RGY6TS5jdXJyZW50LGs9RWYoYixrKSk7dmFyIEM9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KG49XCJmdW5jdGlvblwiPT09dHlwZW9mIEN8fFxyXG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXHJcbngsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxcclxuaD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxkPSExKX1yZXR1cm4gcWkoYSxiLGMsZCxmLGUpfVxyXG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxyXG52YXIgc2k9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeUxhbmU6MH07XHJcbmZ1bmN0aW9uIHRpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPVAuY3VycmVudCxmPSExLGc7KGc9MCE9PShiLmZsYWdzJjY0KSl8fChnPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7Zz8oZj0hMCxiLmZsYWdzJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1kLmZhbGxiYWNrfHwhMD09PWQudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChlfD0xKTtJKFAsZSYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZC5mYWxsYmFjayYmcGgoYik7YT1kLmNoaWxkcmVuO2U9ZC5mYWxsYmFjaztpZihmKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LGIubWVtb2l6ZWRTdGF0ZT1zaSxhO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgZC51bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LFxyXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcclxue2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9ZnVuY3Rpb24gdWkoYSxiLGMsZCl7dmFyIGU9YS5tb2RlLGY9YS5jaGlsZDtiPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Yn07MD09PShlJjIpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9Yik6Zj12aShiLGUsMCxudWxsKTtjPVhnKGMsZSxkLG51bGwpO2YucmV0dXJuPWE7Yy5yZXR1cm49YTtmLnNpYmxpbmc9YzthLmNoaWxkPWY7cmV0dXJuIGN9XHJcbmZ1bmN0aW9uIHhpKGEsYixjLGQpe3ZhciBlPWEuY2hpbGQ7YT1lLnNpYmxpbmc7Yz1UZyhlLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmN9KTswPT09KGIubW9kZSYyKSYmKGMubGFuZXM9ZCk7Yy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGEubmV4dEVmZmVjdD1udWxsLGEuZmxhZ3M9OCxiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1hKTtyZXR1cm4gYi5jaGlsZD1jfVxyXG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XHJcbmZ1bmN0aW9uIHppKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XHJcbmZ1bmN0aW9uIEFpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7ZmkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1QLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnlpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXlpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoUCxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XHJcbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cclxuZnVuY3Rpb24gaGkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO0RnfD1iLmxhbmVzO2lmKDAhPT0oYyZiLmNoaWxkTGFuZXMpKXtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IoeSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9VGcoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVRnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9cmV0dXJuIG51bGx9dmFyIEJpLENpLERpLEVpO1xyXG5CaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07Q2k9ZnVuY3Rpb24oKXt9O1xyXG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxyXG5sKXt2YXIgaD1lW2xdO2ZvcihnIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShnKSYmKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fFxyXG4oYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsYykpLGM9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChsLGspKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChsLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/KG51bGwhPWsmJlwib25TY3JvbGxcIj09PWwmJkcoXCJzY3JvbGxcIixhKSxmfHxoPT09a3x8KGY9W10pKTpcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09R2E/ay50b1N0cmluZygpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixcclxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XHJcbmZ1bmN0aW9uIEdpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2Q9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKXJoKGIpP2IuZmxhZ3N8PTQ6ZC5oeWRyYXRlfHwoYi5mbGFnc3w9MjU2KTtDaShiKTtyZXR1cm4gbnVsbDtjYXNlIDU6aGgoYik7dmFyIGU9ZGgoY2guY3VycmVudCk7Yz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKURpKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PVxyXG5iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO3JldHVybiBudWxsfWE9ZGgoYWguY3VycmVudCk7aWYocmgoYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2Rbd2ZdPWI7ZFt4Zl09Zjtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixkKTtHKFwiY2xvc2VcIixkKTticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPFhlLmxlbmd0aDthKyspRyhYZVthXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsZCk7RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpaYShkLGYpO0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cclxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxyXG5qZil9ZD1hO2IudXBkYXRlUXVldWU9ZDtudWxsIT09ZCYmKGIuZmxhZ3N8PTQpfWVsc2V7Zz05PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudDthPT09a2IuaHRtbCYmKGE9bGIoYykpO2E9PT1rYi5odG1sP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVt3Zl09YjthW3hmXT1kO0JpKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXdiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsYSk7RyhcImNsb3NlXCIsYSk7XHJcbmU9ZDticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxYZS5sZW5ndGg7ZSsrKUcoWGVbZV0sYSk7ZT1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsYSk7RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGEsZCk7ZT1ZYShhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGEsZCk7ZT1cclxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcclxuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfW1mKGMsZCkmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlFaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtcclxuYz1kaChjaC5jdXJyZW50KTtkaChhaC5jdXJyZW50KTtyaChiKT8oZD1iLnN0YXRlTm9kZSxjPWIubWVtb2l6ZWRQcm9wcyxkW3dmXT1iLGQubm9kZVZhbHVlIT09YyYmKGIuZmxhZ3N8PTQpKTooZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbd2ZdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7Yz0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJnJoKGIpOmM9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZihkJiYhYyYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KFAuY3VycmVudCYxKSkwPT09ViYmKFY9Myk7ZWxzZXtpZigwPT09Vnx8Mz09PVYpVj1cclxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xyXG5udWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTIsZi5uZXh0RWZmZWN0PW51bGwsZi5maXJzdEVmZmVjdD1udWxsLGYubGFzdEVmZmVjdD1udWxsLGc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsZi5zdGF0ZU5vZGU9bnVsbCk6KGYuY2hpbGRMYW5lcz1nLmNoaWxkTGFuZXMsZi5sYW5lcz1nLmxhbmVzLGYuY2hpbGQ9Zy5jaGlsZCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxcclxuZi5kZXBlbmRlbmNpZXM9bnVsbD09PWE/bnVsbDp7bGFuZXM6YS5sYW5lcyxmaXJzdENvbnRleHQ6YS5maXJzdENvbnRleHR9KSxjPWMuc2libGluZztJKFAsUC5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9YT1hLnNpYmxpbmd9bnVsbCE9PWQudGFpbCYmTygpPkppJiYoYi5mbGFnc3w9NjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKX1lbHNle2lmKCFmKWlmKGE9aWgoZyksbnVsbCE9PWEpe2lmKGIuZmxhZ3N8PTY0LGY9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZmxhZ3N8PTQpLEZpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZy5hbHRlcm5hdGUmJiFsaClyZXR1cm4gYj1iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKk8oKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5KaSYmMTA3Mzc0MTgyNCE9PWMmJihiLmZsYWdzfD1cclxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cclxuZnVuY3Rpb24gTGkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6RmYoYS50eXBlKSYmR2YoKTt2YXIgYj1hLmZsYWdzO3JldHVybiBiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2I9YS5mbGFncztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHkoMjg1KSk7YS5mbGFncz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gaGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKFApLGI9YS5mbGFncyxiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoUCksbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksbnVsbDtjYXNlIDEwOnJldHVybiByZyhhKSxudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxyXG5mdW5jdGlvbiBNaShhLGIpe3RyeXt2YXIgYz1cIlwiLGQ9YjtkbyBjKz1RYShkKSxkPWQucmV0dXJuO3doaWxlKGQpO3ZhciBlPWN9Y2F0Y2goZil7ZT1cIlxcbkVycm9yIGdlbmVyYXRpbmcgc3RhY2s6IFwiK2YubWVzc2FnZStcIlxcblwiK2Yuc3RhY2t9cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6ZX19ZnVuY3Rpb24gTmkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE9pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFBpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1FpfHwoUWk9ITAsUmk9ZCk7TmkoYSxiKX07cmV0dXJuIGN9XHJcbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XHJcbmZ1bmN0aW9uIFZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1dpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBYaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5mbGFncyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmxnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpiLmZsYWdzJjI1NiYmcWYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7cmV0dXJuO2Nhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxyXG5mdW5jdGlvbiBZaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97aWYoMz09PShhLnRhZyYzKSl7dmFyIGQ9YS5jcmVhdGU7YS5kZXN0cm95PWQoKX1hPWEubmV4dH13aGlsZShhIT09Yil9Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97dmFyIGU9YTtkPWUubmV4dDtlPWUudGFnOzAhPT0oZSY0KSYmMCE9PShlJjEpJiYoWmkoYyxhKSwkaShjLGEpKTthPWR9d2hpbGUoYSE9PWIpfXJldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtjLmZsYWdzJjQmJihudWxsPT09Yj9hLmNvbXBvbmVudERpZE1vdW50KCk6KGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6bGcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyksYS5jb21wb25lbnREaWRVcGRhdGUoZCxcclxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcclxucmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6Y2FzZSAyMzpjYXNlIDI0OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cclxuZnVuY3Rpb24gYWooYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZD1kLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLnNldFByb3BlcnR5P2Quc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6ZC5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXNiKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKCgyMyE9PWMudGFnJiYyNCE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHxjPT09YSkmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09XHJcbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XHJcbmZ1bmN0aW9uIGJqKGEsYil7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7TWYub25Db21taXRGaWJlclVubW91bnQoTGYsYil9Y2F0Y2goZil7fXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgYz1hPWEubmV4dDtkb3t2YXIgZD1jLGU9ZC5kZXN0cm95O2Q9ZC50YWc7aWYodm9pZCAwIT09ZSlpZigwIT09KGQmNCkpWmkoYixjKTtlbHNle2Q9Yjt0cnl7ZSgpfWNhdGNoKGYpe1dpKGQsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1hKX1icmVhaztjYXNlIDE6VmkoYik7YT1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7YS5wcm9wcz1iLm1lbW9pemVkUHJvcHMsYS5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsYS5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe1dpKGIsXHJcbmYpfWJyZWFrO2Nhc2UgNTpWaShiKTticmVhaztjYXNlIDQ6Y2ooYSxiKX19ZnVuY3Rpb24gZGooYSl7YS5hbHRlcm5hdGU9bnVsbDthLmNoaWxkPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLnJldHVybj1udWxsO2EudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBlaihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cclxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XHJcbmMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmZsYWdzJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/Z2ooYSxjLGIpOmhqKGEsYyxiKX1cclxuZnVuY3Rpb24gZ2ooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPWpmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspZ2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxyXG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxyXG5mdW5jdGlvbiBjaihhLGIpe2Zvcih2YXIgYz1iLGQ9ITEsZSxmOzspe2lmKCFkKXtkPWMucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZCl0aHJvdyBFcnJvcih5KDE2MCkpO2U9ZC5zdGF0ZU5vZGU7c3dpdGNoKGQudGFnKXtjYXNlIDU6Zj0hMTticmVhayBhO2Nhc2UgMzplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGE7Y2FzZSA0OmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYX1kPWQucmV0dXJufWQ9ITB9aWYoNT09PWMudGFnfHw2PT09Yy50YWcpe2E6Zm9yKHZhciBnPWEsaD1jLGs9aDs7KWlmKGJqKGcsayksbnVsbCE9PWsuY2hpbGQmJjQhPT1rLnRhZylrLmNoaWxkLnJldHVybj1rLGs9ay5jaGlsZDtlbHNle2lmKGs9PT1oKWJyZWFrIGE7Zm9yKDtudWxsPT09ay5zaWJsaW5nOyl7aWYobnVsbD09PWsucmV0dXJufHxrLnJldHVybj09PWgpYnJlYWsgYTtrPWsucmV0dXJufWsuc2libGluZy5yZXR1cm49ay5yZXR1cm47az1rLnNpYmxpbmd9Zj8oZz1lLGg9Yy5zdGF0ZU5vZGUsXHJcbjg9PT1nLm5vZGVUeXBlP2cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChoKTpnLnJlbW92ZUNoaWxkKGgpKTplLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1jLnRhZyl7aWYobnVsbCE9PWMuY2hpbGQpe2U9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztmPSEwO2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKGJqKGEsYyksbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJuOzQ9PT1jLnRhZyYmKGQ9ITEpfWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxyXG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XHJcbjIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz90YihjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/b2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP3BiKGMsaCk6cWEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOmFiKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YT1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxmPWQudmFsdWUsbnVsbCE9Zj9mYihjLCEhZC5tdWx0aXBsZSxmLCExKTphIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/ZmIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOmZiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9XHJcbmIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmM9Yi5zdGF0ZU5vZGU7Yy5oeWRyYXRlJiYoYy5oeWRyYXRlPSExLENjKGMuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGwhPT1iLm1lbW9pemVkU3RhdGUmJihqaj1PKCksYWooYi5jaGlsZCwhMCkpO2tqKGIpO3JldHVybjtjYXNlIDE5OmtqKGIpO3JldHVybjtjYXNlIDE3OnJldHVybjtjYXNlIDIzOmNhc2UgMjQ6YWooYixudWxsIT09Yi5tZW1vaXplZFN0YXRlKTtyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9ZnVuY3Rpb24ga2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgVWkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1sai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cclxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XHJcbmZ1bmN0aW9uIElnKGEpe2E9YS5tb2RlO2lmKDA9PT0oYSYyKSlyZXR1cm4gMTtpZigwPT09KGEmNCkpcmV0dXJuIDk5PT09ZWcoKT8xOjI7MD09PUdqJiYoR2o9dGopO2lmKDAhPT1rZy50cmFuc2l0aW9uKXswIT09SGomJihIaj1udWxsIT09dmo/dmoucGVuZGluZ0xhbmVzOjApO2E9R2o7dmFyIGI9NDE4NjExMiZ+SGo7YiY9LWI7MD09PWImJihhPTQxODYxMTImfmEsYj1hJi1hLDA9PT1iJiYoYj04MTkyKSk7cmV0dXJuIGJ9YT1lZygpOzAhPT0oWCY0KSYmOTg9PT1hP2E9WGMoMTIsR2opOihhPVNjKGEpLGE9WGMoYSxHaikpO3JldHVybiBhfVxyXG5mdW5jdGlvbiBKZyhhLGIsYyl7aWYoNTA8RGopdGhyb3cgRGo9MCxFaj1udWxsLEVycm9yKHkoMTg1KSk7YT1LaihhLGIpO2lmKG51bGw9PT1hKXJldHVybiBudWxsOyRjKGEsYixjKTthPT09VSYmKEhpfD1iLDQ9PT1WJiZJaShhLFcpKTt2YXIgZD1lZygpOzE9PT1iPzAhPT0oWCY4KSYmMD09PShYJjQ4KT9MaihhKTooTWooYSxjKSwwPT09WCYmKHdqKCksaWcoKSkpOigwPT09KFgmNCl8fDk4IT09ZCYmOTkhPT1kfHwobnVsbD09PUNqP0NqPW5ldyBTZXQoW2FdKTpDai5hZGQoYSkpLE1qKGEsYykpO3ZqPWF9ZnVuY3Rpb24gS2ooYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7Yz1hO2ZvcihhPWEucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PWIsYz1hLmFsdGVybmF0ZSxudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9YiksYz1hLGE9YS5yZXR1cm47cmV0dXJuIDM9PT1jLnRhZz9jLnN0YXRlTm9kZTpudWxsfVxyXG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcclxuYz1aZik6MTQ9PT1iP2M9aGcoOTksTGouYmluZChudWxsLGEpKTooYz1UYyhiKSxjPWhnKGMsTmouYmluZChudWxsLGEpKSk7YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XHJcbmZ1bmN0aW9uIE5qKGEpe0ZqPS0xO0hqPUdqPTA7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBiPWEuY2FsbGJhY2tOb2RlO2lmKE9qKCkmJmEuY2FsbGJhY2tOb2RlIT09YilyZXR1cm4gbnVsbDt2YXIgYz1VYyhhLGE9PT1VP1c6MCk7aWYoMD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9Yzt2YXIgZT1YO1h8PTE2O3ZhciBmPVBqKCk7aWYoVSE9PWF8fFchPT1kKXdqKCksUWooYSxkKTtkbyB0cnl7UmooKTticmVha31jYXRjaChoKXtTaihhLGgpfXdoaWxlKDEpO3FnKCk7b2ouY3VycmVudD1mO1g9ZTtudWxsIT09WT9kPTA6KFU9bnVsbCxXPTAsZD1WKTtpZigwIT09KHRqJkhpKSlRaihhLDApO2Vsc2UgaWYoMCE9PWQpezI9PT1kJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGM9V2MoYSksMCE9PWMmJihkPVRqKGEsYykpKTtpZigxPT09ZCl0aHJvdyBiPXNqLFFqKGEsMCksSWkoYSxjKSxNaihhLE8oKSksYjthLmZpbmlzaGVkV29yaz1cclxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cclxuYz80MzIwOjE5NjAqbmooYy8xOTYwKSktYztpZigxMDxjKXthLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGMpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNTpVaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMzI5KSk7fX1NaihhLE8oKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yj9Oai5iaW5kKG51bGwsYSk6bnVsbH1mdW5jdGlvbiBJaShhLGIpe2ImPX51ajtiJj1+SGk7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1WYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19XHJcbmZ1bmN0aW9uIExqKGEpe2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTtPaigpO2lmKGE9PT1VJiYwIT09KGEuZXhwaXJlZExhbmVzJlcpKXt2YXIgYj1XO3ZhciBjPVRqKGEsYik7MCE9PSh0aiZIaSkmJihiPVVjKGEsYiksYz1UaihhLGIpKX1lbHNlIGI9VWMoYSwwKSxjPVRqKGEsYik7MCE9PWEudGFnJiYyPT09YyYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxiPVdjKGEpLDAhPT1iJiYoYz1UaihhLGIpKSk7aWYoMT09PWMpdGhyb3cgYz1zaixRaihhLDApLElpKGEsYiksTWooYSxPKCkpLGM7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtVaihhKTtNaihhLE8oKSk7cmV0dXJuIG51bGx9XHJcbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cclxuZnVuY3Rpb24gUWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEscGYoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmR2YoKTticmVhaztjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTticmVhaztjYXNlIDU6aGgoZCk7YnJlYWs7Y2FzZSA0OmZoKCk7YnJlYWs7Y2FzZSAxMzpIKFApO2JyZWFrO2Nhc2UgMTk6SChQKTticmVhaztjYXNlIDEwOnJnKGQpO2JyZWFrO2Nhc2UgMjM6Y2FzZSAyNDpLaSgpfWM9Yy5yZXR1cm59VT1hO1k9VGcoYS5jdXJyZW50LG51bGwpO1c9cWo9dGo9YjtWPTA7c2o9bnVsbDt1aj1IaT1EZz0wfVxyXG5mdW5jdGlvbiBTaihhLGIpe2Rve3ZhciBjPVk7dHJ5e3FnKCk7dmguY3VycmVudD1HaDtpZih5aCl7Zm9yKHZhciBkPVIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZDspe3ZhciBlPWQucXVldWU7bnVsbCE9PWUmJihlLnBlbmRpbmc9bnVsbCk7ZD1kLm5leHR9eWg9ITF9eGg9MDtUPVM9Uj1udWxsO3poPSExO3BqLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtWPTE7c2o9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1XO2guZmxhZ3N8PTIwNDg7aC5maXJzdEVmZmVjdD1oLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rO2lmKDA9PT0oaC5tb2RlJjIpKXt2YXIgbj1oLmFsdGVybmF0ZTtuPyhoLnVwZGF0ZVF1ZXVlPW4udXBkYXRlUXVldWUsaC5tZW1vaXplZFN0YXRlPW4ubWVtb2l6ZWRTdGF0ZSxoLmxhbmVzPW4ubGFuZXMpOlxyXG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cclxudm9pZCAwO2g9Yjt2YXIgcT1mLnBpbmdDYWNoZTtudWxsPT09cT8ocT1mLnBpbmdDYWNoZT1uZXcgT2ksaz1uZXcgU2V0LHEuc2V0KGwsaykpOihrPXEuZ2V0KGwpLHZvaWQgMD09PWsmJihrPW5ldyBTZXQscS5zZXQobCxrKSkpO2lmKCFrLmhhcyhoKSl7ay5hZGQoaCk7dmFyIHY9WWouYmluZChudWxsLGYsbCxoKTtsLnRoZW4odix2KX1wLmZsYWdzfD00MDk2O3AubGFuZXM9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2s9RXJyb3IoKFJhKGgudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIil9NSE9PVYmJihWPTIpO2s9TWkoayxoKTtwPVxyXG5nO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOmY9aztwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEo9UGkocCxmLGIpO0JnKHAsSik7YnJlYWsgYTtjYXNlIDE6Zj1rO3ZhciBLPXAudHlwZSxRPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5mbGFncyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgSy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1RJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgUS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhRKSkpKXtwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEw9U2kocCxmLGIpO0JnKHAsTCk7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WmooYyl9Y2F0Y2godmEpe2I9dmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1cclxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxyXG5mdW5jdGlvbiBaaihhKXt2YXIgYj1hO2Rve3ZhciBjPWIuYWx0ZXJuYXRlO2E9Yi5yZXR1cm47aWYoMD09PShiLmZsYWdzJjIwNDgpKXtjPUdpKGMsYixxaik7aWYobnVsbCE9PWMpe1k9YztyZXR1cm59Yz1iO2lmKDI0IT09Yy50YWcmJjIzIT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fDAhPT0ocWomMTA3Mzc0MTgyNCl8fDA9PT0oYy5tb2RlJjQpKXtmb3IodmFyIGQ9MCxlPWMuY2hpbGQ7bnVsbCE9PWU7KWR8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGU9ZS5zaWJsaW5nO2MuY2hpbGRMYW5lcz1kfW51bGwhPT1hJiYwPT09KGEuZmxhZ3MmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9Yi5maXJzdEVmZmVjdCksbnVsbCE9PWIubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0KSwxPGIuZmxhZ3MmJihudWxsIT09XHJcbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iOmEuZmlyc3RFZmZlY3Q9YixhLmxhc3RFZmZlY3Q9YikpfWVsc2V7Yz1MaShiKTtpZihudWxsIT09Yyl7Yy5mbGFncyY9MjA0NztZPWM7cmV0dXJufW51bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmZsYWdzfD0yMDQ4KX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVYmJihWPTUpfWZ1bmN0aW9uIFVqKGEpe3ZhciBiPWVnKCk7Z2coOTksZGsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxyXG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cclxuQ2omJjA9PT0oZCYyNCkmJkNqLmhhcyhhKSYmQ2ouZGVsZXRlKGEpO2E9PT1VJiYoWT1VPW51bGwsVz0wKTsxPGMuZmxhZ3M/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxkPWMuZmlyc3RFZmZlY3QpOmQ9YzpkPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWQpe2U9WDtYfD0zMjtwai5jdXJyZW50PW51bGw7a2Y9ZmQ7Zz1OZSgpO2lmKE9lKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKWg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6aWYoaD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3csKGw9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCkpJiYwIT09bC5yYW5nZUNvdW50KXtoPWwuYW5jaG9yTm9kZTtmPWwuYW5jaG9yT2Zmc2V0O2s9bC5mb2N1c05vZGU7bD1sLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2godmEpe2g9bnVsbDtcclxuYnJlYWsgYX12YXIgbj0wLEE9LTEscD0tMSxDPTAseD0wLHc9Zyx6PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdTs7KXt3IT09aHx8MCE9PWYmJjMhPT13Lm5vZGVUeXBlfHwoQT1uK2YpO3chPT1rfHwwIT09bCYmMyE9PXcubm9kZVR5cGV8fChwPW4rbCk7Mz09PXcubm9kZVR5cGUmJihuKz13Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odT13LmZpcnN0Q2hpbGQpKWJyZWFrO3o9dzt3PXV9Zm9yKDs7KXtpZih3PT09ZylicmVhayBiO3o9PT1oJiYrK0M9PT1mJiYoQT1uKTt6PT09ayYmKyt4PT09bCYmKHA9bik7aWYobnVsbCE9PSh1PXcubmV4dFNpYmxpbmcpKWJyZWFrO3c9ejt6PXcucGFyZW50Tm9kZX13PXV9aD0tMT09PUF8fC0xPT09cD9udWxsOntzdGFydDpBLGVuZDpwfX1lbHNlIGg9bnVsbDtoPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9bnVsbDtsZj17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtJaj1udWxsO0pqPSExO1o9ZDtkbyB0cnl7ZWsoKX1jYXRjaCh2YSl7aWYobnVsbD09PVxyXG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cclxuSiYmZGooSil9Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTt2PWxmO3E9TmUoKTt0PXYuZm9jdXNlZEVsZW07Zz12LnNlbGVjdGlvblJhbmdlO2lmKHEhPT10JiZ0JiZ0Lm93bmVyRG9jdW1lbnQmJk1lKHQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdCkpe251bGwhPT1nJiZPZSh0KSYmKHE9Zy5zdGFydCx2PWcuZW5kLHZvaWQgMD09PXYmJih2PXEpLFwic2VsZWN0aW9uU3RhcnRcImluIHQ/KHQuc2VsZWN0aW9uU3RhcnQ9cSx0LnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHQudmFsdWUubGVuZ3RoKSk6KHY9KHE9dC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnEuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxoPXQudGV4dENvbnRlbnQubGVuZ3RoLEo9TWF0aC5taW4oZy5zdGFydCxoKSxnPXZvaWQgMD09PVxyXG5nLmVuZD9KOk1hdGgubWluKGcuZW5kLGgpLCF2LmV4dGVuZCYmSj5nJiYoaD1nLGc9SixKPWgpLGg9TGUodCxKKSxmPUxlKHQsZyksaCYmZiYmKDEhPT12LnJhbmdlQ291bnR8fHYuYW5jaG9yTm9kZSE9PWgubm9kZXx8di5hbmNob3JPZmZzZXQhPT1oLm9mZnNldHx8di5mb2N1c05vZGUhPT1mLm5vZGV8fHYuZm9jdXNPZmZzZXQhPT1mLm9mZnNldCkmJihxPXEuY3JlYXRlUmFuZ2UoKSxxLnNldFN0YXJ0KGgubm9kZSxoLm9mZnNldCksdi5yZW1vdmVBbGxSYW5nZXMoKSxKPmc/KHYuYWRkUmFuZ2UocSksdi5leHRlbmQoZi5ub2RlLGYub2Zmc2V0KSk6KHEuc2V0RW5kKGYubm9kZSxmLm9mZnNldCksdi5hZGRSYW5nZShxKSkpKSkpO3E9W107Zm9yKHY9dDt2PXYucGFyZW50Tm9kZTspMT09PXYubm9kZVR5cGUmJnEucHVzaCh7ZWxlbWVudDp2LGxlZnQ6di5zY3JvbGxMZWZ0LHRvcDp2LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB0LmZvY3VzJiZ0LmZvY3VzKCk7Zm9yKHQ9XHJcbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxyXG5aLm5leHRFZmZlY3QsWi5uZXh0RWZmZWN0PW51bGwsWi5mbGFncyY4JiYoSz1aLEsuc2libGluZz1udWxsLEsuc3RhdGVOb2RlPW51bGwpLFo9YjtkPWEucGVuZGluZ0xhbmVzOzA9PT1kJiYoVGk9bnVsbCk7MT09PWQ/YT09PUVqP0RqKys6KERqPTAsRWo9YSk6RGo9MDtjPWMuc3RhdGVOb2RlO2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclJvb3QpdHJ5e01mLm9uQ29tbWl0RmliZXJSb290KExmLGMsdm9pZCAwLDY0PT09KGMuY3VycmVudC5mbGFncyY2NCkpfWNhdGNoKHZhKXt9TWooYSxPKCkpO2lmKFFpKXRocm93IFFpPSExLGE9UmksUmk9bnVsbCxhO2lmKDAhPT0oWCY4KSlyZXR1cm4gbnVsbDtpZygpO3JldHVybiBudWxsfVxyXG5mdW5jdGlvbiBlaygpe2Zvcig7bnVsbCE9PVo7KXt2YXIgYT1aLmFsdGVybmF0ZTtKanx8bnVsbD09PUlqfHwoMCE9PShaLmZsYWdzJjgpP2RjKFosSWopJiYoSmo9ITApOjEzPT09Wi50YWcmJm1qKGEsWikmJmRjKFosSWopJiYoSmo9ITApKTt2YXIgYj1aLmZsYWdzOzAhPT0oYiYyNTYpJiZYaShhLFopOzA9PT0oYiY1MTIpfHx4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKTtaPVoubmV4dEVmZmVjdH19ZnVuY3Rpb24gT2ooKXtpZig5MCE9PXpqKXt2YXIgYT05Nzx6aj85Nzp6ajt6aj05MDtyZXR1cm4gZ2coYSxmayl9cmV0dXJuITF9ZnVuY3Rpb24gJGkoYSxiKXtBai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9ZnVuY3Rpb24gWmkoYSxiKXtCai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9XHJcbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxyXG5udWxsLGguc3RhdGVOb2RlPW51bGwpLGg9YTtYPWI7aWcoKTtyZXR1cm4hMH1mdW5jdGlvbiBnayhhLGIsYyl7Yj1NaShjLGIpO2I9UGkoYSxiLDEpO0FnKGEsYik7Yj1IZygpO2E9S2ooYSwxKTtudWxsIT09YSYmKCRjKGEsMSxiKSxNaihhLGIpKX1cclxuZnVuY3Rpb24gV2koYSxiKXtpZigzPT09YS50YWcpZ2soYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtnayhjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpe2E9TWkoYixhKTt2YXIgZT1TaShjLGEsMSk7QWcoYyxlKTtlPUhnKCk7Yz1LaihjLDEpO2lmKG51bGwhPT1jKSRjKGMsMSxlKSxNaihjLGUpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXRyeXtkLmNvbXBvbmVudERpZENhdGNoKGIsYSl9Y2F0Y2goZil7fWJyZWFrfX1jPWMucmV0dXJufX1cclxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XHJcbmNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmxhbmVzO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxOLmN1cnJlbnQpdWc9ITA7ZWxzZSBpZigwIT09KGMmZCkpdWc9MCE9PShhLmZsYWdzJjE2Mzg0KT8hMDohMTtlbHNle3VnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOnJpKGIpO3NoKCk7YnJlYWs7Y2FzZSA1OmdoKGIpO2JyZWFrO2Nhc2UgMTpGZihiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6ZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO3ZhciBlPWIudHlwZS5fY29udGV4dDtJKG1nLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gdGkoYSxiLGMpO0koUCxQLmN1cnJlbnQmMSk7Yj1oaShhLGIsYyk7cmV0dXJuIG51bGwhPT1cclxuYj9iLnNpYmxpbmc6bnVsbH1JKFAsUC5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmNjQpKXtpZihkKXJldHVybiBBaShhLGIsYyk7Yi5mbGFnc3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtJKFAsUC5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBiLmxhbmVzPTAsbWkoYSxiLGMpfXJldHVybiBoaShhLGIsYyl9ZWxzZSB1Zz0hMTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsTS5jdXJyZW50KTt0ZyhiLGMpO2U9Q2gobnVsbCxiLGQsYSxlLGMpO2IuZmxhZ3N8PTE7aWYoXCJvYmplY3RcIj09PVxyXG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xyXG5hPWIucGVuZGluZ1Byb3BzO2Y9ZS5faW5pdDtlPWYoZS5fcGF5bG9hZCk7Yi50eXBlPWU7Zj1iLnRhZz1oayhlKTthPWxnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWxpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1waShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPWdpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9aWkobnVsbCxiLGUsbGcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih5KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGxpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLHBpKGEsYixkLGUsYyk7Y2FzZSAzOnJpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IoeSgyODIpKTtcclxuZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lnKGEsYik7Q2coYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlzaCgpLGI9aGkoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihmPWUuaHlkcmF0ZSlraD1yZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGpoPWIsZj1saD0hMDtpZihmKXthPWUubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YTtpZihudWxsIT1hKWZvcihlPTA7ZTxhLmxlbmd0aDtlKz0yKWY9YVtlXSxmLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWFbZSsxXSx0aC5wdXNoKGYpO2M9WmcoYixudWxsLGQsYyk7Zm9yKGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8MTAyNCxjPWMuc2libGluZ31lbHNlIGZpKGEsYixkLGMpLHNoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZ2goYiksbnVsbD09PWEmJlxyXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXHJcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShtZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPUhlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFOLmN1cnJlbnQpe2I9aGkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWspe2c9aC5jaGlsZDtmb3IodmFyIGw9XHJcbmsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD16ZygtMSxjJi1jKSxsLnRhZz0yLEFnKGgsbCkpO2gubGFuZXN8PWM7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmKGwubGFuZXN8PWMpO3NnKGgucmV0dXJuLGMpO2subGFuZXN8PWM7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z31maShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix0ZyhiLGMpLGU9dmcoZSxcclxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XHJcbn07ZnVuY3Rpb24gaWsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmZsYWdzPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIG5oKGEsYixjLGQpe3JldHVybiBuZXcgaWsoYSxiLGMsZCl9ZnVuY3Rpb24gamkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cclxuZnVuY3Rpb24gaGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGppKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1BYSlyZXR1cm4gMTE7aWYoYT09PURhKXJldHVybiAxNH1yZXR1cm4gMn1cclxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xyXG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cclxuZnVuY3Rpb24gVmcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWppKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHVhOnJldHVybiBYZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIEhhOmc9ODtlfD0xNjticmVhaztjYXNlIHdhOmc9ODtlfD0xO2JyZWFrO2Nhc2UgeGE6cmV0dXJuIGE9bmgoMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT14YSxhLnR5cGU9eGEsYS5sYW5lcz1mLGE7Y2FzZSBCYTpyZXR1cm4gYT1uaCgxMyxjLGIsZSksYS50eXBlPUJhLGEuZWxlbWVudFR5cGU9QmEsYS5sYW5lcz1mLGE7Y2FzZSBDYTpyZXR1cm4gYT1uaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1DYSxhLmxhbmVzPWYsYTtjYXNlIElhOnJldHVybiB2aShjLGUsZixiKTtjYXNlIEphOnJldHVybiBhPW5oKDI0LGMsYixlKSxhLmVsZW1lbnRUeXBlPUphLGEubGFuZXM9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PVxyXG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XHJcbmZ1bmN0aW9uIFdnKGEsYixjKXtiPW5oKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxyXG5mdW5jdGlvbiBqayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLmZpbmlzaGVkV29yaz10aGlzLnBpbmdDYWNoZT10aGlzLmN1cnJlbnQ9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz1aYygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz1aYygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz1aYygwKTt0aGlzLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9bnVsbH1cclxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cclxuZnVuY3Rpb24gbGsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9SGcoKSxnPUlnKGUpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFscztiOntpZihaYihjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEZmKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IoeSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoRmYoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj16ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PWQ/bnVsbDpkO251bGwhPT1cclxuZCYmKGIuY2FsbGJhY2s9ZCk7QWcoZSxiKTtKZyhlLGcsZik7cmV0dXJuIGd9ZnVuY3Rpb24gbWsoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBuayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gb2soYSxiKXtuayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmbmsoYSxiKX1mdW5jdGlvbiBwaygpe3JldHVybiBudWxsfVxyXG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XHJcbnFrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7bGsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07cWsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87bGsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW2ZmXT1udWxsfSl9O2Z1bmN0aW9uIHJrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1cclxuZnVuY3Rpb24gc2soYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBxayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cclxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcclxuZ2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKSxjPUlnKGEpO0pnKGEsYyxiKTtvayhhLGMpfX07aGM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYigpfTtcclxueWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjphYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9RGIoZCk7aWYoIWUpdGhyb3cgRXJyb3IoeSg5MCkpO1dhKGQpO2FiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtHYj1XajtcclxuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjJcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xyXG52YXIgeGs9e2J1bmRsZVR5cGU6d2suYnVuZGxlVHlwZSx2ZXJzaW9uOndrLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp3ay5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOndrLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1jYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2suZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxyXG5wayxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHlrPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZigheWsuaXNEaXNhYmxlZCYmeWsuc3VwcG9ydHNGaWJlcil0cnl7TGY9eWsuaW5qZWN0KHhrKSxNZj15a31jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dms7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9dWs7XHJcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XHJcbmV4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITEsYyl9O2V4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighcmsoYSkpdGhyb3cgRXJyb3IoeSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFhqKGZ1bmN0aW9uKCl7dGsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW2ZmXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9V2o7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdWsoYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XHJcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXJrKGMpKXRocm93IEVycm9yKHkoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbHMpdGhyb3cgRXJyb3IoeSgzOCkpO3JldHVybiB0ayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4yXCI7XHJcbiIsIid1c2Ugc3RyaWN0JztcclxuXHJcbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xyXG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cclxuICBpZiAoXHJcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxyXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xyXG4gICkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXHJcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXHJcbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XHJcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxyXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXHJcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxyXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cclxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XHJcbiAgfVxyXG4gIHRyeSB7XHJcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxyXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXHJcbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gIH1cclxufVxyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcclxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cclxuICBjaGVja0RDRSgpO1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcclxufVxyXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcclxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcclxuICpcclxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xyXG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xyXG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xyXG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XHJcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XHJcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcclxuIiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XHJcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XHJcbiAgICBvLl9fcHJvdG9fXyA9IHA7XHJcbiAgICByZXR1cm4gbztcclxuICB9O1xyXG5cclxuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xyXG59IiwiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCIuL3NldFByb3RvdHlwZU9mLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XHJcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XHJcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XHJcbiAgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xyXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XHJcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcclxuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XHJcblxyXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcclxuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRhcmdldDtcclxuICB9O1xyXG5cclxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufSIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcclxuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XHJcbn1cclxuXHJcbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxyXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcclxuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcclxuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xyXG4gIH1cclxuXHJcbiAgbGlzdC5wb3AoKTtcclxufVxyXG5cclxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcclxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XHJcbiAgaWYgKGZyb20gPT09IHVuZGVmaW5lZCkgZnJvbSA9ICcnO1xyXG5cclxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcclxuICB2YXIgZnJvbVBhcnRzID0gKGZyb20gJiYgZnJvbS5zcGxpdCgnLycpKSB8fCBbXTtcclxuXHJcbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcclxuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xyXG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XHJcblxyXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xyXG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcclxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XHJcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xyXG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXHJcbiAgICBmcm9tUGFydHMucG9wKCk7XHJcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xyXG4gIH1cclxuXHJcbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xyXG5cclxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcclxuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xyXG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xyXG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICB2YXIgdXAgPSAwO1xyXG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xyXG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XHJcblxyXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xyXG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcclxuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xyXG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcclxuICAgICAgdXArKztcclxuICAgIH0gZWxzZSBpZiAodXApIHtcclxuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XHJcbiAgICAgIHVwLS07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XHJcblxyXG4gIGlmIChcclxuICAgIG11c3RFbmRBYnMgJiZcclxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcclxuICAgICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpXHJcbiAgKVxyXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xyXG5cclxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcclxuXHJcbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcclxuXHJcbiAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xyXG4iLCJmdW5jdGlvbiB2YWx1ZU9mKG9iaikge1xyXG4gIHJldHVybiBvYmoudmFsdWVPZiA/IG9iai52YWx1ZU9mKCkgOiBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YuY2FsbChvYmopO1xyXG59XHJcblxyXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcclxuICAvLyBUZXN0IGZvciBzdHJpY3QgZXF1YWxpdHkgZmlyc3QuXHJcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xyXG5cclxuICAvLyBPdGhlcndpc2UsIGlmIGVpdGhlciBvZiB0aGVtID09IG51bGwgdGhleSBhcmUgbm90IGVxdWFsLlxyXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XHJcblxyXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICBBcnJheS5pc0FycmF5KGIpICYmXHJcbiAgICAgIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJlxyXG4gICAgICBhLmV2ZXJ5KGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGlmICh0eXBlb2YgYSA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIGIgPT09ICdvYmplY3QnKSB7XHJcbiAgICB2YXIgYVZhbHVlID0gdmFsdWVPZihhKTtcclxuICAgIHZhciBiVmFsdWUgPSB2YWx1ZU9mKGIpO1xyXG5cclxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XHJcblxyXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIGEsIGIpKS5ldmVyeShmdW5jdGlvbihrZXkpIHtcclxuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7XHJcbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xyXG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xyXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XHJcbiAgICBpZiAoY29uZGl0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xyXG4gICAgfVxyXG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcclxuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xyXG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xyXG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XHJcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XHJcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xyXG5cclxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcclxuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xyXG59XHJcbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcclxuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcclxufVxyXG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcclxuICByZXR1cm4gcGF0aC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocHJlZml4LnRvTG93ZXJDYXNlKCkpID09PSAwICYmICcvPyMnLmluZGV4T2YocGF0aC5jaGFyQXQocHJlZml4Lmxlbmd0aCkpICE9PSAtMTtcclxufVxyXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xyXG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xyXG59XHJcbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XHJcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcclxufVxyXG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xyXG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xyXG4gIHZhciBzZWFyY2ggPSAnJztcclxuICB2YXIgaGFzaCA9ICcnO1xyXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XHJcblxyXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XHJcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XHJcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xyXG4gIH1cclxuXHJcbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xyXG5cclxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XHJcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xyXG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcclxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcclxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxyXG4gIH07XHJcbn1cclxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xyXG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxyXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXHJcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xyXG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xyXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XHJcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xyXG4gIHJldHVybiBwYXRoO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcclxuICB2YXIgbG9jYXRpb247XHJcblxyXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcclxuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcclxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xyXG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcclxuICB9IGVsc2Uge1xyXG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxyXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XHJcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcclxuXHJcbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XHJcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XHJcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcclxuICAgIH1cclxuXHJcbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XHJcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRocm93IGU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XHJcblxyXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcclxuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxyXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xyXG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcclxuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcclxuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xyXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xyXG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBsb2NhdGlvbjtcclxufVxyXG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XHJcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcclxuICB2YXIgcHJvbXB0ID0gbnVsbDtcclxuXHJcbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xyXG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xyXG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXHJcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXHJcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cclxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xyXG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcclxuXHJcbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcclxuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXHJcbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xyXG5cclxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xyXG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcclxuXHJcbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcclxuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XHJcbiAgICB9XHJcblxyXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcclxuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xyXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XHJcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XHJcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4ge1xyXG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXHJcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxyXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxyXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcclxuICB9O1xyXG59XHJcblxyXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcclxuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XHJcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xyXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xyXG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xyXG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xyXG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXHJcbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XHJcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cclxuICovXHJcblxyXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcclxuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXHJcbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcclxuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xyXG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XHJcbn1cclxuXHJcbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcclxudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcclxuXHJcbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcclxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XHJcbiAgICByZXR1cm4ge307XHJcbiAgfVxyXG59XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcclxuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXHJcbiAqL1xyXG5cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XHJcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcclxuICAgIHByb3BzID0ge307XHJcbiAgfVxyXG5cclxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XHJcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcclxuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xyXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcclxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXHJcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcclxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXHJcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcclxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXHJcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xyXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XHJcblxyXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xyXG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXHJcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXHJcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xyXG5cclxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxyXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcclxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcclxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xyXG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xyXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XHJcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XHJcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XHJcbiAgfVxyXG5cclxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xyXG5cclxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcclxuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XHJcblxyXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xyXG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cclxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xyXG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xyXG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XHJcbiAgfVxyXG5cclxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xyXG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xyXG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcclxuICAgICAgc2V0U3RhdGUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcclxuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcclxuICAgICAgICBpZiAob2spIHtcclxuICAgICAgICAgIHNldFN0YXRlKHtcclxuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcclxuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcclxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cclxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXHJcblxyXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xyXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcclxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XHJcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcclxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XHJcblxyXG4gICAgaWYgKGRlbHRhKSB7XHJcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XHJcbiAgICAgIGdvKGRlbHRhKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XHJcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcclxuXHJcbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xyXG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XHJcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xyXG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmICghb2spIHJldHVybjtcclxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcclxuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcclxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XHJcblxyXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xyXG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcclxuICAgICAgICAgIGtleToga2V5LFxyXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXHJcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XHJcblxyXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcclxuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XHJcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xyXG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xyXG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xyXG4gICAgICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcclxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xyXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XHJcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xyXG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmICghb2spIHJldHVybjtcclxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcclxuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcclxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XHJcblxyXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xyXG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcclxuICAgICAgICAgIGtleToga2V5LFxyXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXHJcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XHJcblxyXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcclxuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcclxuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XHJcbiAgICAgICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XHJcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ28obikge1xyXG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcclxuICAgIGdvKC0xKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcclxuICAgIGdvKDEpO1xyXG4gIH1cclxuXHJcbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xyXG5cclxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xyXG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcclxuXHJcbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xyXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XHJcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcclxuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XHJcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcclxuXHJcbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XHJcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcclxuICAgICAgcHJvbXB0ID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcclxuXHJcbiAgICBpZiAoIWlzQmxvY2tlZCkge1xyXG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcclxuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XHJcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XHJcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xyXG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xyXG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XHJcbiAgICAgIHVubGlzdGVuKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgdmFyIGhpc3RvcnkgPSB7XHJcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxyXG4gICAgYWN0aW9uOiAnUE9QJyxcclxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXHJcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxyXG4gICAgcHVzaDogcHVzaCxcclxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXHJcbiAgICBnbzogZ28sXHJcbiAgICBnb0JhY2s6IGdvQmFjayxcclxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxyXG4gICAgYmxvY2s6IGJsb2NrLFxyXG4gICAgbGlzdGVuOiBsaXN0ZW5cclxuICB9O1xyXG4gIHJldHVybiBoaXN0b3J5O1xyXG59XHJcblxyXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XHJcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcclxuICBoYXNoYmFuZzoge1xyXG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XHJcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcclxuICAgIH0sXHJcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcclxuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XHJcbiAgICB9XHJcbiAgfSxcclxuICBub3NsYXNoOiB7XHJcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcclxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxyXG4gIH0sXHJcbiAgc2xhc2g6IHtcclxuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcclxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxyXG4gIH1cclxufTtcclxuXHJcbmZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpIHtcclxuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcclxuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcclxuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XHJcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcclxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xyXG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcclxuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XHJcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xyXG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnIycgKyBwYXRoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcclxuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xyXG4gICAgcHJvcHMgPSB7fTtcclxuICB9XHJcblxyXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcclxuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcclxuICB2YXIgX3Byb3BzID0gcHJvcHMsXHJcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxyXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXHJcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcclxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XHJcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcclxuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxyXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXHJcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcclxuXHJcbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XHJcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xyXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XHJcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XHJcbiAgfVxyXG5cclxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xyXG5cclxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcclxuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XHJcblxyXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XHJcbiAgfVxyXG5cclxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XHJcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xyXG5cclxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XHJcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xyXG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xyXG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcclxuXHJcbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcclxuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxyXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcclxuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XHJcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsJCQxKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXHJcblxyXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cclxuXHJcbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xyXG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XHJcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XHJcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xyXG4gICAgICBzZXRTdGF0ZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xyXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xyXG4gICAgICAgIGlmIChvaykge1xyXG4gICAgICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcclxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xyXG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxyXG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cclxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxyXG5cclxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XHJcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xyXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XHJcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcclxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XHJcblxyXG4gICAgaWYgKGRlbHRhKSB7XHJcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XHJcbiAgICAgIGdvKGRlbHRhKTtcclxuICAgIH1cclxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxyXG5cclxuXHJcbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xyXG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XHJcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xyXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xyXG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXHJcblxyXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcclxuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xyXG4gICAgdmFyIGhyZWYgPSAnJztcclxuXHJcbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XHJcbiAgICAgIGhyZWYgPSBzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBocmVmICsgJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xyXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcclxuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmICghb2spIHJldHVybjtcclxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcclxuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xyXG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcclxuXHJcbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xyXG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxyXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxyXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cclxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcclxuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xyXG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcclxuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XHJcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XHJcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XHJcbiAgICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XHJcbiAgICAgICAgc2V0U3RhdGUoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcclxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XHJcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xyXG4gICAgICBpZiAoIW9rKSByZXR1cm47XHJcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XHJcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcclxuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XHJcblxyXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcclxuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcclxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcclxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXHJcbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XHJcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XHJcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcclxuICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ28obikge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcclxuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnb0JhY2soKSB7XHJcbiAgICBnbygtMSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XHJcbiAgICBnbygxKTtcclxuICB9XHJcblxyXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcclxuXHJcbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcclxuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XHJcblxyXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcclxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xyXG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XHJcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcclxuXHJcbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XHJcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcclxuICAgICAgcHJvbXB0ID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcclxuXHJcbiAgICBpZiAoIWlzQmxvY2tlZCkge1xyXG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcclxuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XHJcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XHJcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xyXG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xyXG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XHJcbiAgICAgIHVubGlzdGVuKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgdmFyIGhpc3RvcnkgPSB7XHJcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxyXG4gICAgYWN0aW9uOiAnUE9QJyxcclxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXHJcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxyXG4gICAgcHVzaDogcHVzaCxcclxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXHJcbiAgICBnbzogZ28sXHJcbiAgICBnb0JhY2s6IGdvQmFjayxcclxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxyXG4gICAgYmxvY2s6IGJsb2NrLFxyXG4gICAgbGlzdGVuOiBsaXN0ZW5cclxuICB9O1xyXG4gIHJldHVybiBoaXN0b3J5O1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XHJcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcclxufVxyXG4vKipcclxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXHJcbiAqL1xyXG5cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcclxuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xyXG4gICAgcHJvcHMgPSB7fTtcclxuICB9XHJcblxyXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcclxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxyXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXHJcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcclxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXHJcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxyXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcclxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XHJcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcclxuXHJcbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XHJcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xyXG5cclxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XHJcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XHJcbiAgfVxyXG5cclxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xyXG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xyXG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXHJcblxyXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcclxuXHJcbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xyXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcclxuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XHJcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xyXG4gICAgICBpZiAoIW9rKSByZXR1cm47XHJcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xyXG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcclxuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xyXG5cclxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xyXG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxyXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXHJcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcclxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcclxuICAgICAgaWYgKCFvaykgcmV0dXJuO1xyXG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcclxuICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ28obikge1xyXG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XHJcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmIChvaykge1xyXG4gICAgICAgIHNldFN0YXRlKHtcclxuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxyXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XHJcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXHJcbiAgICAgICAgc2V0U3RhdGUoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnb0JhY2soKSB7XHJcbiAgICBnbygtMSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XHJcbiAgICBnbygxKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcclxuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcclxuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XHJcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcclxuICAgICAgcHJvbXB0ID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XHJcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xyXG4gIH1cclxuXHJcbiAgdmFyIGhpc3RvcnkgPSB7XHJcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxyXG4gICAgYWN0aW9uOiAnUE9QJyxcclxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcclxuICAgIGluZGV4OiBpbmRleCxcclxuICAgIGVudHJpZXM6IGVudHJpZXMsXHJcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxyXG4gICAgcHVzaDogcHVzaCxcclxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXHJcbiAgICBnbzogZ28sXHJcbiAgICBnb0JhY2s6IGdvQmFjayxcclxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxyXG4gICAgY2FuR286IGNhbkdvLFxyXG4gICAgYmxvY2s6IGJsb2NrLFxyXG4gICAgbGlzdGVuOiBsaXN0ZW5cclxuICB9O1xyXG4gIHJldHVybiBoaXN0b3J5O1xyXG59XHJcblxyXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcclxuXHJcbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xyXG52YXIgY29tbW9uanNHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWxUaGlzIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHt9O1xyXG5cclxuZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XHJcbiAgdmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XHJcbiAgcmV0dXJuIGNvbW1vbmpzR2xvYmFsW2tleV0gPSAoY29tbW9uanNHbG9iYWxba2V5XSB8fCAwKSArIDE7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcclxuICBpZiAoeCA9PT0geSkge1xyXG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XHJcbiAgdmFyIGhhbmRsZXJzID0gW107XHJcbiAgcmV0dXJuIHtcclxuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XHJcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XHJcbiAgICB9LFxyXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xyXG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xyXG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfSxcclxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xyXG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xyXG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XHJcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG5cclxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XHJcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcclxuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XHJcblxyXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBnZXRVbmlxdWVJZCgpICsgJ19fJztcclxuXHJcbiAgdmFyIFByb3ZpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XHJcbiAgICBfaW5oZXJpdHNMb29zZShQcm92aWRlciwgX0NvbXBvbmVudCk7XHJcblxyXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XHJcbiAgICAgIHZhciBfdGhpcztcclxuXHJcbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgICAgIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpO1xyXG4gICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcclxuXHJcbiAgICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xyXG4gICAgICB2YXIgX3JlZjtcclxuXHJcbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xyXG4gICAgfTtcclxuXHJcbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XHJcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcclxuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xyXG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcclxuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XHJcblxyXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XHJcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcclxuXHJcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgICAgICAgICB3YXJuaW5nKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAnICsgY2hhbmdlZEJpdHMpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XHJcblxyXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gUHJvdmlkZXI7XHJcbiAgfShDb21wb25lbnQpO1xyXG5cclxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcclxuXHJcbiAgdmFyIENvbnN1bWVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50Mikge1xyXG4gICAgX2luaGVyaXRzTG9vc2UoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcclxuXHJcbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcclxuICAgICAgdmFyIF90aGlzMjtcclxuXHJcbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuICAgICAgX3RoaXMyLnN0YXRlID0ge1xyXG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xyXG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcclxuXHJcbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcclxuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgcmV0dXJuIF90aGlzMjtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcclxuXHJcbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xyXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcclxuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XHJcbiAgICB9O1xyXG5cclxuICAgIF9wcm90bzIuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcclxuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XHJcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xyXG4gICAgfTtcclxuXHJcbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgX3Byb3RvMi5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xyXG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiBDb25zdW1lcjtcclxuICB9KENvbXBvbmVudCk7XHJcblxyXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XHJcbiAgcmV0dXJuIHtcclxuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcclxuICAgIENvbnN1bWVyOiBDb25zdW1lclxyXG4gIH07XHJcbn1cclxuXHJcbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcclxuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcclxuICB2YXIgdGFyZ2V0ID0ge307XHJcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xyXG4gIHZhciBrZXksIGk7XHJcblxyXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xyXG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcclxuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdGFyZ2V0O1xyXG59IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcclxuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcclxuaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dCc7XHJcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xyXG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XHJcbmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xyXG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XHJcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcclxuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XHJcblxyXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXHJcblxyXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcclxuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcclxuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcclxuICByZXR1cm4gY29udGV4dDtcclxufTtcclxuXHJcbnZhciBoaXN0b3J5Q29udGV4dCA9XHJcbi8qI19fUFVSRV9fKi9cclxuY3JlYXRlTmFtZWRDb250ZXh0KFwiUm91dGVyLUhpc3RvcnlcIik7XHJcblxyXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXHJcblxyXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0JDEgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xyXG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xyXG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xyXG4gIHJldHVybiBjb250ZXh0O1xyXG59O1xyXG5cclxudmFyIGNvbnRleHQgPVxyXG4vKiNfX1BVUkVfXyovXHJcbmNyZWF0ZU5hbWVkQ29udGV4dCQxKFwiUm91dGVyXCIpO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cclxuICovXHJcblxyXG52YXIgUm91dGVyID1cclxuLyojX19QVVJFX18qL1xyXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcGF0aDogXCIvXCIsXHJcbiAgICAgIHVybDogXCIvXCIsXHJcbiAgICAgIHBhcmFtczoge30sXHJcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxyXG4gICAgfTtcclxuICB9O1xyXG5cclxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcclxuICAgIHZhciBfdGhpcztcclxuXHJcbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcclxuICAgIF90aGlzLnN0YXRlID0ge1xyXG4gICAgICBsb2NhdGlvbjogcHJvcHMuaGlzdG9yeS5sb2NhdGlvblxyXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxyXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcclxuICAgIC8vIG9uIHRoZSBpbml0aWFsIHJlbmRlci4gSWYgdGhlcmUgYXJlLCB0aGV5IHdpbGwgcmVwbGFjZS9wdXNoIHdoZW5cclxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XHJcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxyXG5cclxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcclxuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xyXG5cclxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xyXG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xyXG4gICAgICAgIGlmIChfdGhpcy5faXNNb3VudGVkKSB7XHJcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBfdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xyXG5cclxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XHJcblxyXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xyXG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcclxuICB9O1xyXG5cclxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xyXG4gICAgICB2YWx1ZToge1xyXG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcclxuICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcclxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXHJcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0XHJcbiAgICAgIH1cclxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoaGlzdG9yeUNvbnRleHQuUHJvdmlkZXIsIHtcclxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfHwgbnVsbCxcclxuICAgICAgdmFsdWU6IHRoaXMucHJvcHMuaGlzdG9yeVxyXG4gICAgfSkpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBSb3V0ZXI7XHJcbn0oUmVhY3QuQ29tcG9uZW50KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xyXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxyXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxyXG4gIH07XHJcblxyXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIikgOiB2b2lkIDA7XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cclxuICovXHJcblxyXG52YXIgTWVtb3J5Um91dGVyID1cclxuLyojX19QVVJFX18qL1xyXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0c0xvb3NlKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcclxuICAgIHZhciBfdGhpcztcclxuXHJcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcclxuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcclxuICAgIH1cclxuXHJcbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xyXG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkoX3RoaXMucHJvcHMpO1xyXG4gICAgcmV0dXJuIF90aGlzO1xyXG4gIH1cclxuXHJcbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcclxuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxyXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcclxufShSZWFjdC5Db21wb25lbnQpO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIE1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XHJcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxyXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcclxuICB9O1xyXG5cclxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcclxuICB9O1xyXG59XHJcblxyXG52YXIgTGlmZWN5Y2xlID1cclxuLyojX19QVVJFX18qL1xyXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIExpZmVjeWNsZSgpIHtcclxuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xyXG5cclxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xyXG4gIH07XHJcblxyXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XHJcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XHJcbiAgfTtcclxuXHJcbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcbiAgICBpZiAodGhpcy5wcm9wcy5vblVubW91bnQpIHRoaXMucHJvcHMub25Vbm1vdW50LmNhbGwodGhpcywgdGhpcyk7XHJcbiAgfTtcclxuXHJcbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBMaWZlY3ljbGU7XHJcbn0oUmVhY3QuQ29tcG9uZW50KTtcclxuXHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cclxuICovXHJcblxyXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xyXG4gIHZhciBtZXNzYWdlID0gX3JlZi5tZXNzYWdlLFxyXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXHJcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XHJcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XHJcbiAgICB2YXIgbWV0aG9kID0gY29udGV4dC5oaXN0b3J5LmJsb2NrO1xyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XHJcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xyXG4gICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcclxuICAgICAgfSxcclxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xyXG4gICAgICAgIGlmIChwcmV2UHJvcHMubWVzc2FnZSAhPT0gbWVzc2FnZSkge1xyXG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XHJcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XHJcbiAgICAgICAgc2VsZi5yZWxlYXNlKCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcclxuICBQcm9tcHQucHJvcFR5cGVzID0ge1xyXG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXHJcbiAgfTtcclxufVxyXG5cclxudmFyIGNhY2hlID0ge307XHJcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XHJcbnZhciBjYWNoZUNvdW50ID0gMDtcclxuXHJcbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcclxuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcclxuICB2YXIgZ2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7XHJcblxyXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xyXG4gICAgY2FjaGVbcGF0aF0gPSBnZW5lcmF0b3I7XHJcbiAgICBjYWNoZUNvdW50Kys7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZ2VuZXJhdG9yO1xyXG59XHJcbi8qKlxyXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxyXG4gKi9cclxuXHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XHJcbiAgaWYgKHBhdGggPT09IHZvaWQgMCkge1xyXG4gICAgcGF0aCA9IFwiL1wiO1xyXG4gIH1cclxuXHJcbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XHJcbiAgICBwYXJhbXMgPSB7fTtcclxuICB9XHJcblxyXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcclxuICAgIHByZXR0eTogdHJ1ZVxyXG4gIH0pO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcclxuICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcclxuICAgICAgdG8gPSBfcmVmLnRvLFxyXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXHJcbiAgICAgIHB1c2ggPSBfcmVmJHB1c2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRwdXNoO1xyXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XHJcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3RvcnksXHJcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQuc3RhdGljQ29udGV4dDtcclxuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xyXG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oY29tcHV0ZWRNYXRjaCA/IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpIDogX2V4dGVuZHMoe30sIHRvLCB7XHJcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxyXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXHJcbiAgICAvLyBzZXQgdGhlIG5ldyBsb2NhdGlvbiBpbW1lZGlhdGVseS5cclxuXHJcbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xyXG4gICAgICBtZXRob2QobG9jYXRpb24pO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcclxuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcclxuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xyXG4gICAgICB9LFxyXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XHJcbiAgICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XHJcblxyXG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcclxuICAgICAgICAgIGtleTogcHJldkxvY2F0aW9uLmtleVxyXG4gICAgICAgIH0pKSkge1xyXG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHRvOiB0b1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XHJcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcclxuICB9O1xyXG59XHJcblxyXG52YXIgY2FjaGUkMSA9IHt9O1xyXG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XHJcbnZhciBjYWNoZUNvdW50JDEgPSAwO1xyXG5cclxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XHJcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcclxuICB2YXIgcGF0aENhY2hlID0gY2FjaGUkMVtjYWNoZUtleV0gfHwgKGNhY2hlJDFbY2FjaGVLZXldID0ge30pO1xyXG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XHJcbiAgdmFyIGtleXMgPSBbXTtcclxuICB2YXIgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xyXG4gIHZhciByZXN1bHQgPSB7XHJcbiAgICByZWdleHA6IHJlZ2V4cCxcclxuICAgIGtleXM6IGtleXNcclxuICB9O1xyXG5cclxuICBpZiAoY2FjaGVDb3VudCQxIDwgY2FjaGVMaW1pdCQxKSB7XHJcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XHJcbiAgICBjYWNoZUNvdW50JDErKztcclxuICB9XHJcblxyXG4gIHJldHVybiByZXN1bHQ7XHJcbn1cclxuLyoqXHJcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cclxuICovXHJcblxyXG5cclxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zKSB7XHJcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xyXG4gICAgb3B0aW9ucyA9IHt9O1xyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcclxuICAgIG9wdGlvbnMgPSB7XHJcbiAgICAgIHBhdGg6IG9wdGlvbnNcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxyXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcclxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcclxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcclxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxyXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxyXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXHJcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XHJcbiAgdmFyIHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xyXG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcclxuICAgIGlmICghcGF0aCAmJiBwYXRoICE9PSBcIlwiKSByZXR1cm4gbnVsbDtcclxuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcclxuXHJcbiAgICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgkMShwYXRoLCB7XHJcbiAgICAgIGVuZDogZXhhY3QsXHJcbiAgICAgIHN0cmljdDogc3RyaWN0LFxyXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZVxyXG4gICAgfSksXHJcbiAgICAgICAgcmVnZXhwID0gX2NvbXBpbGVQYXRoLnJlZ2V4cCxcclxuICAgICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XHJcblxyXG4gICAgdmFyIG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xyXG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XHJcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXHJcbiAgICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XHJcbiAgICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XHJcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcGF0aDogcGF0aCxcclxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxyXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLFxyXG4gICAgICAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcclxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcclxuICAgICAgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XHJcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcclxuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XHJcbiAgICAgICAgcmV0dXJuIG1lbW87XHJcbiAgICAgIH0sIHt9KVxyXG4gICAgfTtcclxuICB9LCBudWxsKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XHJcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcclxufVxyXG5cclxuZnVuY3Rpb24gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgcGF0aCkge1xyXG4gIHZhciB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcclxuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHZhbHVlICE9PSB1bmRlZmluZWQsIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgKyAoXCI8Um91dGVcIiArIChwYXRoID8gXCIgcGF0aD1cXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIgOiBcIlwiKSArIFwiPiwgYnV0IHlvdSBcIikgKyBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIikgOiB2b2lkIDA7XHJcbiAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XHJcbn1cclxuLyoqXHJcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXHJcbiAqL1xyXG5cclxuXHJcbnZhciBSb3V0ZSA9XHJcbi8qI19fUFVSRV9fKi9cclxuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xyXG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG4gIH1cclxuXHJcbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcclxuXHJcbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkMSkge1xyXG4gICAgICAhY29udGV4dCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkMS5sb2NhdGlvbjtcclxuICAgICAgdmFyIG1hdGNoID0gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCA/IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXHJcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQxLm1hdGNoO1xyXG5cclxuICAgICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIGNvbnRleHQkMSwge1xyXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcclxuICAgICAgICBtYXRjaDogbWF0Y2hcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcclxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXHJcbiAgICAgICAgICBjb21wb25lbnQgPSBfdGhpcyRwcm9wcy5jb21wb25lbnQsXHJcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XHJcbiAgICAgIC8vIGRlZmF1bHQsIHNvIHVzZSBudWxsIGlmIHRoYXQncyB0aGUgY2FzZS5cclxuXHJcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcclxuICAgICAgICBjaGlsZHJlbiA9IG51bGw7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcclxuICAgICAgICB2YWx1ZTogcHJvcHNcclxuICAgICAgfSwgcHJvcHMubWF0Y2ggPyBjaGlsZHJlbiA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBjaGlsZHJlbiA6IGNvbXBvbmVudCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBudWxsKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBSb3V0ZTtcclxufShSZWFjdC5Db21wb25lbnQpO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcclxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcclxuICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHByb3BzLCBwcm9wTmFtZSkge1xyXG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xyXG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxyXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXHJcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxyXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcclxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXHJcbiAgfTtcclxuXHJcbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcblxyXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XHJcbiAgfTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcclxuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XHJcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xyXG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcclxuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcclxuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XHJcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xyXG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XHJcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xyXG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlVVJMKGxvY2F0aW9uKSB7XHJcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xyXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgJXMgd2l0aCA8U3RhdGljUm91dGVyPlwiLCBtZXRob2ROYW1lKSA6IGludmFyaWFudChmYWxzZSkgO1xyXG4gIH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG5vb3AoKSB7fVxyXG4vKipcclxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XHJcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXHJcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxyXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cclxuICovXHJcblxyXG5cclxudmFyIFN0YXRpY1JvdXRlciA9XHJcbi8qI19fUFVSRV9fKi9cclxuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHNMb29zZShTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xyXG5cclxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XHJcbiAgICB2YXIgX3RoaXM7XHJcblxyXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XHJcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcclxuXHJcbiAgICBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XHJcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XHJcbiAgICB9O1xyXG5cclxuICAgIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcclxuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcclxuICAgIH07XHJcblxyXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXR1cm4gbm9vcDtcclxuICAgIH07XHJcblxyXG4gICAgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHJldHVybiBub29wO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gX3RoaXM7XHJcbiAgfVxyXG5cclxuICB2YXIgX3Byb3RvID0gU3RhdGljUm91dGVyLnByb3RvdHlwZTtcclxuXHJcbiAgX3Byb3RvLm5hdmlnYXRlVG8gPSBmdW5jdGlvbiBuYXZpZ2F0ZVRvKGxvY2F0aW9uLCBhY3Rpb24pIHtcclxuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXHJcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcclxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMkYmFzZW5hbWUsXHJcbiAgICAgICAgX3RoaXMkcHJvcHMkY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQsXHJcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMkY29udGV4dDtcclxuICAgIGNvbnRleHQuYWN0aW9uID0gYWN0aW9uO1xyXG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xyXG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XHJcbiAgfTtcclxuXHJcbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxyXG4gICAgICAgIF90aGlzJHByb3BzMiRiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcclxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcclxuICAgICAgICBfdGhpcyRwcm9wczIkY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0LFxyXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wczIkY29udGV4dCxcclxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXHJcbiAgICAgICAgbG9jYXRpb24gPSBfdGhpcyRwcm9wczIkbG9jYXRpb24gPT09IHZvaWQgMCA/IFwiL1wiIDogX3RoaXMkcHJvcHMyJGxvY2F0aW9uLFxyXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcclxuXHJcbiAgICB2YXIgaGlzdG9yeSA9IHtcclxuICAgICAgY3JlYXRlSHJlZjogZnVuY3Rpb24gY3JlYXRlSHJlZihwYXRoKSB7XHJcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcclxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXHJcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcclxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxyXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxyXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXHJcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcclxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcclxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcclxuICAgIH07XHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XHJcbiAgICAgIGhpc3Rvcnk6IGhpc3RvcnksXHJcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcclxuICAgIH0pKTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gU3RhdGljUm91dGVyO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcclxuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcclxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcclxuICB9O1xyXG5cclxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXHJcbiAqL1xyXG5cclxudmFyIFN3aXRjaCA9XHJcbi8qI19fUFVSRV9fKi9cclxuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHNMb29zZShTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xyXG5cclxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XHJcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgfVxyXG5cclxuICB2YXIgX3Byb3RvID0gU3dpdGNoLnByb3RvdHlwZTtcclxuXHJcbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XHJcbiAgICAgIHZhciBlbGVtZW50LCBtYXRjaDsgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXHJcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XHJcbiAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcclxuICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxyXG5cclxuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XHJcbiAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XHJcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XHJcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcclxuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XHJcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcclxuICAgICAgICAgIH0pKSA6IGNvbnRleHQubWF0Y2g7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcclxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXHJcbiAgICAgICAgY29tcHV0ZWRNYXRjaDogbWF0Y2hcclxuICAgICAgfSkgOiBudWxsO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIFN3aXRjaDtcclxufShSZWFjdC5Db21wb25lbnQpO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XHJcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXHJcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxyXG4gIH07XHJcblxyXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XHJcbiAgdmFyIGRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcclxuXHJcbiAgdmFyIEMgPSBmdW5jdGlvbiBDKHByb3BzKSB7XHJcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXHJcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XHJcblxyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxcIiArIGRpc3BsYXlOYW1lICsgXCIgLz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIGNvbnRleHQsIHtcclxuICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcclxuICAgICAgfSkpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgQy5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xyXG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcclxuXHJcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgQy5wcm9wVHlwZXMgPSB7XHJcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XHJcbn1cclxuXHJcbnZhciB1c2VDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dDtcclxuZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VIaXN0b3J5KClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHVzZUNvbnRleHQoaGlzdG9yeUNvbnRleHQpO1xyXG59XHJcbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xyXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUxvY2F0aW9uKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCkubG9jYXRpb247XHJcbn1cclxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xyXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICB9XHJcblxyXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XHJcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XHJcbn1cclxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XHJcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUm91dGVNYXRjaCgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICB9XHJcblxyXG4gIHZhciBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XHJcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcclxuICByZXR1cm4gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgcGF0aCkgOiBtYXRjaDtcclxufVxyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xyXG4gICAgdmFyIGtleSA9IFwiX19yZWFjdF9yb3V0ZXJfYnVpbGRfX1wiO1xyXG4gICAgdmFyIGJ1aWxkTmFtZXMgPSB7XHJcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxyXG4gICAgICBlc206IFwiRVMgbW9kdWxlc1wiLFxyXG4gICAgICB1bWQ6IFwiVU1EXCJcclxuICAgIH07XHJcblxyXG4gICAgaWYgKGdsb2JhbFtrZXldICYmIGdsb2JhbFtrZXldICE9PSBcImVzbVwiKSB7XHJcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XHJcbiAgICAgIHZhciBzZWNvbmRhcnlCdWlsZE5hbWUgPSBidWlsZE5hbWVzW1wiZXNtXCJdOyAvLyBUT0RPOiBBZGQgbGluayB0byBhcnRpY2xlIHRoYXQgZXhwbGFpbnMgaW4gZGV0YWlsIGhvdyB0byBhdm9pZFxyXG4gICAgICAvLyBsb2FkaW5nIDIgZGlmZmVyZW50IGJ1aWxkcy5cclxuXHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgbG9hZGluZyB0aGUgXCIgKyBzZWNvbmRhcnlCdWlsZE5hbWUgKyBcIiBidWlsZCBvZiBSZWFjdCBSb3V0ZXIgXCIgKyAoXCJvbiBhIHBhZ2UgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcgdGhlIFwiICsgaW5pdGlhbEJ1aWxkTmFtZSArIFwiIFwiKSArIFwiYnVpbGQsIHNvIHRoaW5ncyB3b24ndCB3b3JrIHJpZ2h0LlwiKTtcclxuICAgIH1cclxuXHJcbiAgICBnbG9iYWxba2V5XSA9IFwiZXNtXCI7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBoaXN0b3J5Q29udGV4dCBhcyBfX0hpc3RvcnlDb250ZXh0LCBjb250ZXh0IGFzIF9fUm91dGVyQ29udGV4dCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxyXG4iLCJpbXBvcnQgeyBSb3V0ZXIsIF9fUm91dGVyQ29udGV4dCwgbWF0Y2hQYXRoIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcclxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xyXG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24gfSBmcm9tICdoaXN0b3J5JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcclxuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xyXG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XHJcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxyXG4gKi9cclxuXHJcbnZhciBCcm93c2VyUm91dGVyID1cclxuLyojX19QVVJFX18qL1xyXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0c0xvb3NlKEJyb3dzZXJSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xyXG5cclxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xyXG4gICAgdmFyIF90aGlzO1xyXG5cclxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xyXG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xyXG4gICAgfVxyXG5cclxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XHJcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xyXG4gICAgcmV0dXJuIF90aGlzO1xyXG4gIH1cclxuXHJcbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xyXG5cclxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XHJcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcclxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XHJcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcclxuICAgIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcclxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxyXG4gIH07XHJcblxyXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXHJcbiAqL1xyXG5cclxudmFyIEhhc2hSb3V0ZXIgPVxyXG4vKiNfX1BVUkVfXyovXHJcbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XHJcbiAgICB2YXIgX3RoaXM7XHJcblxyXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XHJcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcclxuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIYXNoSGlzdG9yeShfdGhpcy5wcm9wcyk7XHJcbiAgICByZXR1cm4gX3RoaXM7XHJcbiAgfVxyXG5cclxuICB2YXIgX3Byb3RvID0gSGFzaFJvdXRlci5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcclxuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxyXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XHJcbn0oUmVhY3QuQ29tcG9uZW50KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcclxuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKVxyXG4gIH07XHJcblxyXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcclxuICByZXR1cm4gdHlwZW9mIHRvID09PSBcImZ1bmN0aW9uXCIgPyB0byhjdXJyZW50TG9jYXRpb24pIDogdG87XHJcbn07XHJcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XHJcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjdXJyZW50TG9jYXRpb24pIDogdG87XHJcbn07XHJcblxyXG52YXIgZm9yd2FyZFJlZlNoaW0gPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XHJcbiAgcmV0dXJuIEM7XHJcbn07XHJcblxyXG52YXIgZm9yd2FyZFJlZiA9IFJlYWN0LmZvcndhcmRSZWY7XHJcblxyXG5pZiAodHlwZW9mIGZvcndhcmRSZWYgPT09IFwidW5kZWZpbmVkXCIpIHtcclxuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xyXG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcclxufVxyXG5cclxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcclxuICB2YXIgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxyXG4gICAgICBuYXZpZ2F0ZSA9IF9yZWYubmF2aWdhdGUsXHJcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxyXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiaW5uZXJSZWZcIiwgXCJuYXZpZ2F0ZVwiLCBcIm9uQ2xpY2tcIl0pO1xyXG5cclxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XHJcblxyXG4gIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XHJcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgaWYgKF9vbkNsaWNrKSBfb25DbGljayhldmVudCk7XHJcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aHJvdyBleDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcclxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXHJcbiAgICAgICF0YXJnZXQgfHwgdGFyZ2V0ID09PSBcIl9zZWxmXCIpICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXHJcbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXHJcbiAgICAgICkge1xyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIG5hdmlnYXRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcclxuXHJcblxyXG4gIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xyXG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBwcm9wcy5yZWYgPSBpbm5lclJlZjtcclxuICB9XHJcbiAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGpzeC1hMTF5L2FuY2hvci1oYXMtY29udGVudCAqL1xyXG5cclxuXHJcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHByb3BzKTtcclxufSk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgTGlua0FuY2hvci5kaXNwbGF5TmFtZSA9IFwiTGlua0FuY2hvclwiO1xyXG59XHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXHJcbiAqL1xyXG5cclxuXHJcbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xyXG4gIHZhciBfcmVmMiRjb21wb25lbnQgPSBfcmVmMi5jb21wb25lbnQsXHJcbiAgICAgIGNvbXBvbmVudCA9IF9yZWYyJGNvbXBvbmVudCA9PT0gdm9pZCAwID8gTGlua0FuY2hvciA6IF9yZWYyJGNvbXBvbmVudCxcclxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXHJcbiAgICAgIHRvID0gX3JlZjIudG8sXHJcbiAgICAgIGlubmVyUmVmID0gX3JlZjIuaW5uZXJSZWYsXHJcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xyXG5cclxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XHJcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeTtcclxuICAgIHZhciBsb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pLCBjb250ZXh0LmxvY2F0aW9uKTtcclxuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcclxuXHJcbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgcmVzdCwge1xyXG4gICAgICBocmVmOiBocmVmLFxyXG4gICAgICBuYXZpZ2F0ZTogZnVuY3Rpb24gbmF2aWdhdGUoKSB7XHJcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gcmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pO1xyXG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xyXG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XHJcbiAgICAgIH1cclxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcclxuXHJcblxyXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XHJcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIHZhciB0b1R5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuZnVuY10pO1xyXG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgICBjdXJyZW50OiBQcm9wVHlwZXMuYW55XHJcbiAgfSldKTtcclxuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XHJcbiAgTGluay5wcm9wVHlwZXMgPSB7XHJcbiAgICBpbm5lclJlZjogcmVmVHlwZSxcclxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxyXG4gICAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcclxuICB9O1xyXG59XHJcblxyXG52YXIgZm9yd2FyZFJlZlNoaW0kMSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcclxuICByZXR1cm4gQztcclxufTtcclxuXHJcbnZhciBmb3J3YXJkUmVmJDEgPSBSZWFjdC5mb3J3YXJkUmVmO1xyXG5cclxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmJDEgPT09IFwidW5kZWZpbmVkXCIpIHtcclxuICBmb3J3YXJkUmVmJDEgPSBmb3J3YXJkUmVmU2hpbSQxO1xyXG59XHJcblxyXG5mdW5jdGlvbiBqb2luQ2xhc3NuYW1lcygpIHtcclxuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcclxuICAgIGNsYXNzbmFtZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gY2xhc3NuYW1lcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcclxuICAgIHJldHVybiBpO1xyXG4gIH0pLmpvaW4oXCIgXCIpO1xyXG59XHJcbi8qKlxyXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cclxuICovXHJcblxyXG5cclxudmFyIE5hdkxpbmsgPSBmb3J3YXJkUmVmJDEoZnVuY3Rpb24gKF9yZWYsIGZvcndhcmRlZFJlZikge1xyXG4gIHZhciBfcmVmJGFyaWFDdXJyZW50ID0gX3JlZltcImFyaWEtY3VycmVudFwiXSxcclxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXHJcbiAgICAgIF9yZWYkYWN0aXZlQ2xhc3NOYW1lID0gX3JlZi5hY3RpdmVDbGFzc05hbWUsXHJcbiAgICAgIGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYkYWN0aXZlQ2xhc3NOYW1lID09PSB2b2lkIDAgPyBcImFjdGl2ZVwiIDogX3JlZiRhY3RpdmVDbGFzc05hbWUsXHJcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcclxuICAgICAgY2xhc3NOYW1lUHJvcCA9IF9yZWYuY2xhc3NOYW1lLFxyXG4gICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXHJcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXHJcbiAgICAgIGxvY2F0aW9uUHJvcCA9IF9yZWYubG9jYXRpb24sXHJcbiAgICAgIHNlbnNpdGl2ZSA9IF9yZWYuc2Vuc2l0aXZlLFxyXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcclxuICAgICAgc3R5bGVQcm9wID0gX3JlZi5zdHlsZSxcclxuICAgICAgdG8gPSBfcmVmLnRvLFxyXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXHJcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJhcmlhLWN1cnJlbnRcIiwgXCJhY3RpdmVDbGFzc05hbWVcIiwgXCJhY3RpdmVTdHlsZVwiLCBcImNsYXNzTmFtZVwiLCBcImV4YWN0XCIsIFwiaXNBY3RpdmVcIiwgXCJsb2NhdGlvblwiLCBcInNlbnNpdGl2ZVwiLCBcInN0cmljdFwiLCBcInN0eWxlXCIsIFwidG9cIiwgXCJpbm5lclJlZlwiXSk7XHJcblxyXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TmF2TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgIHZhciBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcclxuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcclxuICAgIHZhciBwYXRoID0gdG9Mb2NhdGlvbi5wYXRobmFtZTsgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcclxuXHJcbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xyXG4gICAgdmFyIG1hdGNoID0gZXNjYXBlZFBhdGggPyBtYXRjaFBhdGgoY3VycmVudExvY2F0aW9uLnBhdGhuYW1lLCB7XHJcbiAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxyXG4gICAgICBleGFjdDogZXhhY3QsXHJcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlLFxyXG4gICAgICBzdHJpY3Q6IHN0cmljdFxyXG4gICAgfSkgOiBudWxsO1xyXG4gICAgdmFyIGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wID8gaXNBY3RpdmVQcm9wKG1hdGNoLCBjdXJyZW50TG9jYXRpb24pIDogbWF0Y2gpO1xyXG4gICAgdmFyIGNsYXNzTmFtZSA9IGlzQWN0aXZlID8gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lUHJvcCwgYWN0aXZlQ2xhc3NOYW1lKSA6IGNsYXNzTmFtZVByb3A7XHJcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XHJcblxyXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe1xyXG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxyXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcclxuICAgICAgc3R5bGU6IHN0eWxlLFxyXG4gICAgICB0bzogdG9Mb2NhdGlvblxyXG4gICAgfSwgcmVzdCk7IC8vIFJlYWN0IDE1IGNvbXBhdFxyXG5cclxuXHJcbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0kMSAhPT0gZm9yd2FyZFJlZiQxKSB7XHJcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgcHJvcHMpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XHJcbiAgdmFyIGFyaWFDdXJyZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXCJwYWdlXCIsIFwic3RlcFwiLCBcImxvY2F0aW9uXCIsIFwiZGF0ZVwiLCBcInRpbWVcIiwgXCJ0cnVlXCJdKTtcclxuICBOYXZMaW5rLnByb3BUeXBlcyA9IF9leHRlbmRzKHt9LCBMaW5rLnByb3BUeXBlcywge1xyXG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxyXG4gICAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXHJcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcclxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxyXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluayB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXItZG9tLmpzLm1hcFxyXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxyXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xyXG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgdz1TeW1ib2wuZm9yO249dyhcInJlYWN0LmVsZW1lbnRcIik7cD13KFwicmVhY3QucG9ydGFsXCIpO2V4cG9ydHMuRnJhZ21lbnQ9dyhcInJlYWN0LmZyYWdtZW50XCIpO2V4cG9ydHMuU3RyaWN0TW9kZT13KFwicmVhY3Quc3RyaWN0X21vZGVcIik7ZXhwb3J0cy5Qcm9maWxlcj13KFwicmVhY3QucHJvZmlsZXJcIik7cT13KFwicmVhY3QucHJvdmlkZXJcIik7cj13KFwicmVhY3QuY29udGV4dFwiKTt0PXcoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtleHBvcnRzLlN1c3BlbnNlPXcoXCJyZWFjdC5zdXNwZW5zZVwiKTt1PXcoXCJyZWFjdC5tZW1vXCIpO3Y9dyhcInJlYWN0LmxhenlcIil9dmFyIHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xyXG5mdW5jdGlvbiB5KGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT14JiZhW3hdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24geihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cclxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xyXG5mdW5jdGlvbiBEKCl7fUQucHJvdG90eXBlPUMucHJvdG90eXBlO2Z1bmN0aW9uIEUoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX12YXIgRj1FLnByb3RvdHlwZT1uZXcgRDtGLmNvbnN0cnVjdG9yPUU7bChGLEMucHJvdG90eXBlKTtGLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XHJcbmZ1bmN0aW9uIEooYSxiLGMpe3ZhciBlLGQ9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSC5jYWxsKGIsZSkmJiFJLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWRbZV0mJihkW2VdPWdbZV0pO3JldHVybnskJHR5cGVvZjpuLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpkLF9vd25lcjpHLmN1cnJlbnR9fVxyXG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XHJcbmZ1bmN0aW9uIE8oYSxiLGMsZSxkKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbjpjYXNlIHA6aD0hMH19aWYoaClyZXR1cm4gaD1hLGQ9ZChoKSxhPVwiXCI9PT1lP1wiLlwiK04oaCwwKTplLEFycmF5LmlzQXJyYXkoZCk/KGM9XCJcIixudWxsIT1hJiYoYz1hLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIiksTyhkLGIsYyxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWQmJihMKGQpJiYoZD1LKGQsYysoIWQua2V5fHxoJiZoLmtleT09PWQua2V5P1wiXCI6KFwiXCIrZC5rZXkpLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChkKSksMTtoPTA7ZT1cIlwiPT09ZT9cIi5cIjplK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBnPVxyXG4wO2c8YS5sZW5ndGg7ZysrKXtrPWFbZ107dmFyIGY9ZStOKGssZyk7aCs9TyhrLGIsYyxmLGQpfWVsc2UgaWYoZj15KGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1lK04oayxnKyspLGgrPU8oayxiLGMsZixkKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9XCJcIithLEVycm9yKHooMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO3JldHVybiBofWZ1bmN0aW9uIFAoYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W10sZD0wO08oYSxlLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGMsYSxkKyspfSk7cmV0dXJuIGV9XHJcbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcclxuZXhwb3J0cy5DaGlsZHJlbj17bWFwOlAsZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7UChhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGMpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1AoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBQKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIUwoYSkpdGhyb3cgRXJyb3IoeigxNDMpKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUM7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUU7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1UO1xyXG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoeigyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilILmNhbGwoYixmKSYmIUkuaGFzT3duUHJvcGVydHkoZikmJihlW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO2Zvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsXHJcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcclxuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6UX19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp1LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xyXG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMlwiO1xyXG4iLCIndXNlIHN0cmljdCc7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcclxufSBlbHNlIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XHJcbn1cclxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjJcclxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX1cclxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxyXG53aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgeiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIil9dmFyIEE9ITEsQj1udWxsLEM9LTEsRD01LEU9MDtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PVxyXG5FfTtrPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpEPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgRj1uZXcgTWVzc2FnZUNoYW5uZWwsRz1GLnBvcnQyO0YucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7aWYobnVsbCE9PUIpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7RT1hK0Q7dHJ5e0IoITAsYSk/Ry5wb3N0TWVzc2FnZShudWxsKTooQT0hMSxCPW51bGwpfWNhdGNoKGIpe3Rocm93IEcucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQT0hMX07Zj1mdW5jdGlvbihhKXtCPWE7QXx8KEE9ITAsRy5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtDPVxyXG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxyXG5mdW5jdGlvbiBLKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPkkobixjKSl2b2lkIDAhPT1yJiYwPkkocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPkkocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIEw9W10sTT1bXSxOPTEsTz1udWxsLFA9MyxRPSExLFI9ITEsUz0hMTtcclxuZnVuY3Rpb24gVChhKXtmb3IodmFyIGI9SihNKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKUsoTSk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlLKE0pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSChMLGIpO2Vsc2UgYnJlYWs7Yj1KKE0pfX1mdW5jdGlvbiBVKGEpe1M9ITE7VChhKTtpZighUilpZihudWxsIT09SihMKSlSPSEwLGYoVik7ZWxzZXt2YXIgYj1KKE0pO251bGwhPT1iJiZnKFUsYi5zdGFydFRpbWUtYSl9fVxyXG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcclxuZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtSfHxRfHwoUj0hMCxmKFYpKX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBQfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEooTCl9O1xyXG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFApe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVB9dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtQPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1XO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UDtQPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtQPWN9fTtcclxuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xyXG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1QO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtQPWN9fX07XHJcbiIsIid1c2Ugc3RyaWN0JztcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcclxufSBlbHNlIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIHJlYWN0X3JvdXRlcl9kb21fMSA9IHJlcXVpcmUoXCJyZWFjdC1yb3V0ZXItZG9tXCIpO1xyXG52YXIgaGVhZGVyXzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL2hlYWRlclwiKTtcclxudmFyIGdlYXJfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvZ2VhclwiKTtcclxudmFyIHNvbmdzdG9kb18xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9zb25nc3RvZG9cIik7XHJcbnZhciBiZXR0ZXJob21lXzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL2JldHRlcmhvbWVcIik7XHJcbnZhciBzaG93Y2FzZV8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9zaG93Y2FzZVwiKTtcclxudmFyIHN0cmliZV8xID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9zdHJpYmVcIik7XHJcbnZhciBBcHAgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLkhhc2hSb3V0ZXIsIG51bGwsXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChoZWFkZXJfMS5kZWZhdWx0LCBudWxsKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3JvdXRlcl9kb21fMS5Td2l0Y2gsIG51bGwsXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnLycsIGNvbXBvbmVudDogYmV0dGVyaG9tZV8xLmRlZmF1bHQgfSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnL3Nob3djYXNlJywgY29tcG9uZW50OiBzaG93Y2FzZV8xLmRlZmF1bHQgfSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlJvdXRlLCB7IHBhdGg6ICcvZ2VhcicsIGNvbXBvbmVudDogZ2Vhcl8xLmRlZmF1bHQgfSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlJvdXRlLCB7IHBhdGg6ICcvc29uZ3MnLCBjb21wb25lbnQ6IHNvbmdzdG9kb18xLmRlZmF1bHQgfSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlJvdXRlLCB7IHBhdGg6ICcvc3RyaWJlJywgY29tcG9uZW50OiBzdHJpYmVfMS5kZWZhdWx0IH0pKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBBcHA7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIHJlYWN0X3JvdXRlcl9kb21fMSA9IHJlcXVpcmUoXCJyZWFjdC1yb3V0ZXItZG9tXCIpO1xyXG5mdW5jdGlvbiBDbGlja0J1eSgpIHtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ25hdicpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxufVxyXG52YXIgQmV0dGVySG9tZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnaG9tZS1jb250YWluZXInIH0sXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgXCJOZXcgQWxidW0gXCIsXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIkNsb3VkIFRhc3RlclwiKSxcclxuICAgICAgICAgICAgICAgIFwiIEF2YWlsYWJsZSBOb3dcIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdob21lLWFsYnVtLWJ1dHRvbnMnIH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIHsgc3JjOiAnLi8uLy4vaW1hZ2VzL2FsYnVtLnBuZycgfSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnaG9tZS1idXR0b25zJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLk5hdkxpbmssIHsgYWN0aXZlQ2xhc3NOYW1lOiAnYWN0aXZlJywgdG86ICcvc2hvd2Nhc2UnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgbnVsbCwgXCJMaXN0ZW5cIikpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLk5hdkxpbmssIHsgYWN0aXZlQ2xhc3NOYW1lOiAnYWN0aXZlJywgdG86ICcvc3RyaWJlJywgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ2xpY2tCdXkoKTsgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIG51bGwsIFwiQnV5XCIpKSkpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDJcIiwgbnVsbCwgXCJTb21lIE90aGVyIFRpbWUgKFZpZGVvKVwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiLCB7IGxvYWRpbmc6ICdsYXp5Jywgd2lkdGg6IFwiMTAwJVwiLCBoZWlnaHQ6IFwiMTAwJVwiLCBzcmM6IFwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSlItLUk3em11bndcIiwgdGl0bGU6IFwiWW91VHViZSB2aWRlbyBwbGF5ZXJcIiwgYWxsb3c6IFwiYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZVwiLCBzY3JvbGxpbmc6IFwibm9cIiwgZnJhbWVCb3JkZXI6IFwiMFwiIH0pKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBCZXR0ZXJIb21lO1xyXG4iLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG52YXIgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcbnZhciBHZWFyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgaWQ6ICdnZWFyLWNvbnRhaW5lcicgfSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgbnVsbCwgXCJHZWFyXCIpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwgeyBsb2FkaW5nOiAnbGF6eScsIGlkOiAnYWY3NScsIHNyYzogJy4vLi8uL2ltYWdlcy9ndWl0YXIzLnBuZycgfSksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIHsgaWQ6ICdhZjc1LWgyJyB9LCBcIjIwMTAgSWJhbmV6IEFGNzUgQlNcIiksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ215LWd1aXRhcicgfSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2JvZHknIH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJCb2R5XCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ3NwZWNzJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiQm9keSBUeXBlOlwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIkhvbGxvdyBCb2R5XCIpKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdzcGVjcycgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIkRpbWVuc2lvbnM6XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiTGVuZ3RoOiA0OTVtbSAvIDE5XFx1MDBCRFxcXCJcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJXaWR0aDogNDAwbW0gLyAxNVxcdTAwQkVcXFwiXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiRGVwdGg6IDkybW0gLyAzXFx1MjE1RFxcXCJcIikpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ3NwZWNzJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiVG9wOlwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIk1hdGVyaWFsOiBNYXBsZSAobGFtaW5hdGVkKVwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIkJpbmRpbmc6IEl2b3J5IG11bHRpLXBseVwiKSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc3BlY3MnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJCYWNrL3NpZGVzOlwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIk1hdGVyaWFsOiBNYXBsZSAobGFtaW5hdGVkKVwiKSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc3BlY3MnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJOZWNrIGpvaW50OlwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIlNldC1pblwiKSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc3BlY3MnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJCcmlkZ2U6XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiQVJULTEgb24gYSB3b29kZW4gYmFzZVwiKSkpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnbmVjaycgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIk5lY2tcIiksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc3BlY3MnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJOZWNrIG1hdGVyaWFsOlwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIjEtcGllY2UgbWFob2dhbnlcIikpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ3NwZWNzJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiU2NhbGUgbGVuZ3RoOlwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIjYyOG1tIC8gMjRcXHUwMEJFXFxcIlwiKSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc3BlY3MnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJGaW5nZXJib2FyZCBNYXRlcmlhbDpcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJSb3Nld29vZCB3LyBpdm9yeSBiaW5kaW5nXCIpKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdzcGVjcycgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIkZpbmdlcmJvYXJkIGlubGF5czpcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJQZWFybCBibG9ja1wiKSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc3BlY3MnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJGcmV0czpcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCIyMCAvIG1lZGl1bVwiKSkpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnb3RoZXInIH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJPdGhlclwiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdzcGVjcycgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIk5lY2sgcGlja3VwOlwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIkliYW5leiBBcnRjb3JlIEh1bWJ1Y2tlciAxXCIpKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdzcGVjcycgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIlN0cmluZ3M6XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiRCdhZGRhcmlvIGZsYXQgd291bmQgRUNHMjVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCIuMDEyLy4wMTYvLjAyNHcvLjAzMi8uMDQyLy4wNTJcIikpKSksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgeyBjbGFzc05hbWU6ICdndWl0YXItcGFyYWdyYXBoJyB9LCBcIll1cC4gQW4gQUY3NS4gVGhpcyBndWl0YXIgaGFzIHNpbWlsYXIgZGltZW5zaW9ucyBhbmQgdGhlIHNhbWUgbWF0ZXJpYWxzIGFzIHRoZSBwb3B1bGFyIEVTLTE3NS4gTWFwbGUgYmFjayBhbmQgc2lkZXMsIG1haG9nYW55IG5lY2ssIHJvc2V3b29kIGZyZXRib2FyZC4gVGhlIG5ld2VyIEFGNzVzIGFyZSBidWlsdCBjaGVhcGx5LiBMYXVyZWwsIGxpbmRlbiBhbmQgd2FsbnV0LiBOb3QgZ29vZC4gQXZvaWQgdGhvc2UuIE15IGd1aXRhciBoYXMgZmxhdHdvdW5kIDEycyB3aXRoIGxvd2lzaCBhY3Rpb24uIEl0IGRvZXNuJ3QgZmlnaHQgbWUgd2hlbiBJIHBsYXkgaXQuIEkga25vdyBteSBsaW1pdHMgb24gaXQuIEl0IGNhbiBzb3VuZCB1bmV2ZW4gYnV0IEkgdGhpbmsgaXQgYWRkcyBjaGFybSB0byBpdC4gSSB3b3VsZCByZWNvbW1lbmQgaXQgdG8gYW55b25lIHdobyBpcyBsb29raW5nIGZvciBhIHZlcnNhdGlsZSBlbGVjdHJpYyBndWl0YXIuXCIpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwgeyBsb2FkaW5nOiBcImxhenlcIiwgaWQ6ICdmb2N1c3JpdGUnLCBzcmM6ICcuLy4vLi9pbWFnZXMvZm9jdXNyaXRlLnBuZycgfSksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIHsgaWQ6ICdmci1oMicgfSwgXCJGb2N1c3JpdGUgU29sb1wiKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnbXktZm9jdXNyaXRlJyB9LFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnZnItc3BlY3MnIH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJTcGVjc1wiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdzcGVjcycgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIklucHV0czpcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCIzLXBpbiBYTFJcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJcXHUwMEJDXFxcIiBpbnB1dCBqYWNrXCIpKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdzcGVjcycgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIk91dHB1dHM6XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiMiB4IFxcdTAwQkNcXFwiIHNwZWFrZXIgamFja3NcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgXCJcXHUwMEJDXFxcIiBvdXRwdXQgamFja1wiKSkpKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7IGNsYXNzTmFtZTogJ2ZvY3Vzcml0ZS1wYXJhZ3JhcGgnIH0sIFwiVGhpcyBpcyB0aGUgYW1wbGlmaWVyIEkgdXNlLiBXaGF0IGlzIHRoZSBwdXJwb3NlIG9mIGFuIGFtcGxpZmllcj8gVG8gYW1wbGlmeSB0aGUgbmF0dXJhbCBhY291c3RpYyBzb3VuZCBvZiB0aGUgaW5zdHJ1bWVudC4gVGhpcyBpcyBzb21ldGhpbmcgSSB0aGluayB0b2RheSdzIGd1aXRhcmlzdHMgZm9yZ2V0IHNvbWV0aW1lcy4gSSBqdXN0IHdhbnQgc29tZXRoaW5nIHRvIGFtcGxpZnkgdGhlIGFjb3VzdGljIHNvdW5kIG9mIG15IGluc3RydW1lbnQuIEl0IGhhcyBubyBlZmZlY3RzIGJ1dCBJIGNhbiBwbHVnIGhlYWRwaG9uZXMgaW50byBpdCBhbmQgaGVhciBsYXRlbmN5LWxlc3MgYW1wbGlmaWNhdGlvbi4gSSBjYW4gZGlnaXRhbGx5IGFkZCBlZmZlY3RzIG9ubGluZSBpZiBJIG5lZWQgdGhlbS4gSSBjYW4gcmVjb3JkIHdpdGggaXQuIFRoZSB0cnV0aCBpcyBJIHBsYXkgdW5wbHVnZ2VkIG1vc3Qgb2YgdGhlIHRpbWUgYW55d2F5ISBJIGxpa2UgdGhlIGFjb3VzdGljIHNvdW5kIG9mIG15IGd1aXRhci4gQnV0IGV2ZW4gd2hlbiBJIHBsdWcgaXQgaW4gSSBsaWtlIHRoZSBzbGlnaHQgbmF0dXJhbCBvdmVyZHJpdmUgb2YgdGhlIG5lY2sgcGlja3VwIHRoYXQgY29tZXMgdGhyb3VnaCB0aGUgZm9jdXNyaXRlLiBJZiBJIHdlcmUgdG8gZ2V0IHJlYWwgc2VyaW91cyBhcyBhIG11c2ljaWFuIEkgd291bGQgdXBncmFkZSB0aGlzIGJ1dCBJIHBsYXkganVzdCBiZWNhdXNlIG11c2ljIGlzIGZ1biBhbmQgdGhhdCBpcyBnb29kIGVub3VnaCBmb3IgbWUuXCIpKSk7XHJcbn07XHJcbmV4cG9ydHMuZGVmYXVsdCA9IEdlYXI7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIHJlYWN0X3JvdXRlcl9kb21fMSA9IHJlcXVpcmUoXCJyZWFjdC1yb3V0ZXItZG9tXCIpO1xyXG52YXIgSGVhZGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQ2xpY2tCdXkoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbmF2Jykuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwibmF2XCIsIHsgaWQ6ICd0b3AnIH0sXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIG51bGwsIFwiU3RldmVuIEZhYnJpemlvXCIpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCBudWxsLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3JvdXRlcl9kb21fMS5OYXZMaW5rLCB7IGV4YWN0OiB0cnVlLCBhY3RpdmVDbGFzc05hbWU6ICdhY3RpdmUnLCB0bzogJy8nIH0sIFwiaG9tZVwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9yb3V0ZXJfZG9tXzEuTmF2TGluaywgeyBhY3RpdmVDbGFzc05hbWU6ICdhY3RpdmUnLCB0bzogJy9zaG93Y2FzZScgfSwgXCJsaXN0ZW5cIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLk5hdkxpbmssIHsgYWN0aXZlQ2xhc3NOYW1lOiAnYWN0aXZlJywgdG86ICcvc3RyaWJlJywgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ2xpY2tCdXkoKTsgfSB9LCBcImJ1eVwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9yb3V0ZXJfZG9tXzEuTmF2TGluaywgeyBhY3RpdmVDbGFzc05hbWU6ICdhY3RpdmUnLCB0bzogJy9nZWFyJyB9LCBcImdlYXJcIiksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLk5hdkxpbmssIHsgYWN0aXZlQ2xhc3NOYW1lOiAnYWN0aXZlJywgdG86ICcvc29uZ3MnIH0sIFwiZnV0dXJlIHNvbmdzXCIpKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBIZWFkZXI7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcbnZhciBDb21wbGV0ZWRTb25ncyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBfYSA9IHJlYWN0XzEudXNlU3RhdGUoJ3Nob3cnKSwgWW5GQ2xhc3MgPSBfYVswXSwgc2V0WW5GQ2xhc3MgPSBfYVsxXTtcclxuICAgIHZhciBfYiA9IHJlYWN0XzEudXNlU3RhdGUoJ25vbmUnKSwgU29UQ2xhc3MgPSBfYlswXSwgc2V0U29UQ2xhc3MgPSBfYlsxXTtcclxuICAgIHZhciBfYyA9IHJlYWN0XzEudXNlU3RhdGUoJ25vbmUnKSwgV0FZRENsYXNzID0gX2NbMF0sIHNldFdBWURDbGFzcyA9IF9jWzFdO1xyXG4gICAgdmFyIF9kID0gcmVhY3RfMS51c2VTdGF0ZSgnbm9uZScpLCBXSUZpTENsYXNzID0gX2RbMF0sIHNldFdJRmlMQ2xhc3MgPSBfZFsxXTtcclxuICAgIHZhciBfZSA9IHJlYWN0XzEudXNlU3RhdGUoJ25vbmUnKSwgQUJDbGFzcyA9IF9lWzBdLCBzZXRBQkNsYXNzID0gX2VbMV07XHJcbiAgICB2YXIgX2YgPSByZWFjdF8xLnVzZVN0YXRlKCdub25lJyksIElJUkNsYXNzID0gX2ZbMF0sIHNldElJUkNsYXNzID0gX2ZbMV07XHJcbiAgICB2YXIgX2cgPSByZWFjdF8xLnVzZVN0YXRlKCdub25lJyksIEVDbGFzcyA9IF9nWzBdLCBzZXRFQ2xhc3MgPSBfZ1sxXTtcclxuICAgIHZhciBfaCA9IHJlYWN0XzEudXNlU3RhdGUoJ25vbmUnKSwgVFNvWVNDbGFzcyA9IF9oWzBdLCBzZXRUU29ZU0NsYXNzID0gX2hbMV07XHJcbiAgICB2YXIgX2ogPSByZWFjdF8xLnVzZVN0YXRlKCdpbmxpbmUnKSwgWW5GRGlzcGxheSA9IF9qWzBdLCBzZXRZbkZEaXNwbGF5ID0gX2pbMV07XHJcbiAgICB2YXIgX2sgPSByZWFjdF8xLnVzZVN0YXRlKCdub25lJyksIFNvVERpc3BsYXkgPSBfa1swXSwgc2V0U29URGlzcGxheSA9IF9rWzFdO1xyXG4gICAgdmFyIF9sID0gcmVhY3RfMS51c2VTdGF0ZSgnbm9uZScpLCBXQVlERGlzcGxheSA9IF9sWzBdLCBzZXRXQVlERGlzcGxheSA9IF9sWzFdO1xyXG4gICAgdmFyIF9tID0gcmVhY3RfMS51c2VTdGF0ZSgnbm9uZScpLCBXSUZpTERpc3BsYXkgPSBfbVswXSwgc2V0V0lGaUxEaXNwbGF5ID0gX21bMV07XHJcbiAgICB2YXIgX28gPSByZWFjdF8xLnVzZVN0YXRlKCdub25lJyksIEFCRGlzcGxheSA9IF9vWzBdLCBzZXRBQkRpc3BsYXkgPSBfb1sxXTtcclxuICAgIHZhciBfcCA9IHJlYWN0XzEudXNlU3RhdGUoJ25vbmUnKSwgSUlSRGlzcGxheSA9IF9wWzBdLCBzZXRJSVJEaXNwbGF5ID0gX3BbMV07XHJcbiAgICB2YXIgX3EgPSByZWFjdF8xLnVzZVN0YXRlKCdub25lJyksIEVEaXNwbGF5ID0gX3FbMF0sIHNldEVEaXNwbGF5ID0gX3FbMV07XHJcbiAgICB2YXIgX3IgPSByZWFjdF8xLnVzZVN0YXRlKCdub25lJyksIFRTb1lTRGlzcGxheSA9IF9yWzBdLCBzZXRUU29ZU0Rpc3BsYXkgPSBfclsxXTtcclxuICAgIGZ1bmN0aW9uIENsaWNrWW5GKCkge1xyXG4gICAgICAgIFN0b3BBdWRpb09uQ2xpY2soKTtcclxuICAgICAgICBzZXRZbkZDbGFzcygnc2hvdycpO1xyXG4gICAgICAgIHNldFNvVENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0V0FZRENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0V0lGaUxDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldEFCQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldEVDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFRTb1lTQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRZbkZEaXNwbGF5KCdpbmxpbmUnKTtcclxuICAgICAgICBzZXRTb1REaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0V0FZRERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRXSUZpTERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRBQkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0RURpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRUU29ZU0Rpc3BsYXkoJ25vbmUnKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIENsaWNrU29UKCkge1xyXG4gICAgICAgIFN0b3BBdWRpb09uQ2xpY2soKTtcclxuICAgICAgICBzZXRZbkZDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFNvVENsYXNzKCdzaG93Jyk7XHJcbiAgICAgICAgc2V0V0FZRENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0V0lGaUxDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldEFCQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldEVDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFRTb1lTQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRZbkZEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0U29URGlzcGxheSgnaW5saW5lJyk7XHJcbiAgICAgICAgc2V0V0FZRERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRXSUZpTERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRBQkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0RURpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRUU29ZU0Rpc3BsYXkoJ25vbmUnKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIENsaWNrV0FZRCgpIHtcclxuICAgICAgICBTdG9wQXVkaW9PbkNsaWNrKCk7XHJcbiAgICAgICAgc2V0WW5GQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRTb1RDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFdBWURDbGFzcygnc2hvdycpO1xyXG4gICAgICAgIHNldFdJRmlMQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRBQkNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0SUlSQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRFQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRUU29ZU0NsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0WW5GRGlzcGxheSgnbm9uZScpO1xyXG4gICAgICAgIHNldFNvVERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRXQVlERGlzcGxheSgnaW5saW5lJyk7XHJcbiAgICAgICAgc2V0V0lGaUxEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0QUJEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0SUlSRGlzcGxheSgnbm9uZScpO1xyXG4gICAgICAgIHNldEVEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0VFNvWVNEaXNwbGF5KCdub25lJyk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBDbGlja1dJRmlMKCkge1xyXG4gICAgICAgIFN0b3BBdWRpb09uQ2xpY2soKTtcclxuICAgICAgICBzZXRZbkZDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFNvVENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0V0FZRENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0V0lGaUxDbGFzcygnc2hvdycpO1xyXG4gICAgICAgIHNldEFCQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldEVDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFRTb1lTQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRZbkZEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0U29URGlzcGxheSgnbm9uZScpO1xyXG4gICAgICAgIHNldFdBWUREaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0V0lGaUxEaXNwbGF5KCdpbmxpbmUnKTtcclxuICAgICAgICBzZXRBQkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0RURpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRUU29ZU0Rpc3BsYXkoJ25vbmUnKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIENsaWNrQUIoKSB7XHJcbiAgICAgICAgU3RvcEF1ZGlvT25DbGljaygpO1xyXG4gICAgICAgIHNldFluRkNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0U29UQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRXQVlEQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRXSUZpTENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0QUJDbGFzcygnc2hvdycpO1xyXG4gICAgICAgIHNldElJUkNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0RUNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0VFNvWVNDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFluRkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRTb1REaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0V0FZRERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRXSUZpTERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRBQkRpc3BsYXkoJ2lubGluZScpO1xyXG4gICAgICAgIHNldElJUkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRFRGlzcGxheSgnbm9uZScpO1xyXG4gICAgICAgIHNldFRTb1lTRGlzcGxheSgnbm9uZScpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gQ2xpY2tJSVIoKSB7XHJcbiAgICAgICAgU3RvcEF1ZGlvT25DbGljaygpO1xyXG4gICAgICAgIHNldFluRkNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0U29UQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRXQVlEQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRXSUZpTENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0QUJDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldElJUkNsYXNzKCdzaG93Jyk7XHJcbiAgICAgICAgc2V0RUNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0VFNvWVNDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFluRkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRTb1REaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0V0FZRERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRXSUZpTERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRBQkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJEaXNwbGF5KCdpbmxpbmUnKTtcclxuICAgICAgICBzZXRFRGlzcGxheSgnbm9uZScpO1xyXG4gICAgICAgIHNldFRTb1lTRGlzcGxheSgnbm9uZScpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gQ2xpY2tFKCkge1xyXG4gICAgICAgIFN0b3BBdWRpb09uQ2xpY2soKTtcclxuICAgICAgICBzZXRZbkZDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldFNvVENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0V0FZRENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0V0lGaUxDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldEFCQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldEVDbGFzcygnc2hvdycpO1xyXG4gICAgICAgIHNldFRTb1lTQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRZbkZEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0U29URGlzcGxheSgnbm9uZScpO1xyXG4gICAgICAgIHNldFdBWUREaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0V0lGaUxEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0QUJEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0SUlSRGlzcGxheSgnbm9uZScpO1xyXG4gICAgICAgIHNldEVEaXNwbGF5KCdpbmxpbmUnKTtcclxuICAgICAgICBzZXRUU29ZU0Rpc3BsYXkoJ25vbmUnKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIENsaWNrVFNvWVMoKSB7XHJcbiAgICAgICAgU3RvcEF1ZGlvT25DbGljaygpO1xyXG4gICAgICAgIHNldFluRkNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0U29UQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRXQVlEQ2xhc3MoJ25vbmUnKTtcclxuICAgICAgICBzZXRXSUZpTENsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0QUJDbGFzcygnbm9uZScpO1xyXG4gICAgICAgIHNldElJUkNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0RUNsYXNzKCdub25lJyk7XHJcbiAgICAgICAgc2V0VFNvWVNDbGFzcygnc2hvdycpO1xyXG4gICAgICAgIHNldFluRkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRTb1REaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0V0FZRERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRXSUZpTERpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRBQkRpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRJSVJEaXNwbGF5KCdub25lJyk7XHJcbiAgICAgICAgc2V0RURpc3BsYXkoJ25vbmUnKTtcclxuICAgICAgICBzZXRUU29ZU0Rpc3BsYXkoJ2lubGluZScpO1xyXG4gICAgfVxyXG4gICAgLy90aGlzIGZ1bmN0aW9uIHJ1bnMgZXZlcnkgdGltZSBhIHNvbmcgbmFtZSBpcyBjbGlja2VkIG9uLiBpdCB3aWxsIGNyZWF0ZSBhbiBhcnJheSBvZiBldmVyeSBhdWRpbyBlbGVtZW50IGFuZCBzdG9wIGl0IGlmIGl0IGlzIHBsYXlpbmcuIFxyXG4gICAgZnVuY3Rpb24gU3RvcEF1ZGlvT25DbGljaygpIHtcclxuICAgICAgICB2YXIgYXVkaW9FbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2F1ZGlvJyk7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhdWRpb0VsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGF1ZGlvRWxlbWVudHNbaV0ucGF1c2UoKTtcclxuICAgICAgICAgICAgYXVkaW9FbGVtZW50c1tpXS5jdXJyZW50VGltZSA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc2Njb250YWluZXInIH0sXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJzaG93Y2FzZS1pbWdcIiB9LFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInNob3djYXNlLWltZy1pbnNpZGVcIiB9LFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2xpc3Rjb250YWluZXInIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGNsYXNzTmFtZTogWW5GQ2xhc3MsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENsaWNrWW5GKCk7IH0gfSwgXCJBIERyZWFtIElzIEEgV2lzaCBZb3VyIEhlYXJ0IE1ha2VzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgeyBjbGFzc05hbWU6IFNvVENsYXNzLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBDbGlja1NvVCgpOyB9IH0sIFwiQmVhdXRpZnVsIExvdmVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGNsYXNzTmFtZTogQUJDbGFzcywgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ2xpY2tBQigpOyB9IH0sIFwiRW1pbHlcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGNsYXNzTmFtZTogVFNvWVNDbGFzcywgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ2xpY2tUU29ZUygpOyB9IH0sIFwiSG93IERlZXAgSXMgVGhlIE9jZWFuP1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHsgY2xhc3NOYW1lOiBFQ2xhc3MsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENsaWNrRSgpOyB9IH0sIFwiSSdtIEEgRm9vbCBUbyBXYW50IFlvdVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHsgY2xhc3NOYW1lOiBJSVJDbGFzcywgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ2xpY2tJSVIoKTsgfSB9LCBcIk15IEZvb2xpc2ggSGVhcnRcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGNsYXNzTmFtZTogV0FZRENsYXNzLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7IHJldHVybiBDbGlja1dBWUQoKTsgfSB9LCBcIldoYXQgQXJlIFlvdSBEb2luZyBUaGUgUmVzdCBvZiBZb3VyIExpZmU/XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgeyBjbGFzc05hbWU6IFdJRmlMQ2xhc3MsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENsaWNrV0lGaUwoKTsgfSB9LCBcIldoZW4gSSBGYWxsIEluIExvdmVcIikpKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdhdWRpb2NvbnRhaW5lcicgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdhdWRpbzEnLCBzdHlsZTogeyAnZGlzcGxheSc6IFwiXCIgKyBZbkZEaXNwbGF5IH0gfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDJcIiwgbnVsbCwgXCJBIERyZWFtIElzIEEgV2lzaCBZb3VyIEhlYXJ0IE1ha2VzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhdWRpb1wiLCB7IGNvbnRyb2xzOiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzb3VyY2VcIiwgeyBzcmM6ICdzcmNcXFxcY29tcG9uZW50c1xcXFw0YWRyZWFtaXNhd2lzaC5tcDMnLCB0eXBlOiAnYXVkaW8vbXBlZycgfSkpKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdhdWRpbzInLCBzdHlsZTogeyAnZGlzcGxheSc6IFwiXCIgKyBTb1REaXNwbGF5IH0gfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDJcIiwgbnVsbCwgXCJCZWF1dGlmdWwgTG92ZVwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYXVkaW9cIiwgeyBjb250cm9sczogdHJ1ZSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIsIHsgc3JjOiAnc3JjXFxcXGNvbXBvbmVudHNcXFxcM2JlYXV0aWZ1bGxvdmUubXAzJywgdHlwZTogJ2F1ZGlvL21wZWcnIH0pKSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnYXVkaW8zJywgc3R5bGU6IHsgJ2Rpc3BsYXknOiBcIlwiICsgV0FZRERpc3BsYXkgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMlwiLCBudWxsLCBcIldoYXQgQXJlIFlvdSBEb2luZyBUaGUgUmVzdCBvZiBZb3VyIExpZmU/XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhdWRpb1wiLCB7IGNvbnRyb2xzOiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzb3VyY2VcIiwgeyBzcmM6ICdzcmNcXFxcY29tcG9uZW50c1xcXFw1d2hhdHJ1ZG9pbmd0aGVyZXN0Lm1wMycsIHR5cGU6ICdhdWRpby9tcGVnJyB9KSkpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2F1ZGlvNCcsIHN0eWxlOiB7ICdkaXNwbGF5JzogXCJcIiArIFdJRmlMRGlzcGxheSB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIG51bGwsIFwiV2hlbiBJIEZhbGwgSW4gTG92ZVwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYXVkaW9cIiwgeyBjb250cm9sczogdHJ1ZSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIsIHsgc3JjOiAnc3JjXFxcXGNvbXBvbmVudHNcXFxcMXdoZW5pZmFsbC5tcDMnLCB0eXBlOiAnYXVkaW8vbXBlZycgfSkpKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdhdWRpbzUnLCBzdHlsZTogeyAnZGlzcGxheSc6IFwiXCIgKyBBQkRpc3BsYXkgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMlwiLCBudWxsLCBcIkVtaWx5XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhdWRpb1wiLCB7IGNvbnRyb2xzOiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzb3VyY2VcIiwgeyBzcmM6ICdzcmNcXFxcY29tcG9uZW50c1xcXFwyZW1pbHkubXAzJywgdHlwZTogJ2F1ZGlvL21wZWcnIH0pKSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnYXVkaW82Jywgc3R5bGU6IHsgJ2Rpc3BsYXknOiBcIlwiICsgSUlSRGlzcGxheSB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIG51bGwsIFwiTXkgRm9vbGlzaCBIZWFydFwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYXVkaW9cIiwgeyBjb250cm9sczogdHJ1ZSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIsIHsgc3JjOiAnc3JjXFxcXGNvbXBvbmVudHNcXFxcOG15Zm9vbGlzaC5tcDMnLCB0eXBlOiAnYXVkaW8vbXBlZycgfSkpKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdhdWRpbzcnLCBzdHlsZTogeyAnZGlzcGxheSc6IFwiXCIgKyBFRGlzcGxheSB9IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgyXCIsIG51bGwsIFwiSSdtIEEgRm9vbCBUbyBXYW50IFlvdVwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYXVkaW9cIiwgeyBjb250cm9sczogdHJ1ZSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIsIHsgc3JjOiAnc3JjXFxcXGNvbXBvbmVudHNcXFxcNmltYWZvb2wubXAzJywgdHlwZTogJ2F1ZGlvL21wZWcnIH0pKSksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnYXVkaW84Jywgc3R5bGU6IHsgJ2Rpc3BsYXknOiBcIlwiICsgVFNvWVNEaXNwbGF5IH0gfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDJcIiwgbnVsbCwgXCJIb3cgRGVlcCBJcyBUaGUgT2NlYW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImF1ZGlvXCIsIHsgY29udHJvbHM6IHRydWUgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNvdXJjZVwiLCB7IHNyYzogJ3NyY1xcXFxjb21wb25lbnRzXFxcXDdob3dkZWVwLm1wMycsIHR5cGU6ICdhdWRpby9tcGVnJyB9KSkpKSkpKTtcclxufTtcclxuZXhwb3J0cy5kZWZhdWx0ID0gQ29tcGxldGVkU29uZ3M7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIHJlYWN0XzEgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcbi8vaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSVpEeTNNUW5pNzg/c3RhcnQ9MjI0M1xyXG52YXIgU29uZ3NUb0RvID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy9pIG1hZGUgYSBqc29uIGZpbGUgYmVjYXVzZSBpIHdhbnQgdG8gZWFzaWx5IGFkZCBhbmQgcmVtb3ZlIHNvbmdzIG92ZXIgdGltZS5cclxuICAgIHZhciBGZXRjaExpc3RzT2ZTb25ncyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBmZXRjaCgnLi8uLy4vc29uZy1saXN0LWRhdGEuanNvbicpXHJcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIHZhciBHZW5lcmF0ZUxpc3RzT2ZTb25ncyA9IGZ1bmN0aW9uIChteVNvbmdEaXYpIHtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RhbmRhcmRzQXJyYXkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbXlMaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgbXlMaS5pbm5lclRleHQgPSBzdGFuZGFyZHNBcnJheVtpXTtcclxuICAgICAgICAgICAgICAgICAgICBteUxpLmNsYXNzTGlzdC5hZGQoJ3NvbmctbmFtZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIG15U29uZ0Rpdi5hcHBlbmRDaGlsZChteUxpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgLy9zdGFuZGFyZHMgbGlzdFxyXG4gICAgICAgICAgICB2YXIgc3RhbmRhcmRzQXJyYXkgPSBkYXRhWzBdLnN0YW5kYXJkcy5zb3J0KCk7XHJcbiAgICAgICAgICAgIHZhciBteVNvbmdVbDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xyXG4gICAgICAgICAgICBteVNvbmdVbDEuY2xhc3NMaXN0LmFkZCgnc3RhbmRhcmRzJyk7XHJcbiAgICAgICAgICAgIHZhciBteUgyMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XHJcbiAgICAgICAgICAgIG15SDIxLmlubmVyVGV4dCA9ICdTdGFuZGFyZHMnO1xyXG4gICAgICAgICAgICBteVNvbmdVbDEuYXBwZW5kQ2hpbGQobXlIMjEpO1xyXG4gICAgICAgICAgICBHZW5lcmF0ZUxpc3RzT2ZTb25ncyhteVNvbmdVbDEpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc29uZ3MnKS5hcHBlbmRDaGlsZChteVNvbmdVbDEpO1xyXG4gICAgICAgICAgICAvL29wZXJhIGxpc3RcclxuICAgICAgICAgICAgc3RhbmRhcmRzQXJyYXkgPSBkYXRhWzFdLm9wZXJhLnNvcnQoKTtcclxuICAgICAgICAgICAgdmFyIG15U29uZ1VsMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XHJcbiAgICAgICAgICAgIG15U29uZ1VsMi5jbGFzc0xpc3QuYWRkKCdvcGVyYScpO1xyXG4gICAgICAgICAgICB2YXIgbXlIMjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG4gICAgICAgICAgICBteUgyMi5pbm5lclRleHQgPSAnT3BlcmEnO1xyXG4gICAgICAgICAgICBteVNvbmdVbDIuYXBwZW5kQ2hpbGQobXlIMjIpO1xyXG4gICAgICAgICAgICBHZW5lcmF0ZUxpc3RzT2ZTb25ncyhteVNvbmdVbDIpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc29uZ3MnKS5hcHBlbmRDaGlsZChteVNvbmdVbDIpO1xyXG4gICAgICAgICAgICAvL2NvbnRlbXBvcmFyeSBsaXN0XHJcbiAgICAgICAgICAgIHN0YW5kYXJkc0FycmF5ID0gZGF0YVsyXS5jb250ZW1wb3Jhcnkuc29ydCgpO1xyXG4gICAgICAgICAgICB2YXIgbXlTb25nRGl2MyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XHJcbiAgICAgICAgICAgIG15U29uZ0RpdjMuY2xhc3NMaXN0LmFkZCgnY29udGVtcG9yYXJ5Jyk7XHJcbiAgICAgICAgICAgIHZhciBteUgyMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XHJcbiAgICAgICAgICAgIG15SDIzLmlubmVyVGV4dCA9ICdDb250ZW1wb3JhcnknO1xyXG4gICAgICAgICAgICBteVNvbmdEaXYzLmFwcGVuZENoaWxkKG15SDIzKTtcclxuICAgICAgICAgICAgR2VuZXJhdGVMaXN0c09mU29uZ3MobXlTb25nRGl2Myk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zb25ncycpLmFwcGVuZENoaWxkKG15U29uZ0RpdjMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIC8vcnVuIGZ1bmN0aW9uIGFib3ZlIG9ubHkgaWYgbmV3IHBhZ2UgbG9hZFxyXG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zb25nLW5hbWUnKSA9PT0gbnVsbCkge1xyXG4gICAgICAgIEZldGNoTGlzdHNPZlNvbmdzKCk7XHJcbiAgICB9XHJcbiAgICA7XHJcbiAgICAvL3RoZXNlIHVzZXN0YXRlcyBjaGFuZ2UgdGhlIHRleHQgc2hvd24gd2hlbiB0aGVpciBkaXYgaXMgbW91c2VkIG92ZXJcclxuICAgIHZhciBfYSA9IHJlYWN0XzEudXNlU3RhdGUoZmFsc2UpLCBpbkhvdmVyQiA9IF9hWzBdLCBzZXRIb3ZlckluQiA9IF9hWzFdO1xyXG4gICAgdmFyIF9iID0gcmVhY3RfMS51c2VTdGF0ZSh0cnVlKSwgb3V0SG92ZXJCID0gX2JbMF0sIHNldEhvdmVyT3V0QiA9IF9iWzFdO1xyXG4gICAgdmFyIF9jID0gcmVhY3RfMS51c2VTdGF0ZShmYWxzZSksIGluSG92ZXJNID0gX2NbMF0sIHNldEhvdmVySW5NID0gX2NbMV07XHJcbiAgICB2YXIgX2QgPSByZWFjdF8xLnVzZVN0YXRlKHRydWUpLCBvdXRIb3Zlck0gPSBfZFswXSwgc2V0SG92ZXJPdXRNID0gX2RbMV07XHJcbiAgICB2YXIgX2UgPSByZWFjdF8xLnVzZVN0YXRlKGZhbHNlKSwgaW5Ib3ZlclQgPSBfZVswXSwgc2V0SG92ZXJJblQgPSBfZVsxXTtcclxuICAgIHZhciBfZiA9IHJlYWN0XzEudXNlU3RhdGUodHJ1ZSksIG91dEhvdmVyVCA9IF9mWzBdLCBzZXRIb3Zlck91dFQgPSBfZlsxXTtcclxuICAgIHZhciBTdGF0ZUZ1bmN0aW9uQSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRIb3ZlckluQih0cnVlKTtcclxuICAgICAgICBzZXRIb3Zlck91dEIoZmFsc2UpO1xyXG4gICAgfTtcclxuICAgIHZhciBTdGF0ZUZ1bmN0aW9uQiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRIb3ZlckluQihmYWxzZSk7XHJcbiAgICAgICAgc2V0SG92ZXJPdXRCKHRydWUpO1xyXG4gICAgfTtcclxuICAgIHZhciBTdGF0ZUZ1bmN0aW9uQyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRIb3ZlckluTSh0cnVlKTtcclxuICAgICAgICBzZXRIb3Zlck91dE0oZmFsc2UpO1xyXG4gICAgfTtcclxuICAgIHZhciBTdGF0ZUZ1bmN0aW9uRCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRIb3ZlckluTShmYWxzZSk7XHJcbiAgICAgICAgc2V0SG92ZXJPdXRNKHRydWUpO1xyXG4gICAgfTtcclxuICAgIHZhciBTdGF0ZUZ1bmN0aW9uRSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRIb3ZlckluVCh0cnVlKTtcclxuICAgICAgICBzZXRIb3Zlck91dFQoZmFsc2UpO1xyXG4gICAgfTtcclxuICAgIHZhciBTdGF0ZUZ1bmN0aW9uRiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRIb3ZlckluVChmYWxzZSk7XHJcbiAgICAgICAgc2V0SG92ZXJPdXRUKHRydWUpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGlkOiAnc29uZ3MtY29udGFpbmVyJyB9LFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCBudWxsLCBcIlNvbmdzIFRvIERvXCIpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHsgY2xhc3NOYW1lOiAnc29uZ3MtcCcgfSwgXCJUaGlzIGlzIGxpc3Qgb2Ygc29uZ3MgSSBhbSBpbnRlcmVzdGVkIGluIGxlYXJuaW5nLlwiKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc29uZ3MnIH0sXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdiaWxsJywgb25Nb3VzZUVudGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBTdGF0ZUZ1bmN0aW9uQSgpOyB9LCBvbk1vdXNlTGVhdmU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFN0YXRlRnVuY3Rpb25CKCk7IH0gfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMlwiLCBudWxsLCBcIkJpbGwgRXZhbnNcIiksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJQaWFuaXN0XCIpLFxyXG4gICAgICAgICAgICAgICAgb3V0SG92ZXJCICYmXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgeyBjbGFzc05hbWU6ICdiaWxsc2hvdycgfSwgXCJcXHUyMDFDSSBhbHdheXMgbGlrZSBwZW9wbGUgd2hvIGhhdmUgZGV2ZWxvcGVkIGxvbmcgYW5kIGhhcmQuLi4gSSB0aGluayB3aGF0IHRoZXkgYXJyaXZlIGF0IGlzIHVzdWFsbHkgYSBtdWNoIGRlZXBlciBhbmQgbW9yZSBiZWF1dGlmdWwgdGhpbmcgdGhhbiB0aGUgcGVyc29uIHdobyBzZWVtcyB0byBoYXZlIHRoYXQgYWJpbGl0eSBhbmQgZmx1aWRpdHkgZnJvbSB0aGUgYmVnaW5uaW5nLlxcdTIwMURcIiksXHJcbiAgICAgICAgICAgICAgICBpbkhvdmVyQiAmJlxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHsgY2xhc3NOYW1lOiAnYmlsbGhpZGUnIH0sIFwiXFx1MjAxQ0kgYmVsaWV2ZSBpbiB0aGluZ3MgdGhhdCBhcmUgZGV2ZWxvcGVkIHRocm91Z2ggaGFyZCB3b3JrLiBJIGFsd2F5cyBsaWtlIHBlb3BsZSB3aG8gaGF2ZSBkZXZlbG9wZWQgbG9uZyBhbmQgaGFyZCwgZXNwZWNpYWxseSB0aHJvdWdoIGludHJvc3BlY3Rpb24gYW5kIGEgbG90IG9mIGRlZGljYXRpb24uIEkgdGhpbmsgd2hhdCB0aGV5IGFycml2ZSBhdCBpcyB1c3VhbGx5IGEgbXVjaCBkZWVwZXIgYW5kIG1vcmUgYmVhdXRpZnVsIHRoaW5nIHRoYW4gdGhlIHBlcnNvbiB3aG8gc2VlbXMgdG8gaGF2ZSB0aGF0IGFiaWxpdHkgYW5kIGZsdWlkaXR5IGZyb20gdGhlIGJlZ2lubmluZy4gSSBzYXkgdGhpcyBiZWNhdXNlIGl0J3MgYSBnb29kIG1lc3NhZ2UgdG8gZ2l2ZSB0byB5b3VuZyB0YWxlbnRzIHdobyBmZWVsIGFzIEkgdXNlZCB0by5cXHUyMDFEXCIpKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ21hcmlhJywgb25Nb3VzZUVudGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBTdGF0ZUZ1bmN0aW9uQygpOyB9LCBvbk1vdXNlTGVhdmU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFN0YXRlRnVuY3Rpb25EKCk7IH0gfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMlwiLCBudWxsLCBcIk1hcmlhIENhbGxhc1wiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIlNvcHJhbm9cIiksXHJcbiAgICAgICAgICAgICAgICBvdXRIb3Zlck0gJiZcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7IGNsYXNzTmFtZTogJ21hcmlhc2hvdycgfSwgXCJcXHUyMDFDV2hlbiBtdXNpYyBmYWlscyB0byBhZ3JlZSB0byB0aGUgZWFyLCB0byBzb290aGUgdGhlIGVhciBhbmQgdGhlIGhlYXJ0IGFuZCB0aGUgc2Vuc2VzLCB0aGVuIGl0IGhhcyBtaXNzZWQgdGhlIHBvaW50LlxcdTIwMURcIiksXHJcbiAgICAgICAgICAgICAgICBpbkhvdmVyTSAmJlxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHsgY2xhc3NOYW1lOiAnbWFyaWFoaWRlJyB9LCBcIlxcdTIwMUNXaGVuIG11c2ljIGZhaWxzIHRvIGFncmVlIHRvIHRoZSBlYXIsIHRvIHNvb3RoZSB0aGUgZWFyIGFuZCB0aGUgaGVhcnQgYW5kIHRoZSBzZW5zZXMsIHRoZW4gaXQgaGFzIG1pc3NlZCBpdCdzIHBvaW50LiBUaGF0IGlzIHdoeSBJIGRvbid0IGFncmVlIHdpdGggbW9kZXJuIG11c2ljLi4uIE11c2ljIHNob3VsZCBiZSBlc3NlbnRpYWxseSBzaW1wbGUsIGFuZCB1cG9uIHNpbXBsaWNpdHkgYW5kIGJlYXV0eSBvZiBsaW5lLCBpdCBjb3VsZCBiZWNvbWUgZ3JlYXQuXFx1MjAxRFwiKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICd0b255Jywgb25Nb3VzZUVudGVyOiBmdW5jdGlvbiAoKSB7IHJldHVybiBTdGF0ZUZ1bmN0aW9uRSgpOyB9LCBvbk1vdXNlTGVhdmU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFN0YXRlRnVuY3Rpb25GKCk7IH0gfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMlwiLCBudWxsLCBcIlRvbnkgQmVubmV0dFwiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIlRlbm9yXCIpLFxyXG4gICAgICAgICAgICAgICAgb3V0SG92ZXJUICYmXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgeyBjbGFzc05hbWU6ICd0b255c2hvdycgfSwgXCJcXHUyMDFDV2hlbiB5b3UgbGlzdGVuIHRvIHRoZSBhdWRpZW5jZSwgdGhleSB3aWxsIHRlbGwgeW91IHdoYXQgdGhleSBsaWtlLlxcdTIwMURcIiksXHJcbiAgICAgICAgICAgICAgICBpbkhvdmVyVCAmJlxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHsgY2xhc3NOYW1lOiAndG9ueWhpZGUnIH0sIFwiXFx1MjAxQ0knbSBzdGlsbCBsZWFybmluZyBhYm91dCBtdXNpYy4gVGhlIGJlc3Qgd2F5IHRvIGxlYXJuIGlzIHRvIGxpc3RlbiB0byB0aGUgYXVkaWVuY2UuIFdoZW4geW91IGxpc3RlbiB0byB0aGUgYXVkaWVuY2UsIHRoZXkgd2lsbCB0ZWxsIHlvdSB3aGF0IHRoZXkgbGlrZS4gSSB3aXNoIHRoZXNlIGJpZyBjb3Jwb3JhdGlvbnMsIGluc3RlYWQgb2YgdGVsbGluZyB0aGUgYXVkaWVuY2Ugd2hhdCB0aGV5IHNob3VsZCBoYXZlLCB3b3VsZCBsaXN0ZW4uXFx1MjAxRFwiKSkpKSk7XHJcbn07XHJcbmV4cG9ydHMuZGVmYXVsdCA9IFNvbmdzVG9EbztcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgcmVhY3Rfcm91dGVyX2RvbV8xID0gcmVxdWlyZShcInJlYWN0LXJvdXRlci1kb21cIik7XHJcbnZhciBTdHJpYmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBBZGRTcGFjZSgpIHtcclxuICAgICAgICB2YXIgY2NudmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2NuJykudmFsdWU7XHJcbiAgICAgICAgaWYgKChjY252YWx1ZS5sZW5ndGggPT09IDQpIHx8XHJcbiAgICAgICAgICAgIChjY252YWx1ZS5sZW5ndGggPT09IDkpIHx8XHJcbiAgICAgICAgICAgIChjY252YWx1ZS5sZW5ndGggPT09IDE0KSkge1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2NuJykudmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2NuJykudmFsdWUgKyAnICc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gQ2xpY2tCYWNrKCkge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ25hdicpLnN0eWxlLmRpc3BsYXkgPSBcImdyaWRcIjtcclxuICAgIH1cclxuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnc3RyaWJlLWNvbnRhaW5lcicgfSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2xlZnQtaGFsZicgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgaWQ6ICdzdHJpYmUtdG9wJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLk5hdkxpbmssIHsgYWN0aXZlQ2xhc3NOYW1lOiAnYWN0aXZlJywgdG86ICcvJywgb25DbGljazogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ2xpY2tCYWNrKCk7IH0sIGlkOiAnbmF2LXN0cmliZScgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBpZDogJ2JhY2snIH0sIFwiXFx1MjE5MCBCYWNrXCIpKSxcclxuICAgICAgICAgICAgICAgICAgICBcIlN0ZXZlbiBGYWJyaXppbyBNdXNpY1wiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoNFwiLCB7IGlkOiAnc3RyaWJlLWg0JyB9LCBcIlBheSBTdGV2ZW4gRmFicml6aW8gTXVzaWNcIiksXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAnY2FydCcgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGVsXCIsIG51bGwsIFwiJDE0Ljk5XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiICQwLjAwXCIpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGlkOiAnb3JkZXInIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBpZDogJ3Nwb3QxJyB9LCBcIkNsb3VkIFRhc3RlclwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAnc3BvdDInIH0sIFwiJDAuMDBcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBpZDogJ3Nwb3QzJyB9LCBcIlF0eSAxXCIpKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBpZDogJ2Zvb3RlcnRoaW5nJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiUG93ZXJlZCBieVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGNsYXNzTmFtZTogJ3N0cmliZScgfSwgXCJzdHJpYmVcIikpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgaWQ6ICd0ZXJtcycgfSwgXCJUZXJtc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAncHJpdmFjeScgfSwgXCJQcml2YWN5XCIpKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdyaWdodC1oYWxmJyB9LFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImZvcm1cIiwgeyBhY3Rpb246IFwiaHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vYXR0YWNobWVudHMvODQwNzM3MjYyMDQ0MzE1NjY5Lzg5ODAwMDMxMTEyNDM5NDAwNC8zYmVhdXRpZnVsbG92ZS5tcDNcIiB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiZm9ybS1oZWFkZXJcIiB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDRcIiwgeyBjbGFzc05hbWU6IFwidGl0bGVcIiB9LCBcIlBheSB3aXRoIGNhcmRcIikpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7IGh0bWxGb3I6ICdlbWFpbCcsIGlkOiAnZW1haWwtbGFiZWwnIH0sIFwiRW1haWxcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHsgdHlwZTogXCJlbWFpbFwiLCBpZDogXCJlbWFpbFwiLCBuYW1lOiBcImVtYWlsXCIgfSksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHsgaHRtbEZvcjogJ2NhcmQnLCBpZDogJ2NhcmQtbGFiZWwnIH0sIFwiQ2FyZCBpbmZvcm1hdGlvblwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnY2NzdHVmZicgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHsgb25LZXlQcmVzczogZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEvWzAtOV0vLnRlc3QoZXZlbnQua2V5KSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIG9uQ2hhbmdlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBBZGRTcGFjZSgpOyB9LCBtYXhMZW5ndGg6IDE5LCBwbGFjZWhvbGRlcjogXCI0MjQyIDQyNDIgNDI0MiA0MjQyXCIsIGF1dG9Db21wbGV0ZTogXCJjYy1udW1iZXJcIiwgaW5wdXRNb2RlOiBcIm51bWVyaWNcIiwgaWQ6IFwiY2NuXCIsIG5hbWU6ICdjYXJkJywgdHlwZTogXCJ0ZWxcIiB9KSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHsgYXV0b0NvbXBsZXRlOiBcImNjLWV4cFwiLCBhdXRvQ29ycmVjdDogXCJvZmZcIiwgc3BlbGxDaGVjazogXCJmYWxzZVwiLCBpZDogXCJjYXJkRXhwaXJ5XCIsIG5hbWU6IFwiY2FyZEV4cGlyeVwiLCB0eXBlOiBcInRlbFwiLCBwbGFjZWhvbGRlcjogXCJNTVlZXCIsIG9uS2V5UHJlc3M6IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghL1swLTldLy50ZXN0KGV2ZW50LmtleSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBtYXhMZW5ndGg6IDQgfSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7IGNsYXNzTmFtZTogXCJDaGVja291dElucHV0IENoZWNrb3V0SW5wdXQtLXRhYnVsYXJudW1zIElucHV0IElucHV0LS1lbXB0eVwiLCBhdXRvQ29tcGxldGU6IFwiY2MtZXhwXCIsIGF1dG9Db3JyZWN0OiBcIm9mZlwiLCBzcGVsbENoZWNrOiBcImZhbHNlXCIsIHR5cGU6IFwidGVsXCIsIFwiYXJpYS1sYWJlbFwiOiBcIkV4cGlyYXRpb25cIiwgaWQ6ICdjYXJkY3ZjJywgcGxhY2Vob2xkZXI6IFwiQ1ZDXCIsIFwiYXJpYS1pbnZhbGlkXCI6IFwiZmFsc2VcIiwgb25LZXlQcmVzczogZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEvWzAtOV0vLnRlc3QoZXZlbnQua2V5KSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIG1heExlbmd0aDogMyB9KSksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHsgaHRtbEZvcjogJ25hbWUnLCBpZDogJ25hbWUtbGFiZWwnIH0sIFwiTmFtZSBvbiBjYXJkXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7IHR5cGU6IFwidGV4dFwiLCBpZDogXCJuYW1lXCIsIG5hbWU6IFwibmFtZVwiLCBwbGFjZWhvbGRlcjogXCJcIiB9KSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwgeyBodG1sRm9yOiAnQ291bnRyeScsIGlkOiAnY291bnRyeS1sYWJlbCcgfSwgXCJDb3VudHJ5IG9yIHJlZ2lvblwiKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnQ29SJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIsIHsgbmFtZTogXCJDb3VudHJ5XCIsIGlkOiAnY291bnRyeScgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJBZmdoYW5pc3RhblwiIH0sIFwiQWZnaGFuaXN0YW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQWxiYW5pYVwiIH0sIFwiQWxiYW5pYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJBbGdlcmlhXCIgfSwgXCJBbGdlcmlhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkFtZXJpY2FuIFNhbW9hXCIgfSwgXCJBbWVyaWNhbiBTYW1vYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJBbmRvcnJhXCIgfSwgXCJBbmRvcnJhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkFuZ29sYVwiIH0sIFwiQW5nb2xhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkFuZ3VpbGxhXCIgfSwgXCJBbmd1aWxsYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJBbnRhcmN0aWNhXCIgfSwgXCJBbnRhcmN0aWNhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkFudGlndWEgYW5kIEJhcmJ1ZGFcIiB9LCBcIkFudGlndWEgYW5kIEJhcmJ1ZGFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQXJnZW50aW5hXCIgfSwgXCJBcmdlbnRpbmFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQXJtZW5pYVwiIH0sIFwiQXJtZW5pYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJBcnViYVwiIH0sIFwiQXJ1YmFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQXVzdHJhbGlhXCIgfSwgXCJBdXN0cmFsaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQXVzdHJpYVwiIH0sIFwiQXVzdHJpYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJBemVyYmFpamFuXCIgfSwgXCJBemVyYmFpamFuXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkJhaGFtYXNcIiB9LCBcIkJhaGFtYXNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQmFocmFpblwiIH0sIFwiQmFocmFpblwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJCYW5nbGFkZXNoXCIgfSwgXCJCYW5nbGFkZXNoXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkJhcmJhZG9zXCIgfSwgXCJCYXJiYWRvc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJCZWxhcnVzXCIgfSwgXCJCZWxhcnVzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkJlbGdpdW1cIiB9LCBcIkJlbGdpdW1cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQmVsaXplXCIgfSwgXCJCZWxpemVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQmVuaW5cIiB9LCBcIkJlbmluXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkJlcm11ZGFcIiB9LCBcIkJlcm11ZGFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQmh1dGFuXCIgfSwgXCJCaHV0YW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQm9saXZpYVwiIH0sIFwiQm9saXZpYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJCb3NuaWEgYW5kIEhlcnplZ292aW5hXCIgfSwgXCJCb3NuaWEgYW5kIEhlcnplZ292aW5hXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkJvdHN3YW5hXCIgfSwgXCJCb3Rzd2FuYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJCb3V2ZXQgSXNsYW5kXCIgfSwgXCJCb3V2ZXQgSXNsYW5kXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkJyYXppbFwiIH0sIFwiQnJhemlsXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkJyaXRpc2ggSW5kaWFuIE9jZWFuIFRlcnJpdG9yeVwiIH0sIFwiQnJpdGlzaCBJbmRpYW4gT2NlYW4gVGVycml0b3J5XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkJydW5laSBEYXJ1c3NhbGFtXCIgfSwgXCJCcnVuZWkgRGFydXNzYWxhbVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJCdWxnYXJpYVwiIH0sIFwiQnVsZ2FyaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQnVya2luYSBGYXNvXCIgfSwgXCJCdXJraW5hIEZhc29cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQnVydW5kaVwiIH0sIFwiQnVydW5kaVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJDYW1ib2RpYVwiIH0sIFwiQ2FtYm9kaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQ2FtZXJvb25cIiB9LCBcIkNhbWVyb29uXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkNhbmFkYVwiIH0sIFwiQ2FuYWRhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkNhcGUgVmVyZGVcIiB9LCBcIkNhcGUgVmVyZGVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQ2F5bWFuIElzbGFuZHNcIiB9LCBcIkNheW1hbiBJc2xhbmRzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkNlbnRyYWwgQWZyaWNhbiBSZXB1YmxpY1wiIH0sIFwiQ2VudHJhbCBBZnJpY2FuIFJlcHVibGljXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkNoYWRcIiB9LCBcIkNoYWRcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQ2hpbGVcIiB9LCBcIkNoaWxlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkNoaW5hXCIgfSwgXCJDaGluYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJDaHJpc3RtYXMgSXNsYW5kXCIgfSwgXCJDaHJpc3RtYXMgSXNsYW5kXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkNvY29zIChLZWVsaW5nKSBJc2xhbmRzXCIgfSwgXCJDb2NvcyAoS2VlbGluZykgSXNsYW5kc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJDb2xvbWJpYVwiIH0sIFwiQ29sb21iaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQ29tb3Jvc1wiIH0sIFwiQ29tb3Jvc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJDb25nb1wiIH0sIFwiQ29uZ29cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQ29uZ28sIFRoZSBEZW1vY3JhdGljIFJlcHVibGljIG9mIFRoZVwiIH0sIFwiQ29uZ28sIFRoZSBEZW1vY3JhdGljIFJlcHVibGljIG9mIFRoZVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJDb29rIElzbGFuZHNcIiB9LCBcIkNvb2sgSXNsYW5kc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJDb3N0YSBSaWNhXCIgfSwgXCJDb3N0YSBSaWNhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkNvdGUgRCdpdm9pcmVcIiB9LCBcIkNvdGUgRCdpdm9pcmVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiQ3JvYXRpYVwiIH0sIFwiQ3JvYXRpYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJDdWJhXCIgfSwgXCJDdWJhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkN5cHJ1c1wiIH0sIFwiQ3lwcnVzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkN6ZWNoIFJlcHVibGljXCIgfSwgXCJDemVjaCBSZXB1YmxpY1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJEZW5tYXJrXCIgfSwgXCJEZW5tYXJrXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkRqaWJvdXRpXCIgfSwgXCJEamlib3V0aVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJEb21pbmljYVwiIH0sIFwiRG9taW5pY2FcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiRG9taW5pY2FuIFJlcHVibGljXCIgfSwgXCJEb21pbmljYW4gUmVwdWJsaWNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiRWN1YWRvclwiIH0sIFwiRWN1YWRvclwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJFZ3lwdFwiIH0sIFwiRWd5cHRcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiRWwgU2FsdmFkb3JcIiB9LCBcIkVsIFNhbHZhZG9yXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkVxdWF0b3JpYWwgR3VpbmVhXCIgfSwgXCJFcXVhdG9yaWFsIEd1aW5lYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJFcml0cmVhXCIgfSwgXCJFcml0cmVhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkVzdG9uaWFcIiB9LCBcIkVzdG9uaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiRXRoaW9waWFcIiB9LCBcIkV0aGlvcGlhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkZhbGtsYW5kIElzbGFuZHMgKE1hbHZpbmFzKVwiIH0sIFwiRmFsa2xhbmQgSXNsYW5kcyAoTWFsdmluYXMpXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkZhcm9lIElzbGFuZHNcIiB9LCBcIkZhcm9lIElzbGFuZHNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiRmlqaVwiIH0sIFwiRmlqaVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJGaW5sYW5kXCIgfSwgXCJGaW5sYW5kXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkZyYW5jZVwiIH0sIFwiRnJhbmNlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkZyZW5jaCBHdWlhbmFcIiB9LCBcIkZyZW5jaCBHdWlhbmFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiRnJlbmNoIFBvbHluZXNpYVwiIH0sIFwiRnJlbmNoIFBvbHluZXNpYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJGcmVuY2ggU291dGhlcm4gVGVycml0b3JpZXNcIiB9LCBcIkZyZW5jaCBTb3V0aGVybiBUZXJyaXRvcmllc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHYWJvblwiIH0sIFwiR2Fib25cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiR2FtYmlhXCIgfSwgXCJHYW1iaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiR2VvcmdpYVwiIH0sIFwiR2VvcmdpYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHZXJtYW55XCIgfSwgXCJHZXJtYW55XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkdoYW5hXCIgfSwgXCJHaGFuYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHaWJyYWx0YXJcIiB9LCBcIkdpYnJhbHRhclwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHcmVlY2VcIiB9LCBcIkdyZWVjZVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHcmVlbmxhbmRcIiB9LCBcIkdyZWVubGFuZFwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHcmVuYWRhXCIgfSwgXCJHcmVuYWRhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkd1YWRlbG91cGVcIiB9LCBcIkd1YWRlbG91cGVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiR3VhbVwiIH0sIFwiR3VhbVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHdWF0ZW1hbGFcIiB9LCBcIkd1YXRlbWFsYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHdWluZWFcIiB9LCBcIkd1aW5lYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJHdWluZWEtYmlzc2F1XCIgfSwgXCJHdWluZWEtYmlzc2F1XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkd1eWFuYVwiIH0sIFwiR3V5YW5hXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkhhaXRpXCIgfSwgXCJIYWl0aVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJIZWFyZCBJc2xhbmQgYW5kIE1jZG9uYWxkIElzbGFuZHNcIiB9LCBcIkhlYXJkIElzbGFuZCBhbmQgTWNkb25hbGQgSXNsYW5kc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJIb2x5IFNlZSAoVmF0aWNhbiBDaXR5IFN0YXRlKVwiIH0sIFwiSG9seSBTZWUgKFZhdGljYW4gQ2l0eSBTdGF0ZSlcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiSG9uZHVyYXNcIiB9LCBcIkhvbmR1cmFzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkhvbmcgS29uZ1wiIH0sIFwiSG9uZyBLb25nXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkh1bmdhcnlcIiB9LCBcIkh1bmdhcnlcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiSWNlbGFuZFwiIH0sIFwiSWNlbGFuZFwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJJbmRpYVwiIH0sIFwiSW5kaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiSW5kb25lc2lhXCIgfSwgXCJJbmRvbmVzaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiSXJhbiwgSXNsYW1pYyBSZXB1YmxpYyBvZlwiIH0sIFwiSXJhbiwgSXNsYW1pYyBSZXB1YmxpYyBvZlwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJJcmFxXCIgfSwgXCJJcmFxXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIklyZWxhbmRcIiB9LCBcIklyZWxhbmRcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiSXNyYWVsXCIgfSwgXCJJc3JhZWxcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiSXRhbHlcIiB9LCBcIkl0YWx5XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkphbWFpY2FcIiB9LCBcIkphbWFpY2FcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiSmFwYW5cIiB9LCBcIkphcGFuXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkpvcmRhblwiIH0sIFwiSm9yZGFuXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkthemFraHN0YW5cIiB9LCBcIkthemFraHN0YW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiS2VueWFcIiB9LCBcIktlbnlhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIktpcmliYXRpXCIgfSwgXCJLaXJpYmF0aVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJLb3JlYSwgRGVtb2NyYXRpYyBQZW9wbGUncyBSZXB1YmxpYyBvZlwiIH0sIFwiS29yZWEsIERlbW9jcmF0aWMgUGVvcGxlJ3MgUmVwdWJsaWMgb2ZcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiS29yZWEsIFJlcHVibGljIG9mXCIgfSwgXCJLb3JlYSwgUmVwdWJsaWMgb2ZcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiS3V3YWl0XCIgfSwgXCJLdXdhaXRcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiS3lyZ3l6c3RhblwiIH0sIFwiS3lyZ3l6c3RhblwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJMYW8gUGVvcGxlJ3MgRGVtb2NyYXRpYyBSZXB1YmxpY1wiIH0sIFwiTGFvIFBlb3BsZSdzIERlbW9jcmF0aWMgUmVwdWJsaWNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTGF0dmlhXCIgfSwgXCJMYXR2aWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTGViYW5vblwiIH0sIFwiTGViYW5vblwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJMZXNvdGhvXCIgfSwgXCJMZXNvdGhvXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkxpYmVyaWFcIiB9LCBcIkxpYmVyaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTGlieWFuIEFyYWIgSmFtYWhpcml5YVwiIH0sIFwiTGlieWFuIEFyYWIgSmFtYWhpcml5YVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJMaWVjaHRlbnN0ZWluXCIgfSwgXCJMaWVjaHRlbnN0ZWluXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkxpdGh1YW5pYVwiIH0sIFwiTGl0aHVhbmlhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIkx1eGVtYm91cmdcIiB9LCBcIkx1eGVtYm91cmdcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTWFjYW9cIiB9LCBcIk1hY2FvXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5vcnRoIE1hY2Vkb25pYVwiIH0sIFwiTm9ydGggTWFjZWRvbmlhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1hZGFnYXNjYXJcIiB9LCBcIk1hZGFnYXNjYXJcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTWFsYXdpXCIgfSwgXCJNYWxhd2lcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTWFsYXlzaWFcIiB9LCBcIk1hbGF5c2lhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1hbGRpdmVzXCIgfSwgXCJNYWxkaXZlc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJNYWxpXCIgfSwgXCJNYWxpXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1hbHRhXCIgfSwgXCJNYWx0YVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJNYXJzaGFsbCBJc2xhbmRzXCIgfSwgXCJNYXJzaGFsbCBJc2xhbmRzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1hcnRpbmlxdWVcIiB9LCBcIk1hcnRpbmlxdWVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTWF1cml0YW5pYVwiIH0sIFwiTWF1cml0YW5pYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJNYXVyaXRpdXNcIiB9LCBcIk1hdXJpdGl1c1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJNYXlvdHRlXCIgfSwgXCJNYXlvdHRlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1leGljb1wiIH0sIFwiTWV4aWNvXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1pY3JvbmVzaWEsIEZlZGVyYXRlZCBTdGF0ZXMgb2ZcIiB9LCBcIk1pY3JvbmVzaWEsIEZlZGVyYXRlZCBTdGF0ZXMgb2ZcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTW9sZG92YSwgUmVwdWJsaWMgb2ZcIiB9LCBcIk1vbGRvdmEsIFJlcHVibGljIG9mXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1vbmFjb1wiIH0sIFwiTW9uYWNvXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1vbmdvbGlhXCIgfSwgXCJNb25nb2xpYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJNb250c2VycmF0XCIgfSwgXCJNb250c2VycmF0XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk1vcm9jY29cIiB9LCBcIk1vcm9jY29cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTW96YW1iaXF1ZVwiIH0sIFwiTW96YW1iaXF1ZVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJNeWFubWFyXCIgfSwgXCJNeWFubWFyXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5hbWliaWFcIiB9LCBcIk5hbWliaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTmF1cnVcIiB9LCBcIk5hdXJ1XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5lcGFsXCIgfSwgXCJOZXBhbFwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJOZXRoZXJsYW5kc1wiIH0sIFwiTmV0aGVybGFuZHNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTmV0aGVybGFuZHMgQW50aWxsZXNcIiB9LCBcIk5ldGhlcmxhbmRzIEFudGlsbGVzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5ldyBDYWxlZG9uaWFcIiB9LCBcIk5ldyBDYWxlZG9uaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTmV3IFplYWxhbmRcIiB9LCBcIk5ldyBaZWFsYW5kXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5pY2FyYWd1YVwiIH0sIFwiTmljYXJhZ3VhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5pZ2VyXCIgfSwgXCJOaWdlclwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJOaWdlcmlhXCIgfSwgXCJOaWdlcmlhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5pdWVcIiB9LCBcIk5pdWVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiTm9yZm9sayBJc2xhbmRcIiB9LCBcIk5vcmZvbGsgSXNsYW5kXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5vcnRoZXJuIE1hcmlhbmEgSXNsYW5kc1wiIH0sIFwiTm9ydGhlcm4gTWFyaWFuYSBJc2xhbmRzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk5vcndheVwiIH0sIFwiTm9yd2F5XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIk9tYW5cIiB9LCBcIk9tYW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiUGFraXN0YW5cIiB9LCBcIlBha2lzdGFuXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlBhbGF1XCIgfSwgXCJQYWxhdVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJQYWxlc3RpbmlhbiBUZXJyaXRvcnksIE9jY3VwaWVkXCIgfSwgXCJQYWxlc3RpbmlhbiBUZXJyaXRvcnksIE9jY3VwaWVkXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlBhbmFtYVwiIH0sIFwiUGFuYW1hXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlBhcHVhIE5ldyBHdWluZWFcIiB9LCBcIlBhcHVhIE5ldyBHdWluZWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiUGFyYWd1YXlcIiB9LCBcIlBhcmFndWF5XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlBlcnVcIiB9LCBcIlBlcnVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiUGhpbGlwcGluZXNcIiB9LCBcIlBoaWxpcHBpbmVzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlBpdGNhaXJuXCIgfSwgXCJQaXRjYWlyblwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJQb2xhbmRcIiB9LCBcIlBvbGFuZFwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJQb3J0dWdhbFwiIH0sIFwiUG9ydHVnYWxcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiUHVlcnRvIFJpY29cIiB9LCBcIlB1ZXJ0byBSaWNvXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlFhdGFyXCIgfSwgXCJRYXRhclwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJSZXVuaW9uXCIgfSwgXCJSZXVuaW9uXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlJvbWFuaWFcIiB9LCBcIlJvbWFuaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiUnVzc2lhbiBGZWRlcmF0aW9uXCIgfSwgXCJSdXNzaWFuIEZlZGVyYXRpb25cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiUndhbmRhXCIgfSwgXCJSd2FuZGFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU2FpbnQgSGVsZW5hXCIgfSwgXCJTYWludCBIZWxlbmFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU2FpbnQgS2l0dHMgYW5kIE5ldmlzXCIgfSwgXCJTYWludCBLaXR0cyBhbmQgTmV2aXNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU2FpbnQgTHVjaWFcIiB9LCBcIlNhaW50IEx1Y2lhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlNhaW50IFBpZXJyZSBhbmQgTWlxdWVsb25cIiB9LCBcIlNhaW50IFBpZXJyZSBhbmQgTWlxdWVsb25cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU2FpbnQgVmluY2VudCBhbmQgVGhlIEdyZW5hZGluZXNcIiB9LCBcIlNhaW50IFZpbmNlbnQgYW5kIFRoZSBHcmVuYWRpbmVzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlNhbW9hXCIgfSwgXCJTYW1vYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJTYW4gTWFyaW5vXCIgfSwgXCJTYW4gTWFyaW5vXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlNhbyBUb21lIGFuZCBQcmluY2lwZVwiIH0sIFwiU2FvIFRvbWUgYW5kIFByaW5jaXBlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlNhdWRpIEFyYWJpYVwiIH0sIFwiU2F1ZGkgQXJhYmlhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlNlbmVnYWxcIiB9LCBcIlNlbmVnYWxcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU2VyYmlhIGFuZCBNb250ZW5lZ3JvXCIgfSwgXCJTZXJiaWEgYW5kIE1vbnRlbmVncm9cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU2V5Y2hlbGxlc1wiIH0sIFwiU2V5Y2hlbGxlc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJTaWVycmEgTGVvbmVcIiB9LCBcIlNpZXJyYSBMZW9uZVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJTaW5nYXBvcmVcIiB9LCBcIlNpbmdhcG9yZVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJTbG92YWtpYVwiIH0sIFwiU2xvdmFraWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU2xvdmVuaWFcIiB9LCBcIlNsb3ZlbmlhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlNvbG9tb24gSXNsYW5kc1wiIH0sIFwiU29sb21vbiBJc2xhbmRzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlNvbWFsaWFcIiB9LCBcIlNvbWFsaWFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU291dGggQWZyaWNhXCIgfSwgXCJTb3V0aCBBZnJpY2FcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU291dGggR2VvcmdpYSBhbmQgVGhlIFNvdXRoIFNhbmR3aWNoIElzbGFuZHNcIiB9LCBcIlNvdXRoIEdlb3JnaWEgYW5kIFRoZSBTb3V0aCBTYW5kd2ljaCBJc2xhbmRzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlNwYWluXCIgfSwgXCJTcGFpblwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJTcmkgTGFua2FcIiB9LCBcIlNyaSBMYW5rYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJTdWRhblwiIH0sIFwiU3VkYW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU3VyaW5hbWVcIiB9LCBcIlN1cmluYW1lXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlN2YWxiYXJkIGFuZCBKYW4gTWF5ZW5cIiB9LCBcIlN2YWxiYXJkIGFuZCBKYW4gTWF5ZW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU3dhemlsYW5kXCIgfSwgXCJTd2F6aWxhbmRcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU3dlZGVuXCIgfSwgXCJTd2VkZW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiU3dpdHplcmxhbmRcIiB9LCBcIlN3aXR6ZXJsYW5kXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlN5cmlhbiBBcmFiIFJlcHVibGljXCIgfSwgXCJTeXJpYW4gQXJhYiBSZXB1YmxpY1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJUYWl3YW4sIFByb3ZpbmNlIG9mIENoaW5hXCIgfSwgXCJUYWl3YW4sIFByb3ZpbmNlIG9mIENoaW5hXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlRhamlraXN0YW5cIiB9LCBcIlRhamlraXN0YW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiVGFuemFuaWEsIFVuaXRlZCBSZXB1YmxpYyBvZlwiIH0sIFwiVGFuemFuaWEsIFVuaXRlZCBSZXB1YmxpYyBvZlwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJUaGFpbGFuZFwiIH0sIFwiVGhhaWxhbmRcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiVGltb3ItbGVzdGVcIiB9LCBcIlRpbW9yLWxlc3RlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlRvZ29cIiB9LCBcIlRvZ29cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiVG9rZWxhdVwiIH0sIFwiVG9rZWxhdVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJUb25nYVwiIH0sIFwiVG9uZ2FcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiVHJpbmlkYWQgYW5kIFRvYmFnb1wiIH0sIFwiVHJpbmlkYWQgYW5kIFRvYmFnb1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJUdW5pc2lhXCIgfSwgXCJUdW5pc2lhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlR1cmtleVwiIH0sIFwiVHVya2V5XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlR1cmttZW5pc3RhblwiIH0sIFwiVHVya21lbmlzdGFuXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlR1cmtzIGFuZCBDYWljb3MgSXNsYW5kc1wiIH0sIFwiVHVya3MgYW5kIENhaWNvcyBJc2xhbmRzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlR1dmFsdVwiIH0sIFwiVHV2YWx1XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlVnYW5kYVwiIH0sIFwiVWdhbmRhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlVrcmFpbmVcIiB9LCBcIlVrcmFpbmVcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiVW5pdGVkIEFyYWIgRW1pcmF0ZXNcIiB9LCBcIlVuaXRlZCBBcmFiIEVtaXJhdGVzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlVuaXRlZCBLaW5nZG9tXCIgfSwgXCJVbml0ZWQgS2luZ2RvbVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJVbml0ZWQgU3RhdGVzXCIsIHNlbGVjdGVkOiB0cnVlIH0sIFwiVW5pdGVkIFN0YXRlc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJVbml0ZWQgU3RhdGVzIE1pbm9yIE91dGx5aW5nIElzbGFuZHNcIiB9LCBcIlVuaXRlZCBTdGF0ZXMgTWlub3IgT3V0bHlpbmcgSXNsYW5kc1wiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJVcnVndWF5XCIgfSwgXCJVcnVndWF5XCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlV6YmVraXN0YW5cIiB9LCBcIlV6YmVraXN0YW5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiVmFudWF0dVwiIH0sIFwiVmFudWF0dVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJWZW5lenVlbGFcIiB9LCBcIlZlbmV6dWVsYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJWaWV0IE5hbVwiIH0sIFwiVmlldCBOYW1cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiVmlyZ2luIElzbGFuZHMsIEJyaXRpc2hcIiB9LCBcIlZpcmdpbiBJc2xhbmRzLCBCcml0aXNoXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlZpcmdpbiBJc2xhbmRzLCBVLlMuXCIgfSwgXCJWaXJnaW4gSXNsYW5kcywgVS5TLlwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJXYWxsaXMgYW5kIEZ1dHVuYVwiIH0sIFwiV2FsbGlzIGFuZCBGdXR1bmFcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIHsgdmFsdWU6IFwiV2VzdGVybiBTYWhhcmFcIiB9LCBcIldlc3Rlcm4gU2FoYXJhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiLCB7IHZhbHVlOiBcIlllbWVuXCIgfSwgXCJZZW1lblwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJaYW1iaWFcIiB9LCBcIlphbWJpYVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIiwgeyB2YWx1ZTogXCJaaW1iYWJ3ZVwiIH0sIFwiWmltYmFid2VcIikpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgeyB0eXBlOiBcInRleHRcIiwgaWQ6IFwiemlwXCIsIG5hbWU6IFwiemlwXCIsIHBsYWNlaG9sZGVyOiBcIlpJUFwiLCBvbktleVByZXNzOiBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIS9bMC05XS8udGVzdChldmVudC5rZXkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgbWF4TGVuZ3RoOiA1IH0pKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHsgY2xhc3NOYW1lOiAnc3VibWl0JywgaWQ6ICdzdWJtaXQtYnRuJywgdGl0bGU6ICdZb3UgZG8gbm90IG5lZWQgdG8gZmlsbCBpbiB0aGUgYWJvdmUgaW5mb3JtYXRpb24hJyB9LCBcIlBheSAkMC4wMFwiKSkpKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBTdHJpYmU7XHJcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIFJlYWN0RE9NID0gcmVxdWlyZShcInJlYWN0LWRvbVwiKTtcclxudmFyIGFwcF8xID0gcmVxdWlyZShcIi4vYXBwXCIpO1xyXG5SZWFjdERPTS5yZW5kZXIoUmVhY3QuY3JlYXRlRWxlbWVudChhcHBfMS5kZWZhdWx0LCBudWxsKSwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Jvb3QnKSk7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=